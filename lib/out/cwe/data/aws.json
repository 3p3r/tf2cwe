{
  "accessanalyzer": {
    "analyzer": {
      "create": [
        { "service": "AccessAnalyzer", "action": "CreateAnalyzer" },
        { "service": "AccessAnalyzer", "action": "CreateAnalyzer" },
        { "service": "AccessAnalyzer", "action": "GetAnalyzer" }
      ],
      "read": [{ "service": "AccessAnalyzer", "action": "GetAnalyzer" }],
      "update": [],
      "delete": [{ "service": "AccessAnalyzer", "action": "DeleteAnalyzer" }]
    },
    "archive_rule": {
      "create": [
        { "service": "AccessAnalyzer", "action": "CreateArchiveRule" },
        { "service": "AccessAnalyzer", "action": "GetArchiveRule" }
      ],
      "read": [{ "service": "AccessAnalyzer", "action": "GetArchiveRule" }],
      "update": [
        { "service": "AccessAnalyzer", "action": "UpdateArchiveRule" },
        { "service": "AccessAnalyzer", "action": "GetArchiveRule" }
      ],
      "delete": [{ "service": "AccessAnalyzer", "action": "DeleteArchiveRule" }]
    }
  },
  "account": {
    "alternate_contact": {
      "create": [
        { "service": "Account", "action": "PutAlternateContact" },
        { "service": "Account", "action": "GetAlternateContact" }
      ],
      "read": [{ "service": "Account", "action": "GetAlternateContact" }],
      "update": [
        { "service": "Account", "action": "PutAlternateContact" },
        { "service": "Account", "action": "GetAlternateContact" }
      ],
      "delete": [
        { "service": "Account", "action": "DeleteAlternateContact" },
        { "service": "Account", "action": "GetAlternateContact" }
      ]
    }
  },
  "acm": {
    "certificate": {
      "create": [
        { "service": "ACM", "action": "RequestCertificate" },
        { "service": "ACM", "action": "ImportCertificate" },
        { "service": "ACM", "action": "DescribeCertificate" }
      ],
      "read": [{ "service": "ACM", "action": "DescribeCertificate" }],
      "update": [
        { "service": "ACM", "action": "ImportCertificate" },
        { "service": "ACM", "action": "RenewCertificate" },
        { "service": "ACM", "action": "DescribeCertificate" },
        { "service": "ACM", "action": "UpdateCertificateOptions" }
      ],
      "delete": [{ "service": "ACM", "action": "DeleteCertificate" }]
    },
    "certificate_validation": {
      "create": [{ "service": "ACM", "action": "DescribeCertificate" }],
      "read": [{ "service": "ACM", "action": "DescribeCertificate" }],
      "update": [],
      "delete": []
    }
  },
  "acmpca": {
    "certificate": {
      "create": [
        { "service": "ACMPCA", "action": "IssueCertificate" },
        { "service": "ACMPCA", "action": "IssueCertificate" },
        { "service": "ACMPCA", "action": "WaitUntilCertificateIssued" },
        { "service": "ACMPCA", "action": "GetCertificate" }
      ],
      "read": [{ "service": "ACMPCA", "action": "GetCertificate" }],
      "update": [],
      "delete": [{ "service": "ACMPCA", "action": "RevokeCertificate" }]
    },
    "certificate_authority": {
      "create": [
        { "service": "ACMPCA", "action": "CreateCertificateAuthority" },
        { "service": "ACMPCA", "action": "DescribeCertificateAuthority" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCertificate" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCsr" }
      ],
      "read": [
        { "service": "ACMPCA", "action": "DescribeCertificateAuthority" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCertificate" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCsr" }
      ],
      "update": [
        { "service": "ACMPCA", "action": "UpdateCertificateAuthority" },
        { "service": "ACMPCA", "action": "DescribeCertificateAuthority" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCertificate" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCsr" }
      ],
      "delete": [
        { "service": "ACMPCA", "action": "UpdateCertificateAuthority" },
        { "service": "ACMPCA", "action": "DeleteCertificateAuthority" }
      ]
    },
    "certificate_authority_certificate": {
      "create": [
        { "service": "ACMPCA", "action": "ImportCertificateAuthorityCertificate" },
        { "service": "ACMPCA", "action": "GetCertificateAuthorityCertificate" }
      ],
      "read": [{ "service": "ACMPCA", "action": "GetCertificateAuthorityCertificate" }],
      "update": [],
      "delete": []
    },
    "permission": {
      "create": [
        { "service": "ACMPCA", "action": "CreatePermission" },
        { "service": "ACMPCA", "action": "ListPermissions" }
      ],
      "read": [{ "service": "ACMPCA", "action": "ListPermissions" }],
      "update": [],
      "delete": [{ "service": "ACMPCA", "action": "DeletePermission" }]
    },
    "policy": {
      "create": [
        { "service": "ACMPCA", "action": "PutPolicy" },
        { "service": "ACMPCA", "action": "GetPolicy" }
      ],
      "read": [{ "service": "ACMPCA", "action": "GetPolicy" }],
      "update": [],
      "delete": [{ "service": "ACMPCA", "action": "DeletePolicy" }]
    }
  },
  "amp": {
    "prometheus_alert_manager_definition": {
      "create": [
        { "service": "AMP", "action": "CreateAlertManagerDefinition" },
        { "service": "AMP", "action": "DescribeAlertManagerDefinition" }
      ],
      "read": [{ "service": "AMP", "action": "DescribeAlertManagerDefinition" }],
      "update": [
        { "service": "AMP", "action": "PutAlertManagerDefinition" },
        { "service": "AMP", "action": "DescribeAlertManagerDefinition" }
      ],
      "delete": [
        { "service": "AMP", "action": "DeleteAlertManagerDefinition" },
        { "service": "AMP", "action": "DescribeAlertManagerDefinition" }
      ]
    },
    "prometheus_rule_group_namespace": {
      "create": [
        { "service": "AMP", "action": "CreateRuleGroupsNamespace" },
        { "service": "AMP", "action": "DescribeRuleGroupsNamespace" }
      ],
      "read": [{ "service": "AMP", "action": "DescribeRuleGroupsNamespace" }],
      "update": [
        { "service": "AMP", "action": "PutRuleGroupsNamespace" },
        { "service": "AMP", "action": "DescribeRuleGroupsNamespace" }
      ],
      "delete": [
        { "service": "AMP", "action": "DeleteRuleGroupsNamespace" },
        { "service": "AMP", "action": "DescribeRuleGroupsNamespace" }
      ]
    },
    "prometheus_workspace": {
      "create": [
        { "service": "AMP", "action": "CreateWorkspace" },
        { "service": "AMP", "action": "DescribeWorkspace" },
        { "service": "AMP", "action": "CreateLoggingConfiguration" },
        { "service": "AMP", "action": "DescribeLoggingConfiguration" }
      ],
      "read": [
        { "service": "AMP", "action": "DescribeWorkspace" },
        { "service": "AMP", "action": "DescribeLoggingConfiguration" }
      ],
      "update": [
        { "service": "AMP", "action": "UpdateWorkspaceAlias" },
        { "service": "AMP", "action": "DescribeWorkspace" },
        { "service": "AMP", "action": "CreateLoggingConfiguration" },
        { "service": "AMP", "action": "DescribeLoggingConfiguration" },
        { "service": "AMP", "action": "UpdateLoggingConfiguration" },
        { "service": "AMP", "action": "DeleteLoggingConfiguration" }
      ],
      "delete": [
        { "service": "AMP", "action": "DeleteWorkspace" },
        { "service": "AMP", "action": "DescribeWorkspace" }
      ]
    }
  },
  "amplify": {
    "app": {
      "create": [
        { "service": "Amplify", "action": "CreateApp" },
        { "service": "Amplify", "action": "GetApp" }
      ],
      "read": [{ "service": "Amplify", "action": "GetApp" }],
      "update": [
        { "service": "Amplify", "action": "UpdateApp" },
        { "service": "Amplify", "action": "GetApp" }
      ],
      "delete": [{ "service": "Amplify", "action": "DeleteApp" }]
    },
    "backend_environment": {
      "create": [
        { "service": "Amplify", "action": "CreateBackendEnvironment" },
        { "service": "Amplify", "action": "GetBackendEnvironment" }
      ],
      "read": [{ "service": "Amplify", "action": "GetBackendEnvironment" }],
      "update": [],
      "delete": [{ "service": "Amplify", "action": "DeleteBackendEnvironment" }]
    },
    "branch": {
      "create": [
        { "service": "Amplify", "action": "CreateBranch" },
        { "service": "Amplify", "action": "GetBranch" }
      ],
      "read": [{ "service": "Amplify", "action": "GetBranch" }],
      "update": [
        { "service": "Amplify", "action": "UpdateBranch" },
        { "service": "Amplify", "action": "GetBranch" }
      ],
      "delete": [{ "service": "Amplify", "action": "DeleteBranch" }]
    },
    "domain_association": {
      "create": [
        { "service": "Amplify", "action": "CreateDomainAssociation" },
        { "service": "Amplify", "action": "GetDomainAssociation" }
      ],
      "read": [{ "service": "Amplify", "action": "GetDomainAssociation" }],
      "update": [
        { "service": "Amplify", "action": "UpdateDomainAssociation" },
        { "service": "Amplify", "action": "GetDomainAssociation" }
      ],
      "delete": [{ "service": "Amplify", "action": "DeleteDomainAssociation" }]
    },
    "webhook": {
      "create": [
        { "service": "Amplify", "action": "CreateWebhook" },
        { "service": "Amplify", "action": "GetWebhook" }
      ],
      "read": [{ "service": "Amplify", "action": "GetWebhook" }],
      "update": [
        { "service": "Amplify", "action": "UpdateWebhook" },
        { "service": "Amplify", "action": "GetWebhook" }
      ],
      "delete": [{ "service": "Amplify", "action": "DeleteWebhook" }]
    }
  },
  "apigateway": {
    "api_gateway_account": {
      "create": [
        { "service": "APIGateway", "action": "UpdateAccount" },
        { "service": "APIGateway", "action": "GetAccount" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetAccount" }],
      "update": [],
      "delete": []
    },
    "api_gateway_api_key": {
      "create": [
        { "service": "APIGateway", "action": "CreateApiKey" },
        { "service": "APIGateway", "action": "GetApiKey" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetApiKey" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateApiKey" },
        { "service": "APIGateway", "action": "GetApiKey" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteApiKey" }]
    },
    "api_gateway_authorizer": {
      "create": [
        { "service": "APIGateway", "action": "CreateAuthorizer" },
        { "service": "APIGateway", "action": "UpdateAuthorizer" },
        { "service": "APIGateway", "action": "GetAuthorizer" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetAuthorizer" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateAuthorizer" },
        { "service": "APIGateway", "action": "GetAuthorizer" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteAuthorizer" }]
    },
    "api_gateway_base_path_mapping": {
      "create": [
        { "service": "APIGateway", "action": "CreateBasePathMapping" },
        { "service": "APIGateway", "action": "CreateBasePathMapping" },
        { "service": "APIGateway", "action": "GetBasePathMapping" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetBasePathMapping" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateBasePathMapping" },
        { "service": "APIGateway", "action": "GetBasePathMapping" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteBasePathMapping" }]
    },
    "api_gateway_client_certificate": {
      "create": [
        { "service": "APIGateway", "action": "GenerateClientCertificate" },
        { "service": "APIGateway", "action": "GetClientCertificate" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetClientCertificate" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateClientCertificate" },
        { "service": "APIGateway", "action": "GetClientCertificate" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteClientCertificate" }]
    },
    "api_gateway_deployment": {
      "create": [
        { "service": "APIGateway", "action": "CreateDeployment" },
        { "service": "APIGateway", "action": "GetDeployment" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetDeployment" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateDeployment" },
        { "service": "APIGateway", "action": "GetDeployment" }
      ],
      "delete": [
        { "service": "APIGateway", "action": "GetStage" },
        { "service": "APIGateway", "action": "DeleteStage" },
        { "service": "APIGateway", "action": "DeleteDeployment" }
      ]
    },
    "api_gateway_documentation_part": {
      "create": [{ "service": "APIGateway", "action": "CreateDocumentationPart" }],
      "read": [{ "service": "APIGateway", "action": "GetDocumentationPart" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateDocumentationPart" },
        { "service": "APIGateway", "action": "GetDocumentationPart" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteDocumentationPart" }]
    },
    "api_gateway_documentation_version": {
      "create": [
        { "service": "APIGateway", "action": "CreateDocumentationVersion" },
        { "service": "APIGateway", "action": "GetDocumentationVersion" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetDocumentationVersion" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateDocumentationVersion" },
        { "service": "APIGateway", "action": "GetDocumentationVersion" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteDocumentationVersion" }]
    },
    "api_gateway_domain_name": {
      "create": [
        { "service": "APIGateway", "action": "CreateDomainName" },
        { "service": "APIGateway", "action": "GetDomainName" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetDomainName" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateDomainName" },
        { "service": "APIGateway", "action": "GetDomainName" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteDomainName" }]
    },
    "api_gateway_gateway_response": {
      "create": [
        { "service": "APIGateway", "action": "PutGatewayResponse" },
        { "service": "APIGateway", "action": "GetGatewayResponse" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetGatewayResponse" }],
      "update": [],
      "delete": [{ "service": "APIGateway", "action": "DeleteGatewayResponse" }]
    },
    "api_gateway_integration": {
      "create": [
        { "service": "APIGateway", "action": "PutIntegration" },
        { "service": "APIGateway", "action": "GetIntegration" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetIntegration" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateIntegration" },
        { "service": "APIGateway", "action": "GetIntegration" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteIntegration" }]
    },
    "api_gateway_integration_response": {
      "create": [
        { "service": "APIGateway", "action": "PutIntegrationResponse" },
        { "service": "APIGateway", "action": "GetIntegrationResponse" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetIntegrationResponse" }],
      "update": [],
      "delete": [{ "service": "APIGateway", "action": "DeleteIntegrationResponse" }]
    },
    "api_gateway_method": {
      "create": [{ "service": "APIGateway", "action": "PutMethod" }],
      "read": [{ "service": "APIGateway", "action": "GetMethod" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateMethod" },
        { "service": "APIGateway", "action": "GetIntegration" },
        { "service": "APIGateway", "action": "UpdateIntegration" },
        { "service": "APIGateway", "action": "GetMethod" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteMethod" }]
    },
    "api_gateway_method_response": {
      "create": [{ "service": "APIGateway", "action": "PutMethodResponse" }],
      "read": [{ "service": "APIGateway", "action": "GetMethodResponse" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateMethodResponse" },
        { "service": "APIGateway", "action": "GetMethodResponse" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteMethodResponse" }]
    },
    "api_gateway_method_settings": {
      "create": [
        { "service": "APIGateway", "action": "UpdateStage" },
        { "service": "APIGateway", "action": "GetStage" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetStage" }],
      "update": [],
      "delete": [{ "service": "APIGateway", "action": "UpdateStage" }]
    },
    "api_gateway_model": {
      "create": [{ "service": "APIGateway", "action": "CreateModel" }],
      "read": [{ "service": "APIGateway", "action": "GetModel" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateModel" },
        { "service": "APIGateway", "action": "GetModel" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteModel" }]
    },
    "api_gateway_request_validator": {
      "create": [{ "service": "APIGateway", "action": "CreateRequestValidator" }],
      "read": [{ "service": "APIGateway", "action": "GetRequestValidator" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateRequestValidator" },
        { "service": "APIGateway", "action": "GetRequestValidator" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteRequestValidator" }]
    },
    "api_gateway_resource": {
      "create": [
        { "service": "APIGateway", "action": "CreateResource" },
        { "service": "APIGateway", "action": "GetResource" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetResource" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateResource" },
        { "service": "APIGateway", "action": "GetResource" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteResource" }]
    },
    "api_gateway_rest_api": {
      "create": [
        { "service": "APIGateway", "action": "CreateRestApi" },
        { "service": "APIGateway", "action": "PutRestApi" },
        { "service": "APIGateway", "action": "UpdateRestApi" },
        { "service": "APIGateway", "action": "GetRestApi" },
        { "service": "APIGateway", "action": "GetResources" }
      ],
      "read": [
        { "service": "APIGateway", "action": "GetRestApi" },
        { "service": "APIGateway", "action": "GetResources" }
      ],
      "update": [
        { "service": "APIGateway", "action": "UpdateRestApi" },
        { "service": "APIGateway", "action": "PutRestApi" },
        { "service": "APIGateway", "action": "UpdateRestApi" },
        { "service": "APIGateway", "action": "GetRestApi" },
        { "service": "APIGateway", "action": "GetResources" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteRestApi" }]
    },
    "api_gateway_rest_api_policy": {
      "create": [
        { "service": "APIGateway", "action": "UpdateRestApi" },
        { "service": "APIGateway", "action": "GetRestApi" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetRestApi" }],
      "update": [],
      "delete": [{ "service": "APIGateway", "action": "UpdateRestApi" }]
    },
    "api_gateway_stage": {
      "create": [
        { "service": "APIGateway", "action": "CreateStage" },
        { "service": "APIGateway", "action": "GetStage" },
        { "service": "APIGateway", "action": "UpdateStage" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetStage" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateStage" },
        { "service": "APIGateway", "action": "GetStage" }
      ],
      "delete": [{ "service": "APIGateway", "action": "DeleteStage" }]
    },
    "api_gateway_usage_plan": {
      "create": [
        { "service": "APIGateway", "action": "CreateUsagePlan" },
        { "service": "APIGateway", "action": "UpdateUsagePlan" },
        { "service": "APIGateway", "action": "GetUsagePlan" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetUsagePlan" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateUsagePlan" },
        { "service": "APIGateway", "action": "GetUsagePlan" }
      ],
      "delete": [
        { "service": "APIGateway", "action": "UpdateUsagePlan" },
        { "service": "APIGateway", "action": "DeleteUsagePlan" }
      ]
    },
    "api_gateway_usage_plan_key": {
      "create": [
        { "service": "APIGateway", "action": "CreateUsagePlanKey" },
        { "service": "APIGateway", "action": "GetUsagePlanKey" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetUsagePlanKey" }],
      "update": [],
      "delete": [{ "service": "APIGateway", "action": "DeleteUsagePlanKey" }]
    },
    "api_gateway_vpc_link": {
      "create": [
        { "service": "APIGateway", "action": "CreateVpcLink" },
        { "service": "APIGateway", "action": "GetVpcLink" },
        { "service": "APIGateway", "action": "GetVpcLink" }
      ],
      "read": [{ "service": "APIGateway", "action": "GetVpcLink" }],
      "update": [
        { "service": "APIGateway", "action": "UpdateVpcLink" },
        { "service": "APIGateway", "action": "GetVpcLink" },
        { "service": "APIGateway", "action": "GetVpcLink" }
      ],
      "delete": [
        { "service": "APIGateway", "action": "DeleteVpcLink" },
        { "service": "APIGateway", "action": "GetVpcLink" }
      ]
    }
  },
  "apigatewayv2": {
    "api": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateApi" },
        { "service": "APIGatewayV2", "action": "ReimportApi" },
        { "service": "APIGatewayV2", "action": "GetApi" },
        { "service": "APIGatewayV2", "action": "DeleteCorsConfiguration" },
        { "service": "APIGatewayV2", "action": "UpdateApi" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetApi" }],
      "update": [
        { "service": "APIGatewayV2", "action": "DeleteCorsConfiguration" },
        { "service": "APIGatewayV2", "action": "UpdateApi" },
        { "service": "APIGatewayV2", "action": "ReimportApi" },
        { "service": "APIGatewayV2", "action": "GetApi" },
        { "service": "APIGatewayV2", "action": "DeleteCorsConfiguration" },
        { "service": "APIGatewayV2", "action": "UpdateApi" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteApi" }]
    },
    "api_mapping": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateApiMapping" },
        { "service": "APIGatewayV2", "action": "GetApiMapping" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetApiMapping" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateApiMapping" },
        { "service": "APIGatewayV2", "action": "GetApiMapping" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteApiMapping" }]
    },
    "authorizer": {
      "create": [
        { "service": "APIGatewayV2", "action": "GetApi" },
        { "service": "APIGatewayV2", "action": "CreateAuthorizer" },
        { "service": "APIGatewayV2", "action": "GetAuthorizer" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetAuthorizer" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateAuthorizer" },
        { "service": "APIGatewayV2", "action": "GetAuthorizer" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteAuthorizer" }]
    },
    "deployment": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateDeployment" },
        { "service": "APIGatewayV2", "action": "GetDeployment" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetDeployment" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateDeployment" },
        { "service": "APIGatewayV2", "action": "GetDeployment" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteDeployment" }]
    },
    "domain_name": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateDomainName" },
        { "service": "APIGatewayV2", "action": "GetDomainName" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetDomainName" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateDomainName" },
        { "service": "APIGatewayV2", "action": "GetDomainName" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteDomainName" }]
    },
    "integration": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateIntegration" },
        { "service": "APIGatewayV2", "action": "GetIntegration" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetIntegration" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateIntegration" },
        { "service": "APIGatewayV2", "action": "GetIntegration" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteIntegration" }]
    },
    "integration_response": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateIntegrationResponse" },
        { "service": "APIGatewayV2", "action": "GetIntegrationResponse" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetIntegrationResponse" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateIntegrationResponse" },
        { "service": "APIGatewayV2", "action": "GetIntegrationResponse" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteIntegrationResponse" }]
    },
    "model": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateModel" },
        { "service": "APIGatewayV2", "action": "GetModel" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetModel" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateModel" },
        { "service": "APIGatewayV2", "action": "GetModel" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteModel" }]
    },
    "route": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateRoute" },
        { "service": "APIGatewayV2", "action": "GetRoute" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetRoute" }],
      "update": [
        { "service": "APIGatewayV2", "action": "DeleteRouteRequestParameter" },
        { "service": "APIGatewayV2", "action": "UpdateRoute" },
        { "service": "APIGatewayV2", "action": "GetRoute" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteRoute" }]
    },
    "route_response": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateRouteResponse" },
        { "service": "APIGatewayV2", "action": "GetRouteResponse" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetRouteResponse" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateRouteResponse" },
        { "service": "APIGatewayV2", "action": "GetRouteResponse" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteRouteResponse" }]
    },
    "stage": {
      "create": [
        { "service": "APIGatewayV2", "action": "GetApi" },
        { "service": "APIGatewayV2", "action": "CreateStage" },
        { "service": "APIGatewayV2", "action": "GetStage" },
        { "service": "APIGatewayV2", "action": "GetApi" }
      ],
      "read": [
        { "service": "APIGatewayV2", "action": "GetStage" },
        { "service": "APIGatewayV2", "action": "GetApi" }
      ],
      "update": [
        { "service": "APIGatewayV2", "action": "GetApi" },
        { "service": "APIGatewayV2", "action": "DeleteRouteSettings" },
        { "service": "APIGatewayV2", "action": "UpdateStage" },
        { "service": "APIGatewayV2", "action": "GetStage" },
        { "service": "APIGatewayV2", "action": "GetApi" }
      ],
      "delete": [{ "service": "APIGatewayV2", "action": "DeleteStage" }]
    },
    "vpc_link": {
      "create": [
        { "service": "APIGatewayV2", "action": "CreateVpcLink" },
        { "service": "APIGatewayV2", "action": "GetVpcLink" }
      ],
      "read": [{ "service": "APIGatewayV2", "action": "GetVpcLink" }],
      "update": [
        { "service": "APIGatewayV2", "action": "UpdateVpcLink" },
        { "service": "APIGatewayV2", "action": "GetVpcLink" }
      ],
      "delete": [
        { "service": "APIGatewayV2", "action": "DeleteVpcLink" },
        { "service": "APIGatewayV2", "action": "GetVpcLink" }
      ]
    }
  },
  "appautoscaling": {
    "policy": {
      "create": [
        { "service": "AppAutoScaling", "action": "PutScalingPolicy" },
        { "service": "AppAutoScaling", "action": "PutScalingPolicy" },
        { "service": "AppAutoScaling", "action": "DescribeScalingPolicies" }
      ],
      "read": [],
      "update": [
        { "service": "AppAutoScaling", "action": "PutScalingPolicy" },
        { "service": "AppAutoScaling", "action": "PutScalingPolicy" },
        { "service": "AppAutoScaling", "action": "DescribeScalingPolicies" }
      ],
      "delete": [
        { "service": "AppAutoScaling", "action": "DescribeScalingPolicies" },
        { "service": "AppAutoScaling", "action": "DeleteScalingPolicy" },
        { "service": "AppAutoScaling", "action": "DeleteScalingPolicy" }
      ]
    },
    "scheduled_action": {
      "create": [
        { "service": "AppAutoScaling", "action": "PutScheduledAction" },
        { "service": "AppAutoScaling", "action": "PutScheduledAction" },
        { "service": "AppAutoScaling", "action": "DescribeScheduledActions" }
      ],
      "read": [{ "service": "AppAutoScaling", "action": "DescribeScheduledActions" }],
      "update": [],
      "delete": [{ "service": "AppAutoScaling", "action": "DeleteScheduledAction" }]
    },
    "target": {
      "create": [
        { "service": "AppAutoScaling", "action": "RegisterScalableTarget" },
        { "service": "AppAutoScaling", "action": "RegisterScalableTarget" },
        { "service": "AppAutoScaling", "action": "DescribeScalableTargets" }
      ],
      "read": [{ "service": "AppAutoScaling", "action": "DescribeScalableTargets" }],
      "update": [],
      "delete": [
        { "service": "AppAutoScaling", "action": "DeregisterScalableTarget" },
        { "service": "AppAutoScaling", "action": "DescribeScalableTargets" }
      ]
    }
  },
  "appconfig": {
    "application": {
      "create": [
        { "service": "AppConfig", "action": "CreateApplication" },
        { "service": "AppConfig", "action": "GetApplication" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetApplication" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateApplication" },
        { "service": "AppConfig", "action": "GetApplication" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteApplication" }]
    },
    "configuration_profile": {
      "create": [
        { "service": "AppConfig", "action": "CreateConfigurationProfile" },
        { "service": "AppConfig", "action": "GetConfigurationProfile" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetConfigurationProfile" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateConfigurationProfile" },
        { "service": "AppConfig", "action": "GetConfigurationProfile" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteConfigurationProfile" }]
    },
    "deployment": {
      "create": [
        { "service": "AppConfig", "action": "StartDeployment" },
        { "service": "AppConfig", "action": "GetDeployment" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetDeployment" }],
      "update": [],
      "delete": []
    },
    "deployment_strategy": {
      "create": [
        { "service": "AppConfig", "action": "CreateDeploymentStrategy" },
        { "service": "AppConfig", "action": "GetDeploymentStrategy" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetDeploymentStrategy" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateDeploymentStrategy" },
        { "service": "AppConfig", "action": "GetDeploymentStrategy" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteDeploymentStrategy" }]
    },
    "environment": {
      "create": [
        { "service": "AppConfig", "action": "CreateEnvironment" },
        { "service": "AppConfig", "action": "GetEnvironment" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetEnvironment" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateEnvironment" },
        { "service": "AppConfig", "action": "GetEnvironment" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteEnvironment" }]
    },
    "extension": {
      "create": [
        { "service": "AppConfig", "action": "CreateExtension" },
        { "service": "AppConfig", "action": "GetExtension" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetExtension" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateExtension" },
        { "service": "AppConfig", "action": "GetExtension" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteExtension" }]
    },
    "extension_association": {
      "create": [
        { "service": "AppConfig", "action": "CreateExtensionAssociation" },
        { "service": "AppConfig", "action": "GetExtensionAssociation" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetExtensionAssociation" }],
      "update": [
        { "service": "AppConfig", "action": "UpdateExtensionAssociation" },
        { "service": "AppConfig", "action": "GetExtensionAssociation" }
      ],
      "delete": [{ "service": "AppConfig", "action": "DeleteExtensionAssociation" }]
    },
    "hosted_configuration_version": {
      "create": [
        { "service": "AppConfig", "action": "CreateHostedConfigurationVersion" },
        { "service": "AppConfig", "action": "GetHostedConfigurationVersion" }
      ],
      "read": [{ "service": "AppConfig", "action": "GetHostedConfigurationVersion" }],
      "update": [],
      "delete": [{ "service": "AppConfig", "action": "DeleteHostedConfigurationVersion" }]
    }
  },
  "appflow": {
    "connector_profile": {
      "create": [
        { "service": "AppFlow", "action": "CreateConnectorProfile" },
        { "service": "AppFlow", "action": "DescribeConnectorProfiles" }
      ],
      "read": [{ "service": "AppFlow", "action": "DescribeConnectorProfiles" }],
      "update": [
        { "service": "AppFlow", "action": "UpdateConnectorProfile" },
        { "service": "AppFlow", "action": "DescribeConnectorProfiles" }
      ],
      "delete": [
        { "service": "AppFlow", "action": "DescribeConnectorProfiles" },
        { "service": "AppFlow", "action": "DeleteConnectorProfile" }
      ]
    },
    "flow": {
      "create": [
        { "service": "AppFlow", "action": "CreateFlow" },
        { "service": "AppFlow", "action": "ListFlows" },
        { "service": "AppFlow", "action": "DescribeFlow" }
      ],
      "read": [
        { "service": "AppFlow", "action": "ListFlows" },
        { "service": "AppFlow", "action": "DescribeFlow" }
      ],
      "update": [
        { "service": "AppFlow", "action": "UpdateFlow" },
        { "service": "AppFlow", "action": "ListFlows" },
        { "service": "AppFlow", "action": "DescribeFlow" }
      ],
      "delete": [
        { "service": "AppFlow", "action": "ListFlows" },
        { "service": "AppFlow", "action": "DeleteFlow" }
      ]
    }
  },
  "appintegrations": {
    "event_integration": {
      "create": [
        { "service": "AppIntegrations", "action": "CreateEventIntegration" },
        { "service": "AppIntegrations", "action": "GetEventIntegration" }
      ],
      "read": [{ "service": "AppIntegrations", "action": "GetEventIntegration" }],
      "update": [
        { "service": "AppIntegrations", "action": "UpdateEventIntegration" },
        { "service": "AppIntegrations", "action": "GetEventIntegration" }
      ],
      "delete": [{ "service": "AppIntegrations", "action": "DeleteEventIntegration" }]
    }
  },
  "applicationinsights": {
    "application": {
      "create": [
        { "service": "ApplicationInsights", "action": "CreateApplication" },
        { "service": "ApplicationInsights", "action": "DescribeApplication" }
      ],
      "read": [{ "service": "ApplicationInsights", "action": "DescribeApplication" }],
      "update": [
        { "service": "ApplicationInsights", "action": "UpdateApplication" },
        { "service": "ApplicationInsights", "action": "DescribeApplication" }
      ],
      "delete": [
        { "service": "ApplicationInsights", "action": "DeleteApplication" },
        { "service": "ApplicationInsights", "action": "DescribeApplication" }
      ]
    }
  },
  "appmesh": {
    "gateway_route": {
      "create": [
        { "service": "AppMesh", "action": "CreateGatewayRoute" },
        { "service": "AppMesh", "action": "DescribeGatewayRoute" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeGatewayRoute" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateGatewayRoute" },
        { "service": "AppMesh", "action": "DescribeGatewayRoute" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteGatewayRoute" }]
    },
    "mesh": {
      "create": [
        { "service": "AppMesh", "action": "CreateMesh" },
        { "service": "AppMesh", "action": "DescribeMesh" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeMesh" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateMesh" },
        { "service": "AppMesh", "action": "DescribeMesh" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteMesh" }]
    },
    "route": {
      "create": [
        { "service": "AppMesh", "action": "CreateRoute" },
        { "service": "AppMesh", "action": "DescribeRoute" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeRoute" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateRoute" },
        { "service": "AppMesh", "action": "DescribeRoute" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteRoute" }]
    },
    "virtual_gateway": {
      "create": [
        { "service": "AppMesh", "action": "CreateVirtualGateway" },
        { "service": "AppMesh", "action": "DescribeVirtualGateway" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeVirtualGateway" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateVirtualGateway" },
        { "service": "AppMesh", "action": "DescribeVirtualGateway" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteVirtualGateway" }]
    },
    "virtual_node": {
      "create": [
        { "service": "AppMesh", "action": "CreateVirtualNode" },
        { "service": "AppMesh", "action": "DescribeVirtualNode" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeVirtualNode" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateVirtualNode" },
        { "service": "AppMesh", "action": "DescribeVirtualNode" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteVirtualNode" }]
    },
    "virtual_router": {
      "create": [
        { "service": "AppMesh", "action": "CreateVirtualRouter" },
        { "service": "AppMesh", "action": "DescribeVirtualRouter" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeVirtualRouter" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateVirtualRouter" },
        { "service": "AppMesh", "action": "DescribeVirtualRouter" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteVirtualRouter" }]
    },
    "virtual_service": {
      "create": [
        { "service": "AppMesh", "action": "CreateVirtualService" },
        { "service": "AppMesh", "action": "DescribeVirtualService" }
      ],
      "read": [{ "service": "AppMesh", "action": "DescribeVirtualService" }],
      "update": [
        { "service": "AppMesh", "action": "UpdateVirtualService" },
        { "service": "AppMesh", "action": "DescribeVirtualService" }
      ],
      "delete": [{ "service": "AppMesh", "action": "DeleteVirtualService" }]
    }
  },
  "apprunner": {
    "auto_scaling_configuration_version": {
      "create": [
        { "service": "AppRunner", "action": "CreateAutoScalingConfiguration" },
        { "service": "AppRunner", "action": "DescribeAutoScalingConfiguration" },
        { "service": "AppRunner", "action": "DescribeAutoScalingConfiguration" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeAutoScalingConfiguration" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DeleteAutoScalingConfiguration" },
        { "service": "AppRunner", "action": "DescribeAutoScalingConfiguration" }
      ]
    },
    "connection": {
      "create": [
        { "service": "AppRunner", "action": "CreateConnection" },
        { "service": "AppRunner", "action": "ListConnections" }
      ],
      "read": [{ "service": "AppRunner", "action": "ListConnections" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DeleteConnection" },
        { "service": "AppRunner", "action": "ListConnections" }
      ]
    },
    "custom_domain_association": {
      "create": [
        { "service": "AppRunner", "action": "AssociateCustomDomain" },
        { "service": "AppRunner", "action": "DescribeCustomDomains" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeCustomDomains" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DisassociateCustomDomain" },
        { "service": "AppRunner", "action": "DescribeCustomDomains" }
      ]
    },
    "observability_configuration": {
      "create": [
        { "service": "AppRunner", "action": "CreateObservabilityConfiguration" },
        { "service": "AppRunner", "action": "DescribeObservabilityConfiguration" },
        { "service": "AppRunner", "action": "DescribeObservabilityConfiguration" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeObservabilityConfiguration" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DeleteObservabilityConfiguration" },
        { "service": "AppRunner", "action": "DescribeObservabilityConfiguration" }
      ]
    },
    "service": {
      "create": [
        { "service": "AppRunner", "action": "CreateService" },
        { "service": "AppRunner", "action": "CreateService" },
        { "service": "AppRunner", "action": "DescribeService" },
        { "service": "AppRunner", "action": "DescribeService" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeService" }],
      "update": [
        { "service": "AppRunner", "action": "UpdateService" },
        { "service": "AppRunner", "action": "DescribeService" },
        { "service": "AppRunner", "action": "DescribeService" }
      ],
      "delete": [
        { "service": "AppRunner", "action": "DeleteService" },
        { "service": "AppRunner", "action": "DescribeService" }
      ]
    },
    "vpc_connector": {
      "create": [
        { "service": "AppRunner", "action": "CreateVpcConnector" },
        { "service": "AppRunner", "action": "DescribeVpcConnector" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeVpcConnector" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DeleteVpcConnector" },
        { "service": "AppRunner", "action": "DescribeVpcConnector" }
      ]
    },
    "vpc_ingress_connection": {
      "create": [
        { "service": "AppRunner", "action": "CreateVpcIngressConnection" },
        { "service": "AppRunner", "action": "DescribeVpcIngressConnection" },
        { "service": "AppRunner", "action": "DescribeVpcIngressConnection" }
      ],
      "read": [{ "service": "AppRunner", "action": "DescribeVpcIngressConnection" }],
      "update": [],
      "delete": [
        { "service": "AppRunner", "action": "DeleteVpcIngressConnection" },
        { "service": "AppRunner", "action": "DescribeVpcIngressConnection" }
      ]
    }
  },
  "appstream": {
    "directory_config": {
      "create": [
        { "service": "AppStream", "action": "CreateDirectoryConfig" },
        { "service": "AppStream", "action": "DescribeDirectoryConfigs" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeDirectoryConfigs" }],
      "update": [
        { "service": "AppStream", "action": "UpdateDirectoryConfig" },
        { "service": "AppStream", "action": "DescribeDirectoryConfigs" }
      ],
      "delete": [{ "service": "AppStream", "action": "DeleteDirectoryConfig" }]
    },
    "fleet": {
      "create": [
        { "service": "AppStream", "action": "CreateFleet" },
        { "service": "AppStream", "action": "CreateFleet" },
        { "service": "AppStream", "action": "StartFleet" },
        { "service": "AppStream", "action": "DescribeFleets" },
        { "service": "AppStream", "action": "DescribeFleets" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeFleets" }],
      "update": [
        { "service": "AppStream", "action": "StopFleet" },
        { "service": "AppStream", "action": "DescribeFleets" },
        { "service": "AppStream", "action": "UpdateFleet" },
        { "service": "AppStream", "action": "StartFleet" },
        { "service": "AppStream", "action": "DescribeFleets" }
      ],
      "delete": [
        { "service": "AppStream", "action": "StopFleet" },
        { "service": "AppStream", "action": "DescribeFleets" },
        { "service": "AppStream", "action": "DeleteFleet" }
      ]
    },
    "fleet_stack_association": {
      "create": [
        { "service": "AppStream", "action": "AssociateFleet" },
        { "service": "AppStream", "action": "AssociateFleet" },
        { "service": "AppStream", "action": "ListAssociatedStacks" }
      ],
      "read": [{ "service": "AppStream", "action": "ListAssociatedStacks" }],
      "update": [],
      "delete": [{ "service": "AppStream", "action": "DisassociateFleet" }]
    },
    "image_builder": {
      "create": [
        { "service": "AppStream", "action": "CreateImageBuilder" },
        { "service": "AppStream", "action": "DescribeImageBuilders" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeImageBuilders" }],
      "update": [],
      "delete": [
        { "service": "AppStream", "action": "DeleteImageBuilder" },
        { "service": "AppStream", "action": "DescribeImageBuilders" }
      ]
    },
    "stack": {
      "create": [
        { "service": "AppStream", "action": "CreateStack" },
        { "service": "AppStream", "action": "CreateStack" },
        { "service": "AppStream", "action": "DescribeStacks" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeStacks" }],
      "update": [
        { "service": "AppStream", "action": "UpdateStack" },
        { "service": "AppStream", "action": "DescribeStacks" }
      ],
      "delete": [
        { "service": "AppStream", "action": "DeleteStack" },
        { "service": "AppStream", "action": "DescribeStacks" }
      ]
    },
    "user": {
      "create": [
        { "service": "AppStream", "action": "CreateUser" },
        { "service": "AppStream", "action": "DescribeUsers" },
        { "service": "AppStream", "action": "DisableUser" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeUsers" }],
      "update": [
        { "service": "AppStream", "action": "EnableUser" },
        { "service": "AppStream", "action": "DisableUser" }
      ],
      "delete": [{ "service": "AppStream", "action": "DeleteUser" }]
    },
    "user_stack_association": {
      "create": [
        { "service": "AppStream", "action": "BatchAssociateUserStack" },
        { "service": "AppStream", "action": "DescribeUserStackAssociations" }
      ],
      "read": [{ "service": "AppStream", "action": "DescribeUserStackAssociations" }],
      "update": [],
      "delete": [{ "service": "AppStream", "action": "BatchDisassociateUserStack" }]
    }
  },
  "appsync": {
    "api_cache": {
      "create": [
        { "service": "AppSync", "action": "CreateApiCache" },
        { "service": "AppSync", "action": "GetApiCache" }
      ],
      "read": [{ "service": "AppSync", "action": "GetApiCache" }],
      "update": [
        { "service": "AppSync", "action": "UpdateApiCache" },
        { "service": "AppSync", "action": "GetApiCache" }
      ],
      "delete": [
        { "service": "AppSync", "action": "DeleteApiCache" },
        { "service": "AppSync", "action": "GetApiCache" }
      ]
    },
    "api_key": {
      "create": [
        { "service": "AppSync", "action": "CreateApiKey" },
        { "service": "AppSync", "action": "ListApiKeys" }
      ],
      "read": [{ "service": "AppSync", "action": "ListApiKeys" }],
      "update": [
        { "service": "AppSync", "action": "UpdateApiKey" },
        { "service": "AppSync", "action": "ListApiKeys" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteApiKey" }]
    },
    "datasource": {
      "create": [
        { "service": "AppSync", "action": "CreateDataSource" },
        { "service": "AppSync", "action": "GetDataSource" }
      ],
      "read": [{ "service": "AppSync", "action": "GetDataSource" }],
      "update": [
        { "service": "AppSync", "action": "UpdateDataSource" },
        { "service": "AppSync", "action": "GetDataSource" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteDataSource" }]
    },
    "domain_name": {
      "create": [
        { "service": "AppSync", "action": "CreateDomainName" },
        { "service": "AppSync", "action": "GetDomainName" }
      ],
      "read": [{ "service": "AppSync", "action": "GetDomainName" }],
      "update": [
        { "service": "AppSync", "action": "UpdateDomainName" },
        { "service": "AppSync", "action": "GetDomainName" }
      ],
      "delete": [
        { "service": "AppSync", "action": "DeleteDomainName" },
        { "service": "AppSync", "action": "DeleteDomainName" }
      ]
    },
    "domain_name_api_association": {
      "create": [
        { "service": "AppSync", "action": "AssociateApi" },
        { "service": "AppSync", "action": "GetApiAssociation" }
      ],
      "read": [{ "service": "AppSync", "action": "GetApiAssociation" }],
      "update": [
        { "service": "AppSync", "action": "AssociateApi" },
        { "service": "AppSync", "action": "GetApiAssociation" }
      ],
      "delete": [
        { "service": "AppSync", "action": "DisassociateApi" },
        { "service": "AppSync", "action": "GetApiAssociation" }
      ]
    },
    "function": {
      "create": [
        { "service": "AppSync", "action": "CreateFunction" },
        { "service": "AppSync", "action": "GetFunction" }
      ],
      "read": [{ "service": "AppSync", "action": "GetFunction" }],
      "update": [
        { "service": "AppSync", "action": "UpdateFunction" },
        { "service": "AppSync", "action": "GetFunction" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteFunction" }]
    },
    "graphql_api": {
      "create": [
        { "service": "AppSync", "action": "CreateGraphqlApi" },
        { "service": "AppSync", "action": "StartSchemaCreation" },
        { "service": "AppSync", "action": "GetSchemaCreationStatus" },
        { "service": "AppSync", "action": "GetGraphqlApi" }
      ],
      "read": [{ "service": "AppSync", "action": "GetGraphqlApi" }],
      "update": [
        { "service": "AppSync", "action": "UpdateGraphqlApi" },
        { "service": "AppSync", "action": "StartSchemaCreation" },
        { "service": "AppSync", "action": "GetSchemaCreationStatus" },
        { "service": "AppSync", "action": "GetGraphqlApi" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteGraphqlApi" }]
    },
    "resolver": {
      "create": [
        { "service": "AppSync", "action": "CreateResolver" },
        { "service": "AppSync", "action": "GetResolver" }
      ],
      "read": [{ "service": "AppSync", "action": "GetResolver" }],
      "update": [
        { "service": "AppSync", "action": "UpdateResolver" },
        { "service": "AppSync", "action": "GetResolver" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteResolver" }]
    },
    "type": {
      "create": [
        { "service": "AppSync", "action": "CreateType" },
        { "service": "AppSync", "action": "GetType" }
      ],
      "read": [{ "service": "AppSync", "action": "GetType" }],
      "update": [
        { "service": "AppSync", "action": "UpdateType" },
        { "service": "AppSync", "action": "GetType" }
      ],
      "delete": [{ "service": "AppSync", "action": "DeleteType" }]
    }
  },
  "athena": {
    "data_catalog": {
      "create": [
        { "service": "Athena", "action": "CreateDataCatalog" },
        { "service": "Athena", "action": "GetDataCatalog" }
      ],
      "read": [{ "service": "Athena", "action": "GetDataCatalog" }],
      "update": [
        { "service": "Athena", "action": "UpdateDataCatalog" },
        { "service": "Athena", "action": "GetDataCatalog" }
      ],
      "delete": [{ "service": "Athena", "action": "DeleteDataCatalog" }]
    },
    "database": {
      "create": [
        { "service": "Athena", "action": "StartQueryExecution" },
        { "service": "Athena", "action": "GetQueryExecution" },
        { "service": "Athena", "action": "GetQueryResults" },
        { "service": "Athena", "action": "GetDatabase" }
      ],
      "read": [{ "service": "Athena", "action": "GetDatabase" }],
      "update": [],
      "delete": [
        { "service": "Athena", "action": "StartQueryExecution" },
        { "service": "Athena", "action": "GetQueryExecution" },
        { "service": "Athena", "action": "GetQueryResults" }
      ]
    },
    "named_query": {
      "create": [
        { "service": "Athena", "action": "CreateNamedQuery" },
        { "service": "Athena", "action": "GetNamedQuery" }
      ],
      "read": [{ "service": "Athena", "action": "GetNamedQuery" }],
      "update": [],
      "delete": [{ "service": "Athena", "action": "DeleteNamedQuery" }]
    },
    "workgroup": {
      "create": [
        { "service": "Athena", "action": "CreateWorkGroup" },
        { "service": "Athena", "action": "UpdateWorkGroup" },
        { "service": "Athena", "action": "GetWorkGroup" }
      ],
      "read": [{ "service": "Athena", "action": "GetWorkGroup" }],
      "update": [
        { "service": "Athena", "action": "UpdateWorkGroup" },
        { "service": "Athena", "action": "GetWorkGroup" }
      ],
      "delete": [{ "service": "Athena", "action": "DeleteWorkGroup" }]
    }
  },
  "autoscaling": {
    "attachment": {
      "create": [
        { "service": "AutoScaling", "action": "AttachLoadBalancers" },
        { "service": "AutoScaling", "action": "AttachLoadBalancerTargetGroups" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeAutoScalingGroups" }],
      "update": [],
      "delete": [
        { "service": "AutoScaling", "action": "DetachLoadBalancers" },
        { "service": "AutoScaling", "action": "DetachLoadBalancerTargetGroups" }
      ]
    },
    "group": {
      "create": [
        { "service": "AutoScaling", "action": "CreateAutoScalingGroup" },
        { "service": "AutoScaling", "action": "PutLifecycleHook" },
        { "service": "AutoScaling", "action": "UpdateAutoScalingGroup" },
        { "service": "AutoScaling", "action": "DescribeScalingActivities" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "SuspendProcesses" },
        { "service": "AutoScaling", "action": "EnableMetricsCollection" },
        { "service": "AutoScaling", "action": "PutWarmPool" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeAutoScalingGroups" }],
      "update": [
        { "service": "AutoScaling", "action": "UpdateAutoScalingGroup" },
        { "service": "AutoScaling", "action": "DetachLoadBalancers" },
        { "service": "AutoScaling", "action": "DescribeLoadBalancers" },
        { "service": "AutoScaling", "action": "AttachLoadBalancers" },
        { "service": "AutoScaling", "action": "DetachLoadBalancerTargetGroups" },
        { "service": "AutoScaling", "action": "DescribeLoadBalancerTargetGroups" },
        { "service": "AutoScaling", "action": "AttachLoadBalancerTargetGroups" },
        { "service": "AutoScaling", "action": "StartInstanceRefresh" },
        { "service": "AutoScaling", "action": "CancelInstanceRefresh" },
        { "service": "AutoScaling", "action": "DescribeInstanceRefreshes" },
        { "service": "AutoScaling", "action": "PutWarmPool" },
        { "service": "AutoScaling", "action": "DescribeWarmPool" },
        { "service": "AutoScaling", "action": "DeleteWarmPool" },
        { "service": "AutoScaling", "action": "PutWarmPool" },
        { "service": "AutoScaling", "action": "DescribeScalingActivities" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "DisableMetricsCollection" },
        { "service": "AutoScaling", "action": "EnableMetricsCollection" },
        { "service": "AutoScaling", "action": "ResumeProcesses" },
        { "service": "AutoScaling", "action": "SuspendProcesses" }
      ],
      "delete": [
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "PutWarmPool" },
        { "service": "AutoScaling", "action": "DescribeWarmPool" },
        { "service": "AutoScaling", "action": "DeleteWarmPool" },
        { "service": "AutoScaling", "action": "UpdateAutoScalingGroup" },
        { "service": "AutoScaling", "action": "SetInstanceProtection" },
        { "service": "AutoScaling", "action": "DeleteAutoScalingGroup" }
      ]
    },
    "group_tag": {
      "create": [{ "service": "AutoScaling", "action": "DescribeTags" }],
      "read": [{ "service": "AutoScaling", "action": "DescribeTags" }],
      "update": [{ "service": "AutoScaling", "action": "DescribeTags" }],
      "delete": []
    },
    "launch_configuration": {
      "create": [
        { "service": "AutoScaling", "action": "CreateLaunchConfiguration" },
        { "service": "AutoScaling", "action": "DescribeLaunchConfigurations" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeLaunchConfigurations" }],
      "update": [],
      "delete": [{ "service": "AutoScaling", "action": "DeleteLaunchConfiguration" }]
    },
    "lifecycle_hook": {
      "create": [
        { "service": "AutoScaling", "action": "PutLifecycleHook" },
        { "service": "AutoScaling", "action": "DescribeLifecycleHooks" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeLifecycleHooks" }],
      "update": [],
      "delete": [{ "service": "AutoScaling", "action": "DeleteLifecycleHook" }]
    },
    "notification": {
      "create": [
        { "service": "AutoScaling", "action": "PutNotificationConfiguration" },
        { "service": "AutoScaling", "action": "DescribeNotificationConfigurations" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeNotificationConfigurations" }],
      "update": [
        { "service": "AutoScaling", "action": "DeleteNotificationConfiguration" },
        { "service": "AutoScaling", "action": "PutNotificationConfiguration" },
        { "service": "AutoScaling", "action": "DescribeNotificationConfigurations" }
      ],
      "delete": [{ "service": "AutoScaling", "action": "DeleteNotificationConfiguration" }]
    },
    "policy": {
      "create": [
        { "service": "AutoScaling", "action": "PutScalingPolicy" },
        { "service": "AutoScaling", "action": "DescribePolicies" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribePolicies" }],
      "update": [
        { "service": "AutoScaling", "action": "PutScalingPolicy" },
        { "service": "AutoScaling", "action": "DescribePolicies" }
      ],
      "delete": [{ "service": "AutoScaling", "action": "DeletePolicy" }]
    },
    "schedule": {
      "create": [
        { "service": "AutoScaling", "action": "PutScheduledUpdateGroupAction" },
        { "service": "AutoScaling", "action": "DescribeScheduledActions" }
      ],
      "read": [{ "service": "AutoScaling", "action": "DescribeScheduledActions" }],
      "update": [],
      "delete": [{ "service": "AutoScaling", "action": "DeleteScheduledAction" }]
    }
  },
  "autoscalingplans": {
    "scaling_plan": {
      "create": [
        { "service": "AutoScalingPlans", "action": "CreateScalingPlan" },
        { "service": "AutoScalingPlans", "action": "DescribeScalingPlans" }
      ],
      "read": [{ "service": "AutoScalingPlans", "action": "DescribeScalingPlans" }],
      "update": [
        { "service": "AutoScalingPlans", "action": "UpdateScalingPlan" },
        { "service": "AutoScalingPlans", "action": "DescribeScalingPlans" }
      ],
      "delete": [
        { "service": "AutoScalingPlans", "action": "DeleteScalingPlan" },
        { "service": "AutoScalingPlans", "action": "DescribeScalingPlans" }
      ]
    }
  },
  "backup": {
    "framework": {
      "create": [
        { "service": "Backup", "action": "CreateFramework" },
        { "service": "Backup", "action": "DescribeFramework" },
        { "service": "Backup", "action": "DescribeFramework" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeFramework" }],
      "update": [
        { "service": "Backup", "action": "UpdateFramework" },
        { "service": "Backup", "action": "DescribeFramework" },
        { "service": "Backup", "action": "DescribeFramework" }
      ],
      "delete": [
        { "service": "Backup", "action": "DeleteFramework" },
        { "service": "Backup", "action": "DescribeFramework" }
      ]
    },
    "global_settings": {
      "create": [
        { "service": "Backup", "action": "UpdateGlobalSettings" },
        { "service": "Backup", "action": "DescribeGlobalSettings" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeGlobalSettings" }],
      "update": [],
      "delete": []
    },
    "plan": {
      "create": [
        { "service": "Backup", "action": "CreateBackupPlan" },
        { "service": "Backup", "action": "GetBackupPlan" }
      ],
      "read": [{ "service": "Backup", "action": "GetBackupPlan" }],
      "update": [
        { "service": "Backup", "action": "UpdateBackupPlan" },
        { "service": "Backup", "action": "GetBackupPlan" }
      ],
      "delete": [
        { "service": "Backup", "action": "DeleteBackupPlan" },
        { "service": "Backup", "action": "DeleteBackupPlan" }
      ]
    },
    "region_settings": {
      "create": [
        { "service": "Backup", "action": "UpdateRegionSettings" },
        { "service": "Backup", "action": "DescribeRegionSettings" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeRegionSettings" }],
      "update": [],
      "delete": []
    },
    "report_plan": {
      "create": [
        { "service": "Backup", "action": "CreateReportPlan" },
        { "service": "Backup", "action": "DescribeReportPlan" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeReportPlan" }],
      "update": [
        { "service": "Backup", "action": "UpdateReportPlan" },
        { "service": "Backup", "action": "DescribeReportPlan" }
      ],
      "delete": [
        { "service": "Backup", "action": "DeleteReportPlan" },
        { "service": "Backup", "action": "DescribeReportPlan" }
      ]
    },
    "selection": {
      "create": [
        { "service": "Backup", "action": "CreateBackupSelection" },
        { "service": "Backup", "action": "CreateBackupSelection" },
        { "service": "Backup", "action": "GetBackupSelection" },
        { "service": "Backup", "action": "GetBackupSelection" }
      ],
      "read": [
        { "service": "Backup", "action": "GetBackupSelection" },
        { "service": "Backup", "action": "GetBackupSelection" }
      ],
      "update": [],
      "delete": [{ "service": "Backup", "action": "DeleteBackupSelection" }]
    },
    "vault": {
      "create": [
        { "service": "Backup", "action": "CreateBackupVault" },
        { "service": "Backup", "action": "DescribeBackupVault" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeBackupVault" }],
      "update": [],
      "delete": [
        { "service": "Backup", "action": "ListRecoveryPointsByBackupVault" },
        { "service": "Backup", "action": "DeleteRecoveryPoint" },
        { "service": "Backup", "action": "DescribeRecoveryPoint" },
        { "service": "Backup", "action": "DeleteBackupVault" }
      ]
    },
    "vault_lock_configuration": {
      "create": [
        { "service": "Backup", "action": "PutBackupVaultLockConfiguration" },
        { "service": "Backup", "action": "DescribeBackupVault" }
      ],
      "read": [{ "service": "Backup", "action": "DescribeBackupVault" }],
      "update": [],
      "delete": [{ "service": "Backup", "action": "DeleteBackupVaultLockConfiguration" }]
    },
    "vault_notifications": {
      "create": [
        { "service": "Backup", "action": "PutBackupVaultNotifications" },
        { "service": "Backup", "action": "GetBackupVaultNotifications" }
      ],
      "read": [{ "service": "Backup", "action": "GetBackupVaultNotifications" }],
      "update": [],
      "delete": [{ "service": "Backup", "action": "DeleteBackupVaultNotifications" }]
    },
    "vault_policy": {
      "create": [
        { "service": "Backup", "action": "PutBackupVaultAccessPolicy" },
        { "service": "Backup", "action": "GetBackupVaultAccessPolicy" }
      ],
      "read": [{ "service": "Backup", "action": "GetBackupVaultAccessPolicy" }],
      "update": [],
      "delete": [{ "service": "Backup", "action": "DeleteBackupVaultAccessPolicy" }]
    }
  },
  "batch": {
    "compute_environment": {
      "create": [
        { "service": "Batch", "action": "CreateComputeEnvironment" },
        { "service": "Batch", "action": "DescribeComputeEnvironments" }
      ],
      "read": [{ "service": "Batch", "action": "DescribeComputeEnvironments" }],
      "update": [
        { "service": "Batch", "action": "UpdateComputeEnvironment" },
        { "service": "Batch", "action": "DescribeComputeEnvironments" }
      ],
      "delete": [
        { "service": "Batch", "action": "UpdateComputeEnvironment" },
        { "service": "Batch", "action": "DescribeComputeEnvironments" },
        { "service": "Batch", "action": "DeleteComputeEnvironment" }
      ]
    },
    "job_definition": {
      "create": [
        { "service": "Batch", "action": "RegisterJobDefinition" },
        { "service": "Batch", "action": "DescribeJobDefinitions" }
      ],
      "read": [{ "service": "Batch", "action": "DescribeJobDefinitions" }],
      "update": [],
      "delete": [{ "service": "Batch", "action": "DeregisterJobDefinition" }]
    },
    "job_queue": {
      "create": [
        { "service": "Batch", "action": "CreateJobQueue" },
        { "service": "Batch", "action": "DescribeJobQueues" }
      ],
      "read": [{ "service": "Batch", "action": "DescribeJobQueues" }],
      "update": [
        { "service": "Batch", "action": "UpdateJobQueue" },
        { "service": "Batch", "action": "DescribeJobQueues" }
      ],
      "delete": [
        { "service": "Batch", "action": "UpdateJobQueue" },
        { "service": "Batch", "action": "DescribeJobQueues" },
        { "service": "Batch", "action": "DeleteJobQueue" }
      ]
    },
    "scheduling_policy": {
      "create": [
        { "service": "Batch", "action": "CreateSchedulingPolicy" },
        { "service": "Batch", "action": "DescribeSchedulingPolicies" }
      ],
      "read": [{ "service": "Batch", "action": "DescribeSchedulingPolicies" }],
      "update": [
        { "service": "Batch", "action": "UpdateSchedulingPolicy" },
        { "service": "Batch", "action": "DescribeSchedulingPolicies" }
      ],
      "delete": [{ "service": "Batch", "action": "DeleteSchedulingPolicy" }]
    }
  },
  "budgets": {
    "budget": {
      "create": [
        { "service": "Budgets", "action": "CreateBudget" },
        { "service": "Budgets", "action": "CreateNotification" },
        { "service": "Budgets", "action": "DescribeBudget" },
        { "service": "Budgets", "action": "DescribeNotificationsForBudget" },
        { "service": "Budgets", "action": "DescribeSubscribersForNotification" }
      ],
      "read": [
        { "service": "Budgets", "action": "DescribeBudget" },
        { "service": "Budgets", "action": "DescribeNotificationsForBudget" },
        { "service": "Budgets", "action": "DescribeSubscribersForNotification" }
      ],
      "update": [
        { "service": "Budgets", "action": "UpdateBudget" },
        { "service": "Budgets", "action": "DeleteNotification" },
        { "service": "Budgets", "action": "CreateNotification" },
        { "service": "Budgets", "action": "DescribeBudget" },
        { "service": "Budgets", "action": "DescribeNotificationsForBudget" },
        { "service": "Budgets", "action": "DescribeSubscribersForNotification" }
      ],
      "delete": [{ "service": "Budgets", "action": "DeleteBudget" }]
    },
    "budget_action": {
      "create": [
        { "service": "Budgets", "action": "CreateBudgetAction" },
        { "service": "Budgets", "action": "DescribeBudgetAction" }
      ],
      "read": [{ "service": "Budgets", "action": "DescribeBudgetAction" }],
      "update": [
        { "service": "Budgets", "action": "UpdateBudgetAction" },
        { "service": "Budgets", "action": "DescribeBudgetAction" }
      ],
      "delete": [{ "service": "Budgets", "action": "DeleteBudgetAction" }]
    }
  },
  "ce": {
    "anomaly_monitor": {
      "create": [
        { "service": "CE", "action": "CreateAnomalyMonitor" },
        { "service": "CE", "action": "GetAnomalyMonitors" }
      ],
      "read": [{ "service": "CE", "action": "GetAnomalyMonitors" }],
      "update": [
        { "service": "CE", "action": "UpdateAnomalyMonitor" },
        { "service": "CE", "action": "GetAnomalyMonitors" }
      ],
      "delete": [{ "service": "CE", "action": "DeleteAnomalyMonitor" }]
    },
    "anomaly_subscription": {
      "create": [
        { "service": "CE", "action": "CreateAnomalySubscription" },
        { "service": "CE", "action": "GetAnomalySubscriptions" }
      ],
      "read": [{ "service": "CE", "action": "GetAnomalySubscriptions" }],
      "update": [
        { "service": "CE", "action": "UpdateAnomalySubscription" },
        { "service": "CE", "action": "GetAnomalySubscriptions" }
      ],
      "delete": [{ "service": "CE", "action": "DeleteAnomalySubscription" }]
    },
    "cost_allocation_tag": {
      "create": [],
      "read": [{ "service": "CE", "action": "ListCostAllocationTags" }],
      "update": [],
      "delete": []
    },
    "cost_category": {
      "create": [
        { "service": "CE", "action": "CreateCostCategoryDefinition" },
        { "service": "CE", "action": "DescribeCostCategoryDefinition" }
      ],
      "read": [{ "service": "CE", "action": "DescribeCostCategoryDefinition" }],
      "update": [
        { "service": "CE", "action": "UpdateCostCategoryDefinition" },
        { "service": "CE", "action": "DescribeCostCategoryDefinition" }
      ],
      "delete": [{ "service": "CE", "action": "DeleteCostCategoryDefinition" }]
    }
  },
  "chime": {
    "voice_connector": {
      "create": [
        { "service": "Chime", "action": "CreateVoiceConnector" },
        { "service": "Chime", "action": "GetVoiceConnector" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnector" }],
      "update": [
        { "service": "Chime", "action": "UpdateVoiceConnector" },
        { "service": "Chime", "action": "GetVoiceConnector" }
      ],
      "delete": [{ "service": "Chime", "action": "DeleteVoiceConnector" }]
    },
    "voice_connector_group": {
      "create": [
        { "service": "Chime", "action": "CreateVoiceConnectorGroup" },
        { "service": "Chime", "action": "GetVoiceConnectorGroup" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnectorGroup" }],
      "update": [
        { "service": "Chime", "action": "UpdateVoiceConnectorGroup" },
        { "service": "Chime", "action": "GetVoiceConnectorGroup" }
      ],
      "delete": [
        { "service": "Chime", "action": "UpdateVoiceConnectorGroup" },
        { "service": "Chime", "action": "GetVoiceConnectorGroup" },
        { "service": "Chime", "action": "DeleteVoiceConnectorGroup" }
      ]
    },
    "voice_connector_logging": {
      "create": [
        { "service": "Chime", "action": "PutVoiceConnectorLoggingConfiguration" },
        { "service": "Chime", "action": "GetVoiceConnectorLoggingConfiguration" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnectorLoggingConfiguration" }],
      "update": [
        { "service": "Chime", "action": "PutVoiceConnectorLoggingConfiguration" },
        { "service": "Chime", "action": "GetVoiceConnectorLoggingConfiguration" }
      ],
      "delete": [{ "service": "Chime", "action": "PutVoiceConnectorLoggingConfiguration" }]
    },
    "voice_connector_origination": {
      "create": [
        { "service": "Chime", "action": "PutVoiceConnectorOrigination" },
        { "service": "Chime", "action": "GetVoiceConnectorOrigination" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnectorOrigination" }],
      "update": [
        { "service": "Chime", "action": "PutVoiceConnectorOrigination" },
        { "service": "Chime", "action": "GetVoiceConnectorOrigination" }
      ],
      "delete": [{ "service": "Chime", "action": "DeleteVoiceConnectorOrigination" }]
    },
    "voice_connector_streaming": {
      "create": [
        { "service": "Chime", "action": "PutVoiceConnectorStreamingConfiguration" },
        { "service": "Chime", "action": "GetVoiceConnectorStreamingConfiguration" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnectorStreamingConfiguration" }],
      "update": [
        { "service": "Chime", "action": "PutVoiceConnectorStreamingConfiguration" },
        { "service": "Chime", "action": "GetVoiceConnectorStreamingConfiguration" }
      ],
      "delete": [{ "service": "Chime", "action": "DeleteVoiceConnectorStreamingConfiguration" }]
    },
    "voice_connector_termination": {
      "create": [
        { "service": "Chime", "action": "PutVoiceConnectorTermination" },
        { "service": "Chime", "action": "GetVoiceConnectorTermination" }
      ],
      "read": [{ "service": "Chime", "action": "GetVoiceConnectorTermination" }],
      "update": [
        { "service": "Chime", "action": "PutVoiceConnectorTermination" },
        { "service": "Chime", "action": "GetVoiceConnectorTermination" }
      ],
      "delete": [{ "service": "Chime", "action": "DeleteVoiceConnectorTermination" }]
    },
    "voice_connector_termination_credentials": {
      "create": [
        { "service": "Chime", "action": "PutVoiceConnectorTerminationCredentials" },
        { "service": "Chime", "action": "ListVoiceConnectorTerminationCredentials" }
      ],
      "read": [{ "service": "Chime", "action": "ListVoiceConnectorTerminationCredentials" }],
      "update": [
        { "service": "Chime", "action": "PutVoiceConnectorTerminationCredentials" },
        { "service": "Chime", "action": "ListVoiceConnectorTerminationCredentials" }
      ],
      "delete": [{ "service": "Chime", "action": "DeleteVoiceConnectorTerminationCredentials" }]
    }
  },
  "chimesdkmediapipelines": {
    "media_insights_pipeline_configuration": {
      "create": [
        { "service": "ChimeSDKMediaPipelines", "action": "CreateMediaInsightsPipelineConfiguration" },
        { "service": "ChimeSDKMediaPipelines", "action": "GetMediaInsightsPipelineConfiguration" }
      ],
      "read": [{ "service": "ChimeSDKMediaPipelines", "action": "GetMediaInsightsPipelineConfiguration" }],
      "update": [
        { "service": "ChimeSDKMediaPipelines", "action": "UpdateMediaInsightsPipelineConfiguration" },
        { "service": "ChimeSDKMediaPipelines", "action": "GetMediaInsightsPipelineConfiguration" }
      ],
      "delete": [{ "service": "ChimeSDKMediaPipelines", "action": "DeleteMediaInsightsPipelineConfiguration" }]
    }
  },
  "cloud9": {
    "environment_ec2": {
      "create": [
        { "service": "Cloud9", "action": "CreateEnvironmentEC2" },
        { "service": "Cloud9", "action": "CreateEnvironmentEC2" },
        { "service": "Cloud9", "action": "DescribeEnvironments" }
      ],
      "read": [{ "service": "Cloud9", "action": "DescribeEnvironments" }],
      "update": [
        { "service": "Cloud9", "action": "UpdateEnvironment" },
        { "service": "Cloud9", "action": "DescribeEnvironments" }
      ],
      "delete": [
        { "service": "Cloud9", "action": "DeleteEnvironment" },
        { "service": "Cloud9", "action": "DescribeEnvironments" }
      ]
    },
    "environment_membership": {
      "create": [
        { "service": "Cloud9", "action": "CreateEnvironmentMembership" },
        { "service": "Cloud9", "action": "DescribeEnvironmentMemberships" }
      ],
      "read": [{ "service": "Cloud9", "action": "DescribeEnvironmentMemberships" }],
      "update": [
        { "service": "Cloud9", "action": "UpdateEnvironmentMembership" },
        { "service": "Cloud9", "action": "DescribeEnvironmentMemberships" }
      ],
      "delete": [{ "service": "Cloud9", "action": "DeleteEnvironmentMembership" }]
    }
  },
  "cloudcontrol": {
    "cloudcontrolapi_resource": {
      "create": [
        { "service": "CloudControlClient", "action": "CreateResource" },
        { "service": "CloudControlClient", "action": "GetResourceRequestStatus" },
        { "service": "CloudControlClient", "action": "GetResource" }
      ],
      "read": [{ "service": "CloudControlClient", "action": "GetResource" }],
      "update": [
        { "service": "CloudControlClient", "action": "UpdateResource" },
        { "service": "CloudControlClient", "action": "GetResourceRequestStatus" },
        { "service": "CloudControlClient", "action": "GetResource" }
      ],
      "delete": [
        { "service": "CloudControlClient", "action": "DeleteResource" },
        { "service": "CloudControlClient", "action": "GetResourceRequestStatus" }
      ]
    }
  },
  "cloudformation": {
    "stack": {
      "create": [
        { "service": "CloudFormation", "action": "CreateStack" },
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "DescribeStackEvents" },
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "GetTemplate" }
      ],
      "read": [
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "GetTemplate" }
      ],
      "update": [
        { "service": "CloudFormation", "action": "UpdateStack" },
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "DescribeStackEvents" },
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "GetTemplate" }
      ],
      "delete": [
        { "service": "CloudFormation", "action": "DeleteStack" },
        { "service": "CloudFormation", "action": "DescribeStacks" },
        { "service": "CloudFormation", "action": "DescribeStackEvents" }
      ]
    },
    "stack_set": {
      "create": [
        { "service": "CloudFormation", "action": "CreateStackSet" },
        { "service": "CloudFormation", "action": "DescribeStackSet" }
      ],
      "read": [{ "service": "CloudFormation", "action": "DescribeStackSet" }],
      "update": [
        { "service": "CloudFormation", "action": "UpdateStackSet" },
        { "service": "CloudFormation", "action": "DescribeStackSetOperation" },
        { "service": "CloudFormation", "action": "ListStackSetOperationResults" },
        { "service": "CloudFormation", "action": "DescribeStackSet" }
      ],
      "delete": [{ "service": "CloudFormation", "action": "DeleteStackSet" }]
    },
    "stack_set_instance": {
      "create": [
        { "service": "CloudFormation", "action": "CreateStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackSetOperation" },
        { "service": "CloudFormation", "action": "ListStackSetOperationResults" },
        { "service": "CloudFormation", "action": "ListStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackInstance" }
      ],
      "read": [
        { "service": "CloudFormation", "action": "ListStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackInstance" }
      ],
      "update": [
        { "service": "CloudFormation", "action": "UpdateStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackSetOperation" },
        { "service": "CloudFormation", "action": "ListStackSetOperationResults" },
        { "service": "CloudFormation", "action": "ListStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackInstance" }
      ],
      "delete": [
        { "service": "CloudFormation", "action": "DeleteStackInstances" },
        { "service": "CloudFormation", "action": "DescribeStackSetOperation" },
        { "service": "CloudFormation", "action": "ListStackSetOperationResults" }
      ]
    },
    "type": {
      "create": [
        { "service": "CloudFormation", "action": "RegisterType" },
        { "service": "CloudFormation", "action": "DescribeTypeRegistration" },
        { "service": "CloudFormation", "action": "DescribeType" }
      ],
      "read": [{ "service": "CloudFormation", "action": "DescribeType" }],
      "update": [],
      "delete": [
        { "service": "CloudFormation", "action": "DeregisterType" },
        { "service": "CloudFormation", "action": "ListTypeVersions" },
        { "service": "CloudFormation", "action": "DeregisterType" }
      ]
    }
  },
  "cloudfront": {
    "cache_policy": {
      "create": [
        { "service": "CloudFront", "action": "CreateCachePolicy" },
        { "service": "CloudFront", "action": "GetCachePolicy" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetCachePolicy" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateCachePolicy" },
        { "service": "CloudFront", "action": "GetCachePolicy" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteCachePolicy" }]
    },
    "distribution": {
      "create": [
        { "service": "CloudFront", "action": "CreateDistributionWithTags" },
        { "service": "CloudFront", "action": "CreateDistributionWithTags" },
        { "service": "CloudFront", "action": "GetDistribution" },
        { "service": "CloudFront", "action": "GetDistribution" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetDistribution" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateDistribution" },
        { "service": "CloudFront", "action": "GetDistribution" },
        { "service": "CloudFront", "action": "UpdateDistribution" },
        { "service": "CloudFront", "action": "UpdateDistribution" },
        { "service": "CloudFront", "action": "GetDistribution" },
        { "service": "CloudFront", "action": "GetDistribution" }
      ],
      "delete": [
        { "service": "CloudFront", "action": "GetDistribution" },
        { "service": "CloudFront", "action": "UpdateDistribution" },
        { "service": "CloudFront", "action": "DeleteDistribution" },
        { "service": "CloudFront", "action": "DeleteDistribution" },
        { "service": "CloudFront", "action": "UpdateDistribution" },
        { "service": "CloudFront", "action": "GetDistribution" },
        { "service": "CloudFront", "action": "DeleteDistribution" },
        { "service": "CloudFront", "action": "DeleteDistribution" }
      ]
    },
    "field_level_encryption_config": {
      "create": [
        { "service": "CloudFront", "action": "CreateFieldLevelEncryptionConfig" },
        { "service": "CloudFront", "action": "GetFieldLevelEncryptionConfig" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetFieldLevelEncryptionConfig" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateFieldLevelEncryptionConfig" },
        { "service": "CloudFront", "action": "GetFieldLevelEncryptionConfig" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteFieldLevelEncryptionConfig" }]
    },
    "field_level_encryption_profile": {
      "create": [
        { "service": "CloudFront", "action": "CreateFieldLevelEncryptionProfile" },
        { "service": "CloudFront", "action": "GetFieldLevelEncryptionProfile" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetFieldLevelEncryptionProfile" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateFieldLevelEncryptionProfile" },
        { "service": "CloudFront", "action": "GetFieldLevelEncryptionProfile" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteFieldLevelEncryptionProfile" }]
    },
    "function": {
      "create": [
        { "service": "CloudFront", "action": "CreateFunction" },
        { "service": "CloudFront", "action": "PublishFunction" },
        { "service": "CloudFront", "action": "DescribeFunction" },
        { "service": "CloudFront", "action": "GetFunction" }
      ],
      "read": [
        { "service": "CloudFront", "action": "DescribeFunction" },
        { "service": "CloudFront", "action": "GetFunction" }
      ],
      "update": [
        { "service": "CloudFront", "action": "UpdateFunction" },
        { "service": "CloudFront", "action": "PublishFunction" },
        { "service": "CloudFront", "action": "DescribeFunction" },
        { "service": "CloudFront", "action": "GetFunction" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteFunction" }]
    },
    "key_group": {
      "create": [
        { "service": "CloudFront", "action": "CreateKeyGroup" },
        { "service": "CloudFront", "action": "GetKeyGroup" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetKeyGroup" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateKeyGroup" },
        { "service": "CloudFront", "action": "GetKeyGroup" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteKeyGroup" }]
    },
    "monitoring_subscription": {
      "create": [
        { "service": "CloudFront", "action": "CreateMonitoringSubscription" },
        { "service": "CloudFront", "action": "GetMonitoringSubscription" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetMonitoringSubscription" }],
      "update": [],
      "delete": [{ "service": "CloudFront", "action": "DeleteMonitoringSubscription" }]
    },
    "origin_access_control": {
      "create": [
        { "service": "CloudFront", "action": "CreateOriginAccessControl" },
        { "service": "CloudFront", "action": "GetOriginAccessControl" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetOriginAccessControl" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateOriginAccessControl" },
        { "service": "CloudFront", "action": "GetOriginAccessControl" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteOriginAccessControl" }]
    },
    "origin_access_identity": {
      "create": [
        { "service": "CloudFront", "action": "CreateCloudFrontOriginAccessIdentity" },
        { "service": "CloudFront", "action": "GetCloudFrontOriginAccessIdentity" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetCloudFrontOriginAccessIdentity" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateCloudFrontOriginAccessIdentity" },
        { "service": "CloudFront", "action": "GetCloudFrontOriginAccessIdentity" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteCloudFrontOriginAccessIdentity" }]
    },
    "origin_request_policy": {
      "create": [
        { "service": "CloudFront", "action": "CreateOriginRequestPolicy" },
        { "service": "CloudFront", "action": "GetOriginRequestPolicy" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetOriginRequestPolicy" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateOriginRequestPolicy" },
        { "service": "CloudFront", "action": "GetOriginRequestPolicy" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteOriginRequestPolicy" }]
    },
    "public_key": {
      "create": [
        { "service": "CloudFront", "action": "CreatePublicKey" },
        { "service": "CloudFront", "action": "GetPublicKey" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetPublicKey" }],
      "update": [
        { "service": "CloudFront", "action": "UpdatePublicKey" },
        { "service": "CloudFront", "action": "GetPublicKey" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeletePublicKey" }]
    },
    "realtime_log_config": {
      "create": [
        { "service": "CloudFront", "action": "CreateRealtimeLogConfig" },
        { "service": "CloudFront", "action": "GetRealtimeLogConfig" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetRealtimeLogConfig" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateRealtimeLogConfig" },
        { "service": "CloudFront", "action": "GetRealtimeLogConfig" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteRealtimeLogConfig" }]
    },
    "response_headers_policy": {
      "create": [
        { "service": "CloudFront", "action": "CreateResponseHeadersPolicy" },
        { "service": "CloudFront", "action": "GetResponseHeadersPolicy" }
      ],
      "read": [{ "service": "CloudFront", "action": "GetResponseHeadersPolicy" }],
      "update": [
        { "service": "CloudFront", "action": "UpdateResponseHeadersPolicy" },
        { "service": "CloudFront", "action": "GetResponseHeadersPolicy" }
      ],
      "delete": [{ "service": "CloudFront", "action": "DeleteResponseHeadersPolicy" }]
    }
  },
  "cloudhsmv2": {
    "cloudhsm_v2_cluster": {
      "create": [
        { "service": "CloudHSMV2", "action": "CreateCluster" },
        { "service": "CloudHSMV2", "action": "DescribeClusters" }
      ],
      "read": [{ "service": "CloudHSMV2", "action": "DescribeClusters" }],
      "update": [],
      "delete": [
        { "service": "CloudHSMV2", "action": "DeleteCluster" },
        { "service": "CloudHSMV2", "action": "DescribeClusters" }
      ]
    },
    "cloudhsm_v2_hsm": {
      "create": [
        { "service": "CloudHSMV2", "action": "DescribeClusters" },
        { "service": "CloudHSMV2", "action": "CreateHsm" }
      ],
      "read": [{ "service": "CloudHSMV2", "action": "DescribeClusters" }],
      "update": [],
      "delete": [
        { "service": "CloudHSMV2", "action": "DeleteHsm" },
        { "service": "CloudHSMV2", "action": "DescribeClusters" }
      ]
    }
  },
  "cloudsearch": {
    "domain": {
      "create": [
        { "service": "CloudSearch", "action": "CreateDomain" },
        { "service": "CloudSearch", "action": "UpdateScalingParameters" },
        { "service": "CloudSearch", "action": "UpdateAvailabilityOptions" },
        { "service": "CloudSearch", "action": "UpdateDomainEndpointOptions" },
        { "service": "CloudSearch", "action": "DefineIndexField" },
        { "service": "CloudSearch", "action": "IndexDocuments" },
        { "service": "CloudSearch", "action": "DescribeDomains" },
        { "service": "CloudSearch", "action": "DescribeAvailabilityOptions" },
        { "service": "CloudSearch", "action": "DescribeDomainEndpointOptions" },
        { "service": "CloudSearch", "action": "DescribeScalingParameters" },
        { "service": "CloudSearch", "action": "DescribeIndexFields" }
      ],
      "read": [
        { "service": "CloudSearch", "action": "DescribeDomains" },
        { "service": "CloudSearch", "action": "DescribeAvailabilityOptions" },
        { "service": "CloudSearch", "action": "DescribeDomainEndpointOptions" },
        { "service": "CloudSearch", "action": "DescribeScalingParameters" },
        { "service": "CloudSearch", "action": "DescribeIndexFields" }
      ],
      "update": [
        { "service": "CloudSearch", "action": "UpdateScalingParameters" },
        { "service": "CloudSearch", "action": "UpdateAvailabilityOptions" },
        { "service": "CloudSearch", "action": "UpdateDomainEndpointOptions" },
        { "service": "CloudSearch", "action": "DeleteIndexField" },
        { "service": "CloudSearch", "action": "DefineIndexField" },
        { "service": "CloudSearch", "action": "IndexDocuments" },
        { "service": "CloudSearch", "action": "DescribeDomains" },
        { "service": "CloudSearch", "action": "DescribeAvailabilityOptions" },
        { "service": "CloudSearch", "action": "DescribeDomainEndpointOptions" },
        { "service": "CloudSearch", "action": "DescribeScalingParameters" },
        { "service": "CloudSearch", "action": "DescribeIndexFields" }
      ],
      "delete": [
        { "service": "CloudSearch", "action": "DeleteDomain" },
        { "service": "CloudSearch", "action": "DescribeDomains" }
      ]
    },
    "domain_service_access_policy": {
      "create": [
        { "service": "CloudSearch", "action": "UpdateServiceAccessPolicies" },
        { "service": "CloudSearch", "action": "DescribeServiceAccessPolicies" }
      ],
      "read": [{ "service": "CloudSearch", "action": "DescribeServiceAccessPolicies" }],
      "update": [],
      "delete": [
        { "service": "CloudSearch", "action": "UpdateServiceAccessPolicies" },
        { "service": "CloudSearch", "action": "DescribeServiceAccessPolicies" }
      ]
    }
  },
  "cloudtrail": {
    "cloudtrail": {
      "create": [
        { "service": "CloudTrail", "action": "CreateTrail" },
        { "service": "CloudTrail", "action": "CreateTrail" },
        { "service": "CloudTrail", "action": "StartLogging" },
        { "service": "CloudTrail", "action": "StopLogging" },
        { "service": "CloudTrail", "action": "PutEventSelectors" },
        { "service": "CloudTrail", "action": "PutEventSelectors" },
        { "service": "CloudTrail", "action": "PutInsightSelectors" },
        { "service": "CloudTrail", "action": "DescribeTrails" },
        { "service": "CloudTrail", "action": "GetTrailStatus" },
        { "service": "CloudTrail", "action": "GetEventSelectors" },
        { "service": "CloudTrail", "action": "GetInsightSelectors" }
      ],
      "read": [
        { "service": "CloudTrail", "action": "DescribeTrails" },
        { "service": "CloudTrail", "action": "GetTrailStatus" },
        { "service": "CloudTrail", "action": "GetEventSelectors" },
        { "service": "CloudTrail", "action": "GetInsightSelectors" }
      ],
      "update": [
        { "service": "CloudTrail", "action": "UpdateTrail" },
        { "service": "CloudTrail", "action": "UpdateTrail" },
        { "service": "CloudTrail", "action": "StartLogging" },
        { "service": "CloudTrail", "action": "StopLogging" },
        { "service": "CloudTrail", "action": "PutEventSelectors" },
        { "service": "CloudTrail", "action": "PutEventSelectors" },
        { "service": "CloudTrail", "action": "PutInsightSelectors" },
        { "service": "CloudTrail", "action": "DescribeTrails" },
        { "service": "CloudTrail", "action": "GetTrailStatus" },
        { "service": "CloudTrail", "action": "GetEventSelectors" },
        { "service": "CloudTrail", "action": "GetInsightSelectors" }
      ],
      "delete": [{ "service": "CloudTrail", "action": "DeleteTrail" }]
    },
    "event_data_store": {
      "create": [
        { "service": "CloudTrail", "action": "CreateEventDataStore" },
        { "service": "CloudTrail", "action": "GetEventDataStore" }
      ],
      "read": [{ "service": "CloudTrail", "action": "GetEventDataStore" }],
      "update": [
        { "service": "CloudTrail", "action": "UpdateEventDataStore" },
        { "service": "CloudTrail", "action": "GetEventDataStore" }
      ],
      "delete": [
        { "service": "CloudTrail", "action": "DeleteEventDataStore" },
        { "service": "CloudTrail", "action": "GetEventDataStore" }
      ]
    }
  },
  "cloudwatch": {
    "composite_alarm": {
      "create": [
        { "service": "CloudWatch", "action": "PutCompositeAlarm" },
        { "service": "CloudWatch", "action": "PutCompositeAlarm" },
        { "service": "CloudWatch", "action": "DescribeAlarms" }
      ],
      "read": [{ "service": "CloudWatch", "action": "DescribeAlarms" }],
      "update": [
        { "service": "CloudWatch", "action": "PutCompositeAlarm" },
        { "service": "CloudWatch", "action": "DescribeAlarms" }
      ],
      "delete": [{ "service": "CloudWatch", "action": "DeleteAlarms" }]
    },
    "dashboard": {
      "create": [
        { "service": "CloudWatch", "action": "PutDashboard" },
        { "service": "CloudWatch", "action": "GetDashboard" }
      ],
      "read": [{ "service": "CloudWatch", "action": "GetDashboard" }],
      "update": [],
      "delete": [{ "service": "CloudWatch", "action": "DeleteDashboards" }]
    },
    "metric_alarm": {
      "create": [
        { "service": "CloudWatch", "action": "PutMetricAlarm" },
        { "service": "CloudWatch", "action": "PutMetricAlarm" },
        { "service": "CloudWatch", "action": "DescribeAlarms" }
      ],
      "read": [{ "service": "CloudWatch", "action": "DescribeAlarms" }],
      "update": [
        { "service": "CloudWatch", "action": "PutMetricAlarm" },
        { "service": "CloudWatch", "action": "DescribeAlarms" }
      ],
      "delete": [{ "service": "CloudWatch", "action": "DeleteAlarms" }]
    },
    "metric_stream": {
      "create": [
        { "service": "CloudWatch", "action": "PutMetricStream" },
        { "service": "CloudWatch", "action": "PutMetricStream" },
        { "service": "CloudWatch", "action": "GetMetricStream" }
      ],
      "read": [{ "service": "CloudWatch", "action": "GetMetricStream" }],
      "update": [
        { "service": "CloudWatch", "action": "PutMetricStream" },
        { "service": "CloudWatch", "action": "GetMetricStream" }
      ],
      "delete": [
        { "service": "CloudWatch", "action": "DeleteMetricStream" },
        { "service": "CloudWatch", "action": "GetMetricStream" }
      ]
    }
  },
  "codeartifact": {
    "domain": {
      "create": [
        { "service": "CodeArtifact", "action": "CreateDomain" },
        { "service": "CodeArtifact", "action": "DescribeDomain" }
      ],
      "read": [{ "service": "CodeArtifact", "action": "DescribeDomain" }],
      "update": [],
      "delete": [{ "service": "CodeArtifact", "action": "DeleteDomain" }]
    },
    "domain_permissions_policy": {
      "create": [
        { "service": "CodeArtifact", "action": "PutDomainPermissionsPolicy" },
        { "service": "CodeArtifact", "action": "GetDomainPermissionsPolicy" }
      ],
      "read": [{ "service": "CodeArtifact", "action": "GetDomainPermissionsPolicy" }],
      "update": [],
      "delete": [{ "service": "CodeArtifact", "action": "DeleteDomainPermissionsPolicy" }]
    },
    "repository": {
      "create": [
        { "service": "CodeArtifact", "action": "CreateRepository" },
        { "service": "CodeArtifact", "action": "AssociateExternalConnection" },
        { "service": "CodeArtifact", "action": "DescribeRepository" }
      ],
      "read": [{ "service": "CodeArtifact", "action": "DescribeRepository" }],
      "update": [
        { "service": "CodeArtifact", "action": "UpdateRepository" },
        { "service": "CodeArtifact", "action": "AssociateExternalConnection" },
        { "service": "CodeArtifact", "action": "DisassociateExternalConnection" },
        { "service": "CodeArtifact", "action": "DescribeRepository" }
      ],
      "delete": [{ "service": "CodeArtifact", "action": "DeleteRepository" }]
    },
    "repository_permissions_policy": {
      "create": [
        { "service": "CodeArtifact", "action": "PutRepositoryPermissionsPolicy" },
        { "service": "CodeArtifact", "action": "GetRepositoryPermissionsPolicy" }
      ],
      "read": [{ "service": "CodeArtifact", "action": "GetRepositoryPermissionsPolicy" }],
      "update": [],
      "delete": [{ "service": "CodeArtifact", "action": "DeleteRepositoryPermissionsPolicy" }]
    }
  },
  "codebuild": {
    "project": {
      "create": [
        { "service": "CodeBuild", "action": "CreateProject" },
        { "service": "CodeBuild", "action": "CreateProject" },
        { "service": "CodeBuild", "action": "UpdateProjectVisibility" },
        { "service": "CodeBuild", "action": "BatchGetProjects" }
      ],
      "read": [{ "service": "CodeBuild", "action": "BatchGetProjects" }],
      "update": [
        { "service": "CodeBuild", "action": "UpdateProjectVisibility" },
        { "service": "CodeBuild", "action": "UpdateProject" },
        { "service": "CodeBuild", "action": "UpdateProject" },
        { "service": "CodeBuild", "action": "BatchGetProjects" }
      ],
      "delete": [{ "service": "CodeBuild", "action": "DeleteProject" }]
    },
    "report_group": {
      "create": [
        { "service": "CodeBuild", "action": "CreateReportGroup" },
        { "service": "CodeBuild", "action": "BatchGetReportGroups" }
      ],
      "read": [{ "service": "CodeBuild", "action": "BatchGetReportGroups" }],
      "update": [
        { "service": "CodeBuild", "action": "UpdateReportGroup" },
        { "service": "CodeBuild", "action": "BatchGetReportGroups" }
      ],
      "delete": [
        { "service": "CodeBuild", "action": "DeleteReportGroup" },
        { "service": "CodeBuild", "action": "BatchGetReportGroups" }
      ]
    },
    "resource_policy": {
      "create": [
        { "service": "CodeBuild", "action": "PutResourcePolicy" },
        { "service": "CodeBuild", "action": "GetResourcePolicy" }
      ],
      "read": [{ "service": "CodeBuild", "action": "GetResourcePolicy" }],
      "update": [],
      "delete": [{ "service": "CodeBuild", "action": "DeleteResourcePolicy" }]
    },
    "source_credential": {
      "create": [
        { "service": "CodeBuild", "action": "ImportSourceCredentials" },
        { "service": "CodeBuild", "action": "ListSourceCredentials" }
      ],
      "read": [{ "service": "CodeBuild", "action": "ListSourceCredentials" }],
      "update": [],
      "delete": [{ "service": "CodeBuild", "action": "DeleteSourceCredentials" }]
    },
    "webhook": {
      "create": [
        { "service": "CodeBuild", "action": "CreateWebhook" },
        { "service": "CodeBuild", "action": "BatchGetProjects" }
      ],
      "read": [{ "service": "CodeBuild", "action": "BatchGetProjects" }],
      "update": [
        { "service": "CodeBuild", "action": "UpdateWebhook" },
        { "service": "CodeBuild", "action": "UpdateWebhook" },
        { "service": "CodeBuild", "action": "BatchGetProjects" }
      ],
      "delete": [{ "service": "CodeBuild", "action": "DeleteWebhook" }]
    }
  },
  "codecommit": {
    "approval_rule_template": {
      "create": [
        { "service": "CodeCommit", "action": "CreateApprovalRuleTemplate" },
        { "service": "CodeCommit", "action": "GetApprovalRuleTemplate" }
      ],
      "read": [{ "service": "CodeCommit", "action": "GetApprovalRuleTemplate" }],
      "update": [
        { "service": "CodeCommit", "action": "UpdateApprovalRuleTemplateDescription" },
        { "service": "CodeCommit", "action": "UpdateApprovalRuleTemplateContent" },
        { "service": "CodeCommit", "action": "UpdateApprovalRuleTemplateName" },
        { "service": "CodeCommit", "action": "GetApprovalRuleTemplate" }
      ],
      "delete": [{ "service": "CodeCommit", "action": "DeleteApprovalRuleTemplate" }]
    },
    "approval_rule_template_association": {
      "create": [
        { "service": "CodeCommit", "action": "AssociateApprovalRuleTemplateWithRepository" },
        { "service": "CodeCommit", "action": "ListRepositoriesForApprovalRuleTemplate" }
      ],
      "read": [{ "service": "CodeCommit", "action": "ListRepositoriesForApprovalRuleTemplate" }],
      "update": [],
      "delete": [{ "service": "CodeCommit", "action": "DisassociateApprovalRuleTemplateFromRepository" }]
    },
    "repository": {
      "create": [
        { "service": "CodeCommit", "action": "CreateRepository" },
        { "service": "CodeCommit", "action": "ListBranches" },
        { "service": "CodeCommit", "action": "UpdateDefaultBranch" },
        { "service": "CodeCommit", "action": "GetRepository" }
      ],
      "read": [{ "service": "CodeCommit", "action": "GetRepository" }],
      "update": [
        { "service": "CodeCommit", "action": "ListBranches" },
        { "service": "CodeCommit", "action": "UpdateDefaultBranch" },
        { "service": "CodeCommit", "action": "UpdateRepositoryDescription" },
        { "service": "CodeCommit", "action": "GetRepository" }
      ],
      "delete": [{ "service": "CodeCommit", "action": "DeleteRepository" }]
    },
    "trigger": {
      "create": [
        { "service": "CodeCommit", "action": "PutRepositoryTriggers" },
        { "service": "CodeCommit", "action": "GetRepositoryTriggers" }
      ],
      "read": [{ "service": "CodeCommit", "action": "GetRepositoryTriggers" }],
      "update": [],
      "delete": [{ "service": "CodeCommit", "action": "PutRepositoryTriggers" }]
    }
  },
  "codegurureviewer": {
    "repository_association": {
      "create": [
        { "service": "CodeGuruReviewer", "action": "AssociateRepository" },
        { "service": "CodeGuruReviewer", "action": "DescribeRepositoryAssociation" }
      ],
      "read": [{ "service": "CodeGuruReviewer", "action": "DescribeRepositoryAssociation" }],
      "update": [],
      "delete": [
        { "service": "CodeGuruReviewer", "action": "DisassociateRepository" },
        { "service": "CodeGuruReviewer", "action": "DescribeRepositoryAssociation" }
      ]
    }
  },
  "codepipeline": {
    "codepipeline": {
      "create": [
        { "service": "CodePipeline", "action": "CreatePipeline" },
        { "service": "CodePipeline", "action": "GetPipeline" }
      ],
      "read": [{ "service": "CodePipeline", "action": "GetPipeline" }],
      "update": [
        { "service": "CodePipeline", "action": "UpdatePipeline" },
        { "service": "CodePipeline", "action": "GetPipeline" }
      ],
      "delete": [{ "service": "CodePipeline", "action": "DeletePipeline" }]
    },
    "custom_action_type": {
      "create": [
        { "service": "CodePipeline", "action": "CreateCustomActionType" },
        { "service": "CodePipeline", "action": "ListActionTypes" }
      ],
      "read": [{ "service": "CodePipeline", "action": "ListActionTypes" }],
      "update": [],
      "delete": [{ "service": "CodePipeline", "action": "DeleteCustomActionType" }]
    },
    "webhook": {
      "create": [
        { "service": "CodePipeline", "action": "PutWebhook" },
        { "service": "CodePipeline", "action": "ListWebhooks" }
      ],
      "read": [{ "service": "CodePipeline", "action": "ListWebhooks" }],
      "update": [
        { "service": "CodePipeline", "action": "PutWebhook" },
        { "service": "CodePipeline", "action": "ListWebhooks" }
      ],
      "delete": [{ "service": "CodePipeline", "action": "DeleteWebhook" }]
    }
  },
  "codestarconnections": {
    "connection": {
      "create": [
        { "service": "CodeStarectionsConn", "action": "CreateConnection" },
        { "service": "CodeStarectionsConn", "action": "GetConnection" }
      ],
      "read": [{ "service": "CodeStarectionsConn", "action": "GetConnection" }],
      "update": [],
      "delete": [{ "service": "CodeStarectionsConn", "action": "DeleteConnection" }]
    },
    "host": {
      "create": [
        { "service": "CodeStarectionsConn", "action": "CreateHost" },
        { "service": "CodeStarectionsConn", "action": "GetHost" }
      ],
      "read": [{ "service": "CodeStarectionsConn", "action": "GetHost" }],
      "update": [
        { "service": "CodeStarectionsConn", "action": "UpdateHost" },
        { "service": "CodeStarectionsConn", "action": "GetHost" }
      ],
      "delete": [{ "service": "CodeStarectionsConn", "action": "DeleteHost" }]
    }
  },
  "codestarnotifications": {
    "notification_rule": {
      "create": [
        { "service": "CodeStarNotifications", "action": "CreateNotificationRule" },
        { "service": "CodeStarNotifications", "action": "DescribeNotificationRule" }
      ],
      "read": [{ "service": "CodeStarNotifications", "action": "DescribeNotificationRule" }],
      "update": [
        { "service": "CodeStarNotifications", "action": "UpdateNotificationRule" },
        { "service": "CodeStarNotifications", "action": "DeleteTarget" },
        { "service": "CodeStarNotifications", "action": "DeleteTarget" },
        { "service": "CodeStarNotifications", "action": "DescribeNotificationRule" }
      ],
      "delete": [
        { "service": "CodeStarNotifications", "action": "DeleteNotificationRule" },
        { "service": "CodeStarNotifications", "action": "DeleteTarget" },
        { "service": "CodeStarNotifications", "action": "DeleteTarget" }
      ]
    }
  },
  "cognitoidentity": {
    "cognito_identity_pool": {
      "create": [
        { "service": "CognitoIdentity", "action": "CreateIdentityPool" },
        { "service": "CognitoIdentity", "action": "DescribeIdentityPool" }
      ],
      "read": [{ "service": "CognitoIdentity", "action": "DescribeIdentityPool" }],
      "update": [
        { "service": "CognitoIdentity", "action": "UpdateIdentityPool" },
        { "service": "CognitoIdentity", "action": "DescribeIdentityPool" }
      ],
      "delete": [{ "service": "CognitoIdentity", "action": "DeleteIdentityPool" }]
    },
    "cognito_identity_pool_provider_principal_tag": {
      "create": [
        { "service": "CognitoIdentity", "action": "SetPrincipalTagAttributeMap" },
        { "service": "CognitoIdentity", "action": "GetPrincipalTagAttributeMap" }
      ],
      "read": [{ "service": "CognitoIdentity", "action": "GetPrincipalTagAttributeMap" }],
      "update": [
        { "service": "CognitoIdentity", "action": "SetPrincipalTagAttributeMap" },
        { "service": "CognitoIdentity", "action": "GetPrincipalTagAttributeMap" }
      ],
      "delete": [{ "service": "CognitoIdentity", "action": "SetPrincipalTagAttributeMap" }]
    },
    "cognito_identity_pool_roles_attachment": {
      "create": [
        { "service": "CognitoIdentity", "action": "SetIdentityPoolRoles" },
        { "service": "CognitoIdentity", "action": "GetIdentityPoolRoles" }
      ],
      "read": [{ "service": "CognitoIdentity", "action": "GetIdentityPoolRoles" }],
      "update": [
        { "service": "CognitoIdentity", "action": "SetIdentityPoolRoles" },
        { "service": "CognitoIdentity", "action": "GetIdentityPoolRoles" }
      ],
      "delete": [{ "service": "CognitoIdentity", "action": "SetIdentityPoolRoles" }]
    }
  },
  "cognitoidp": {
    "cognito_identity_provider": {
      "create": [
        { "service": "CognitoIDP", "action": "CreateIdentityProvider" },
        { "service": "CognitoIDP", "action": "DescribeIdentityProvider" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "DescribeIdentityProvider" }],
      "update": [
        { "service": "CognitoIDP", "action": "UpdateIdentityProvider" },
        { "service": "CognitoIDP", "action": "DescribeIdentityProvider" }
      ],
      "delete": [{ "service": "CognitoIDP", "action": "DeleteIdentityProvider" }]
    },
    "cognito_resource_server": {
      "create": [
        { "service": "CognitoIDP", "action": "CreateResourceServer" },
        { "service": "CognitoIDP", "action": "DescribeResourceServer" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "DescribeResourceServer" }],
      "update": [
        { "service": "CognitoIDP", "action": "UpdateResourceServer" },
        { "service": "CognitoIDP", "action": "DescribeResourceServer" }
      ],
      "delete": [{ "service": "CognitoIDP", "action": "DeleteResourceServer" }]
    },
    "cognito_risk_configuration": {
      "create": [
        { "service": "CognitoIDP", "action": "SetRiskConfiguration" },
        { "service": "CognitoIDP", "action": "DescribeRiskConfiguration" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "DescribeRiskConfiguration" }],
      "update": [],
      "delete": [{ "service": "CognitoIDP", "action": "SetRiskConfiguration" }]
    },
    "cognito_user": {
      "create": [
        { "service": "CognitoIDP", "action": "AdminCreateUser" },
        { "service": "CognitoIDP", "action": "AdminDisableUser" },
        { "service": "CognitoIDP", "action": "AdminSetUserPassword" },
        { "service": "CognitoIDP", "action": "AdminGetUser" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "AdminGetUser" }],
      "update": [
        { "service": "CognitoIDP", "action": "AdminUpdateUserAttributes" },
        { "service": "CognitoIDP", "action": "AdminDeleteUserAttributes" },
        { "service": "CognitoIDP", "action": "AdminEnableUser" },
        { "service": "CognitoIDP", "action": "AdminDisableUser" },
        { "service": "CognitoIDP", "action": "AdminSetUserPassword" },
        { "service": "CognitoIDP", "action": "AdminSetUserPassword" },
        { "service": "CognitoIDP", "action": "AdminGetUser" }
      ],
      "delete": [{ "service": "CognitoIDP", "action": "AdminDeleteUser" }]
    },
    "cognito_user_group": {
      "create": [
        { "service": "CognitoIDP", "action": "CreateGroup" },
        { "service": "CognitoIDP", "action": "GetGroup" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "GetGroup" }],
      "update": [
        { "service": "CognitoIDP", "action": "UpdateGroup" },
        { "service": "CognitoIDP", "action": "GetGroup" }
      ],
      "delete": [{ "service": "CognitoIDP", "action": "DeleteGroup" }]
    },
    "cognito_user_in_group": {
      "create": [
        { "service": "CognitoIDP", "action": "AdminAddUserToGroup" },
        { "service": "CognitoIDP", "action": "AdminListGroupsForUser" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "AdminListGroupsForUser" }],
      "update": [],
      "delete": [{ "service": "CognitoIDP", "action": "AdminRemoveUserFromGroup" }]
    },
    "cognito_user_pool": {
      "create": [
        { "service": "CognitoIDP", "action": "CreateUserPool" },
        { "service": "CognitoIDP", "action": "CreateUserPool" },
        { "service": "CognitoIDP", "action": "SetUserPoolMfaConfig" },
        { "service": "CognitoIDP", "action": "SetUserPoolMfaConfig" },
        { "service": "CognitoIDP", "action": "DescribeUserPool" },
        { "service": "CognitoIDP", "action": "GetUserPoolMfaConfig" }
      ],
      "read": [
        { "service": "CognitoIDP", "action": "DescribeUserPool" },
        { "service": "CognitoIDP", "action": "GetUserPoolMfaConfig" }
      ],
      "update": [
        { "service": "CognitoIDP", "action": "SetUserPoolMfaConfig" },
        { "service": "CognitoIDP", "action": "SetUserPoolMfaConfig" },
        { "service": "CognitoIDP", "action": "UpdateUserPool" },
        { "service": "CognitoIDP", "action": "UpdateUserPool" },
        { "service": "CognitoIDP", "action": "AddCustomAttributes" },
        { "service": "CognitoIDP", "action": "DescribeUserPool" },
        { "service": "CognitoIDP", "action": "GetUserPoolMfaConfig" }
      ],
      "delete": [{ "service": "CognitoIDP", "action": "DeleteUserPool" }]
    },
    "cognito_user_pool_domain": {
      "create": [
        { "service": "CognitoIDP", "action": "CreateUserPoolDomain" },
        { "service": "CognitoIDP", "action": "DescribeUserPoolDomain" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "DescribeUserPoolDomain" }],
      "update": [
        { "service": "CognitoIDP", "action": "UpdateUserPoolDomain" },
        { "service": "CognitoIDP", "action": "DescribeUserPoolDomain" }
      ],
      "delete": [
        { "service": "CognitoIDP", "action": "DeleteUserPoolDomain" },
        { "service": "CognitoIDP", "action": "DescribeUserPoolDomain" }
      ]
    },
    "cognito_user_pool_ui_customization": {
      "create": [
        { "service": "CognitoIDP", "action": "SetUICustomization" },
        { "service": "CognitoIDP", "action": "GetUICustomization" }
      ],
      "read": [{ "service": "CognitoIDP", "action": "GetUICustomization" }],
      "update": [],
      "delete": [{ "service": "CognitoIDP", "action": "SetUICustomization" }]
    }
  },
  "comprehend": {
    "document_classifier": {
      "create": [],
      "read": [{ "service": "ComprehendClient", "action": "DescribeDocumentClassifier" }],
      "update": [],
      "delete": [
        { "service": "ComprehendClient", "action": "StopTrainingDocumentClassifier" },
        { "service": "ComprehendClient", "action": "DescribeDocumentClassifier" },
        { "service": "ComprehendClient", "action": "DeleteDocumentClassifier" }
      ]
    },
    "entity_recognizer": {
      "create": [],
      "read": [{ "service": "ComprehendClient", "action": "DescribeEntityRecognizer" }],
      "update": [],
      "delete": [
        { "service": "ComprehendClient", "action": "StopTrainingEntityRecognizer" },
        { "service": "ComprehendClient", "action": "DescribeEntityRecognizer" },
        { "service": "ComprehendClient", "action": "DeleteEntityRecognizer" }
      ]
    }
  },
  "configservice": {
    "config_aggregate_authorization": {
      "create": [
        { "service": "ConfigService", "action": "PutAggregationAuthorization" },
        { "service": "ConfigService", "action": "DescribeAggregationAuthorizations" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeAggregationAuthorizations" }],
      "update": [],
      "delete": [{ "service": "ConfigService", "action": "DeleteAggregationAuthorization" }]
    },
    "config_config_rule": {
      "create": [
        { "service": "ConfigService", "action": "PutConfigRule" },
        { "service": "ConfigService", "action": "PutConfigRule" },
        { "service": "ConfigService", "action": "DescribeConfigRules" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeConfigRules" }],
      "update": [],
      "delete": [
        { "service": "ConfigService", "action": "DeleteConfigRule" },
        { "service": "ConfigService", "action": "DeleteConfigRule" },
        { "service": "ConfigService", "action": "DescribeConfigRules" }
      ]
    },
    "config_configuration_aggregator": {
      "create": [
        { "service": "ConfigService", "action": "PutConfigurationAggregator" },
        { "service": "ConfigService", "action": "DescribeConfigurationAggregators" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeConfigurationAggregators" }],
      "update": [],
      "delete": [{ "service": "ConfigService", "action": "DeleteConfigurationAggregator" }]
    },
    "config_configuration_recorder": {
      "create": [
        { "service": "ConfigService", "action": "PutConfigurationRecorder" },
        { "service": "ConfigService", "action": "DescribeConfigurationRecorders" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeConfigurationRecorders" }],
      "update": [],
      "delete": [{ "service": "ConfigService", "action": "DeleteConfigurationRecorder" }]
    },
    "config_configuration_recorder_status": {
      "create": [
        { "service": "ConfigService", "action": "StartConfigurationRecorder" },
        { "service": "ConfigService", "action": "StopConfigurationRecorder" },
        { "service": "ConfigService", "action": "DescribeConfigurationRecorderStatus" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeConfigurationRecorderStatus" }],
      "update": [],
      "delete": [{ "service": "ConfigService", "action": "StopConfigurationRecorder" }]
    },
    "config_conformance_pack": {
      "create": [
        { "service": "ConfigService", "action": "PutConformancePack" },
        { "service": "ConfigService", "action": "DescribeConformancePackStatus" },
        { "service": "ConfigService", "action": "DescribeConformancePacks" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeConformancePacks" }],
      "update": [],
      "delete": [
        { "service": "ConfigService", "action": "DeleteConformancePack" },
        { "service": "ConfigService", "action": "DeleteConformancePack" },
        { "service": "ConfigService", "action": "DescribeConformancePackStatus" }
      ]
    },
    "config_delivery_channel": {
      "create": [
        { "service": "ConfigService", "action": "PutDeliveryChannel" },
        { "service": "ConfigService", "action": "PutDeliveryChannel" },
        { "service": "ConfigService", "action": "DescribeDeliveryChannels" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeDeliveryChannels" }],
      "update": [],
      "delete": [
        { "service": "ConfigService", "action": "DeleteDeliveryChannel" },
        { "service": "ConfigService", "action": "DeleteDeliveryChannel" }
      ]
    },
    "config_organization_conformance_pack": {
      "create": [
        { "service": "ConfigService", "action": "PutOrganizationConformancePack" },
        { "service": "ConfigService", "action": "DescribeOrganizationConformancePackStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConformancePackDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConformancePacks" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeOrganizationConformancePacks" }],
      "update": [
        { "service": "ConfigService", "action": "PutOrganizationConformancePack" },
        { "service": "ConfigService", "action": "DescribeOrganizationConformancePackStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConformancePackDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConformancePacks" }
      ],
      "delete": [
        { "service": "ConfigService", "action": "DeleteOrganizationConformancePack" },
        { "service": "ConfigService", "action": "DescribeOrganizationConformancePackStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConformancePackDetailedStatus" }
      ]
    },
    "config_organization_custom_rule": {
      "create": [
        { "service": "ConfigService", "action": "PutOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }],
      "update": [
        { "service": "ConfigService", "action": "PutOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }
      ],
      "delete": [
        { "service": "ConfigService", "action": "DeleteOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" }
      ]
    },
    "config_organization_managed_rule": {
      "create": [
        { "service": "ConfigService", "action": "PutOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }],
      "update": [
        { "service": "ConfigService", "action": "PutOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRules" }
      ],
      "delete": [
        { "service": "ConfigService", "action": "DeleteOrganizationConfigRule" },
        { "service": "ConfigService", "action": "DescribeOrganizationConfigRuleStatuses" },
        { "service": "ConfigService", "action": "GetOrganizationConfigRuleDetailedStatus" }
      ]
    },
    "config_remediation_configuration": {
      "create": [
        { "service": "ConfigService", "action": "PutRemediationConfigurations" },
        { "service": "ConfigService", "action": "DescribeRemediationConfigurations" }
      ],
      "read": [{ "service": "ConfigService", "action": "DescribeRemediationConfigurations" }],
      "update": [],
      "delete": [
        { "service": "ConfigService", "action": "DeleteRemediationConfiguration" },
        { "service": "ConfigService", "action": "DeleteRemediationConfiguration" }
      ]
    }
  },
  "connect": {
    "bot_association": {
      "create": [
        { "service": "ectConn", "action": "AssociateBot" },
        { "service": "ectConn", "action": "ListBots" }
      ],
      "read": [{ "service": "ectConn", "action": "ListBots" }],
      "update": [],
      "delete": [{ "service": "ectConn", "action": "DisassociateBot" }]
    },
    "contact_flow": {
      "create": [
        { "service": "ectConn", "action": "CreateContactFlow" },
        { "service": "ectConn", "action": "DescribeContactFlow" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeContactFlow" }],
      "update": [
        { "service": "ectConn", "action": "UpdateContactFlowName" },
        { "service": "ectConn", "action": "UpdateContactFlowContent" },
        { "service": "ectConn", "action": "DescribeContactFlow" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteContactFlow" }]
    },
    "contact_flow_module": {
      "create": [
        { "service": "ectConn", "action": "CreateContactFlowModule" },
        { "service": "ectConn", "action": "DescribeContactFlowModule" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeContactFlowModule" }],
      "update": [
        { "service": "ectConn", "action": "UpdateContactFlowModuleMetadata" },
        { "service": "ectConn", "action": "UpdateContactFlowModuleContent" },
        { "service": "ectConn", "action": "DescribeContactFlowModule" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteContactFlowModule" }]
    },
    "hours_of_operation": {
      "create": [
        { "service": "ectConn", "action": "CreateHoursOfOperation" },
        { "service": "ectConn", "action": "DescribeHoursOfOperation" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeHoursOfOperation" }],
      "update": [
        { "service": "ectConn", "action": "UpdateHoursOfOperation" },
        { "service": "ectConn", "action": "DescribeHoursOfOperation" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteHoursOfOperation" }]
    },
    "instance": {
      "create": [
        { "service": "ectConn", "action": "CreateInstance" },
        { "service": "ectConn", "action": "DescribeInstance" },
        { "service": "ectConn", "action": "UpdateInstanceAttribute" },
        { "service": "ectConn", "action": "DescribeInstance" },
        { "service": "ectConn", "action": "DescribeInstanceAttribute" }
      ],
      "read": [
        { "service": "ectConn", "action": "DescribeInstance" },
        { "service": "ectConn", "action": "DescribeInstanceAttribute" }
      ],
      "update": [{ "service": "ectConn", "action": "UpdateInstanceAttribute" }],
      "delete": [
        { "service": "ectConn", "action": "DeleteInstance" },
        { "service": "ectConn", "action": "DescribeInstance" }
      ]
    },
    "instance_storage_config": {
      "create": [
        { "service": "ectConn", "action": "AssociateInstanceStorageConfig" },
        { "service": "ectConn", "action": "DescribeInstanceStorageConfig" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeInstanceStorageConfig" }],
      "update": [
        { "service": "ectConn", "action": "UpdateInstanceStorageConfig" },
        { "service": "ectConn", "action": "DescribeInstanceStorageConfig" }
      ],
      "delete": [{ "service": "ectConn", "action": "DisassociateInstanceStorageConfig" }]
    },
    "lambda_function_association": {
      "create": [
        { "service": "ectConn", "action": "AssociateLambdaFunction" },
        { "service": "ectConn", "action": "ListLambdaFunctions" }
      ],
      "read": [{ "service": "ectConn", "action": "ListLambdaFunctions" }],
      "update": [],
      "delete": [{ "service": "ectConn", "action": "DisassociateLambdaFunction" }]
    },
    "phone_number": {
      "create": [
        { "service": "ectConn", "action": "SearchAvailablePhoneNumbers" },
        { "service": "ectConn", "action": "ClaimPhoneNumber" },
        { "service": "ectConn", "action": "DescribePhoneNumber" },
        { "service": "ectConn", "action": "DescribePhoneNumber" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribePhoneNumber" }],
      "update": [
        { "service": "ectConn", "action": "UpdatePhoneNumber" },
        { "service": "ectConn", "action": "DescribePhoneNumber" },
        { "service": "ectConn", "action": "DescribePhoneNumber" }
      ],
      "delete": [
        { "service": "ectConn", "action": "ReleasePhoneNumber" },
        { "service": "ectConn", "action": "DescribePhoneNumber" }
      ]
    },
    "queue": {
      "create": [
        { "service": "ectConn", "action": "CreateQueue" },
        { "service": "ectConn", "action": "DescribeQueue" },
        { "service": "ectConn", "action": "ListQueueQuickConnects" }
      ],
      "read": [
        { "service": "ectConn", "action": "DescribeQueue" },
        { "service": "ectConn", "action": "ListQueueQuickConnects" }
      ],
      "update": [
        { "service": "ectConn", "action": "UpdateQueueHoursOfOperation" },
        { "service": "ectConn", "action": "UpdateQueueMaxContacts" },
        { "service": "ectConn", "action": "UpdateQueueName" },
        { "service": "ectConn", "action": "UpdateQueueOutboundCallerConfig" },
        { "service": "ectConn", "action": "UpdateQueueStatus" },
        { "service": "ectConn", "action": "AssociateQueueQuickConnects" },
        { "service": "ectConn", "action": "DisassociateQueueQuickConnects" },
        { "service": "ectConn", "action": "DescribeQueue" },
        { "service": "ectConn", "action": "ListQueueQuickConnects" }
      ],
      "delete": []
    },
    "quick_connect": {
      "create": [
        { "service": "ectConn", "action": "CreateQuickConnect" },
        { "service": "ectConn", "action": "DescribeQuickConnect" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeQuickConnect" }],
      "update": [
        { "service": "ectConn", "action": "UpdateQuickConnectName" },
        { "service": "ectConn", "action": "UpdateQuickConnectConfig" },
        { "service": "ectConn", "action": "DescribeQuickConnect" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteQuickConnect" }]
    },
    "routing_profile": {
      "create": [
        { "service": "ectConn", "action": "CreateRoutingProfile" },
        { "service": "ectConn", "action": "DescribeRoutingProfile" },
        { "service": "ectConn", "action": "ListRoutingProfileQueues" }
      ],
      "read": [
        { "service": "ectConn", "action": "DescribeRoutingProfile" },
        { "service": "ectConn", "action": "ListRoutingProfileQueues" }
      ],
      "update": [
        { "service": "ectConn", "action": "UpdateRoutingProfileConcurrency" },
        { "service": "ectConn", "action": "UpdateRoutingProfileDefaultOutboundQueue" },
        { "service": "ectConn", "action": "UpdateRoutingProfileName" },
        { "service": "ectConn", "action": "DisassociateRoutingProfileQueues" },
        { "service": "ectConn", "action": "AssociateRoutingProfileQueues" },
        { "service": "ectConn", "action": "DescribeRoutingProfile" },
        { "service": "ectConn", "action": "ListRoutingProfileQueues" }
      ],
      "delete": []
    },
    "security_profile": {
      "create": [
        { "service": "ectConn", "action": "CreateSecurityProfile" },
        { "service": "ectConn", "action": "DescribeSecurityProfile" },
        { "service": "ectConn", "action": "ListSecurityProfilePermissions" }
      ],
      "read": [
        { "service": "ectConn", "action": "DescribeSecurityProfile" },
        { "service": "ectConn", "action": "ListSecurityProfilePermissions" }
      ],
      "update": [
        { "service": "ectConn", "action": "UpdateSecurityProfile" },
        { "service": "ectConn", "action": "DescribeSecurityProfile" },
        { "service": "ectConn", "action": "ListSecurityProfilePermissions" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteSecurityProfile" }]
    },
    "user": {
      "create": [
        { "service": "ectConn", "action": "CreateUser" },
        { "service": "ectConn", "action": "DescribeUser" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeUser" }],
      "update": [
        { "service": "ectConn", "action": "UpdateUserHierarchy" },
        { "service": "ectConn", "action": "UpdateUserIdentityInfo" },
        { "service": "ectConn", "action": "UpdateUserPhoneConfig" },
        { "service": "ectConn", "action": "UpdateUserRoutingProfile" },
        { "service": "ectConn", "action": "UpdateUserSecurityProfiles" },
        { "service": "ectConn", "action": "DescribeUser" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteUser" }]
    },
    "user_hierarchy_group": {
      "create": [
        { "service": "ectConn", "action": "CreateUserHierarchyGroup" },
        { "service": "ectConn", "action": "DescribeUserHierarchyGroup" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeUserHierarchyGroup" }],
      "update": [
        { "service": "ectConn", "action": "UpdateUserHierarchyGroupName" },
        { "service": "ectConn", "action": "DescribeUserHierarchyGroup" }
      ],
      "delete": [{ "service": "ectConn", "action": "DeleteUserHierarchyGroup" }]
    },
    "user_hierarchy_structure": {
      "create": [
        { "service": "ectConn", "action": "UpdateUserHierarchyStructure" },
        { "service": "ectConn", "action": "DescribeUserHierarchyStructure" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeUserHierarchyStructure" }],
      "update": [
        { "service": "ectConn", "action": "UpdateUserHierarchyStructure" },
        { "service": "ectConn", "action": "DescribeUserHierarchyStructure" }
      ],
      "delete": [{ "service": "ectConn", "action": "UpdateUserHierarchyStructure" }]
    },
    "vocabulary": {
      "create": [
        { "service": "ectConn", "action": "CreateVocabulary" },
        { "service": "ectConn", "action": "DescribeVocabulary" },
        { "service": "ectConn", "action": "DescribeVocabulary" }
      ],
      "read": [{ "service": "ectConn", "action": "DescribeVocabulary" }],
      "update": [],
      "delete": [
        { "service": "ectConn", "action": "DeleteVocabulary" },
        { "service": "ectConn", "action": "DescribeVocabulary" }
      ]
    }
  },
  "controltower": {
    "control": {
      "create": [
        { "service": "ControlTower", "action": "EnableControl" },
        { "service": "ControlTower", "action": "GetControlOperation" },
        { "service": "ControlTower", "action": "ListEnabledControls" }
      ],
      "read": [{ "service": "ControlTower", "action": "ListEnabledControls" }],
      "update": [],
      "delete": [
        { "service": "ControlTower", "action": "DisableControl" },
        { "service": "ControlTower", "action": "GetControlOperation" }
      ]
    }
  },
  "cur": {
    "report_definition": {
      "create": [
        { "service": "CUR", "action": "PutReportDefinition" },
        { "service": "CUR", "action": "DescribeReportDefinitions" }
      ],
      "read": [{ "service": "CUR", "action": "DescribeReportDefinitions" }],
      "update": [
        { "service": "CUR", "action": "ModifyReportDefinition" },
        { "service": "CUR", "action": "DescribeReportDefinitions" }
      ],
      "delete": [{ "service": "CUR", "action": "DeleteReportDefinition" }]
    }
  },
  "dataexchange": {
    "data_set": {
      "create": [
        { "service": "DataExchange", "action": "CreateDataSet" },
        { "service": "DataExchange", "action": "GetDataSet" }
      ],
      "read": [{ "service": "DataExchange", "action": "GetDataSet" }],
      "update": [
        { "service": "DataExchange", "action": "UpdateDataSet" },
        { "service": "DataExchange", "action": "GetDataSet" }
      ],
      "delete": [{ "service": "DataExchange", "action": "DeleteDataSet" }]
    },
    "revision": {
      "create": [
        { "service": "DataExchange", "action": "CreateRevision" },
        { "service": "DataExchange", "action": "GetRevision" }
      ],
      "read": [{ "service": "DataExchange", "action": "GetRevision" }],
      "update": [
        { "service": "DataExchange", "action": "UpdateRevision" },
        { "service": "DataExchange", "action": "GetRevision" }
      ],
      "delete": [{ "service": "DataExchange", "action": "DeleteRevision" }]
    }
  },
  "datapipeline": {
    "pipeline": {
      "create": [
        { "service": "DataPipeline", "action": "CreatePipeline" },
        { "service": "DataPipeline", "action": "DescribePipelines" }
      ],
      "read": [{ "service": "DataPipeline", "action": "DescribePipelines" }],
      "update": [],
      "delete": [
        { "service": "DataPipeline", "action": "DeletePipeline" },
        { "service": "DataPipeline", "action": "DescribePipelines" }
      ]
    },
    "pipeline_definition": {
      "create": [
        { "service": "DataPipeline", "action": "PutPipelineDefinition" },
        { "service": "DataPipeline", "action": "PutPipelineDefinition" },
        { "service": "DataPipeline", "action": "ActivatePipeline" },
        { "service": "DataPipeline", "action": "GetPipelineDefinition" }
      ],
      "read": [{ "service": "DataPipeline", "action": "GetPipelineDefinition" }],
      "update": [],
      "delete": []
    }
  },
  "datasync": {
    "agent": {
      "create": [
        { "service": "DataSync", "action": "CreateAgent" },
        { "service": "DataSync", "action": "DescribeAgent" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeAgent" }],
      "update": [
        { "service": "DataSync", "action": "UpdateAgent" },
        { "service": "DataSync", "action": "DescribeAgent" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteAgent" }]
    },
    "location_efs": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationEfs" },
        { "service": "DataSync", "action": "DescribeLocationEfs" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationEfs" }],
      "update": [],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_fsx_lustre_file_system": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationFsxLustre" },
        { "service": "DataSync", "action": "DescribeLocationFsxLustre" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationFsxLustre" }],
      "update": [],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_fsx_openzfs_file_system": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationFsxOpenZfs" },
        { "service": "DataSync", "action": "DescribeLocationFsxOpenZfs" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationFsxOpenZfs" }],
      "update": [],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_fsx_windows_file_system": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationFsxWindows" },
        { "service": "DataSync", "action": "DescribeLocationFsxWindows" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationFsxWindows" }],
      "update": [],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_hdfs": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationHdfs" },
        { "service": "DataSync", "action": "DescribeLocationHdfs" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationHdfs" }],
      "update": [
        { "service": "DataSync", "action": "UpdateLocationHdfs" },
        { "service": "DataSync", "action": "DescribeLocationHdfs" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_nfs": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationNfs" },
        { "service": "DataSync", "action": "DescribeLocationNfs" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationNfs" }],
      "update": [
        { "service": "DataSync", "action": "UpdateLocationNfs" },
        { "service": "DataSync", "action": "DescribeLocationNfs" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_object_storage": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationObjectStorage" },
        { "service": "DataSync", "action": "DescribeLocationObjectStorage" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationObjectStorage" }],
      "update": [
        { "service": "DataSync", "action": "UpdateLocationObjectStorage" },
        { "service": "DataSync", "action": "DescribeLocationObjectStorage" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_s3": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationS3" },
        { "service": "DataSync", "action": "CreateLocationS3" },
        { "service": "DataSync", "action": "DescribeLocationS3" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationS3" }],
      "update": [],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "location_smb": {
      "create": [
        { "service": "DataSync", "action": "CreateLocationSmb" },
        { "service": "DataSync", "action": "DescribeLocationSmb" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeLocationSmb" }],
      "update": [
        { "service": "DataSync", "action": "UpdateLocationSmb" },
        { "service": "DataSync", "action": "DescribeLocationSmb" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteLocation" }]
    },
    "task": {
      "create": [
        { "service": "DataSync", "action": "CreateTask" },
        { "service": "DataSync", "action": "DescribeTask" }
      ],
      "read": [{ "service": "DataSync", "action": "DescribeTask" }],
      "update": [
        { "service": "DataSync", "action": "UpdateTask" },
        { "service": "DataSync", "action": "DescribeTask" }
      ],
      "delete": [{ "service": "DataSync", "action": "DeleteTask" }]
    }
  },
  "dax": {
    "cluster": {
      "create": [
        { "service": "DAX", "action": "CreateCluster" },
        { "service": "DAX", "action": "CreateCluster" },
        { "service": "DAX", "action": "DescribeClusters" },
        { "service": "DAX", "action": "DescribeClusters" }
      ],
      "read": [{ "service": "DAX", "action": "DescribeClusters" }],
      "update": [
        { "service": "DAX", "action": "UpdateCluster" },
        { "service": "DAX", "action": "DecreaseReplicationFactor" },
        { "service": "DAX", "action": "IncreaseReplicationFactor" },
        { "service": "DAX", "action": "DescribeClusters" },
        { "service": "DAX", "action": "DescribeClusters" }
      ],
      "delete": [
        { "service": "DAX", "action": "DeleteCluster" },
        { "service": "DAX", "action": "DeleteCluster" },
        { "service": "DAX", "action": "DescribeClusters" }
      ]
    },
    "parameter_group": {
      "create": [
        { "service": "DAX", "action": "CreateParameterGroup" },
        { "service": "DAX", "action": "UpdateParameterGroup" },
        { "service": "DAX", "action": "DescribeParameterGroups" },
        { "service": "DAX", "action": "DescribeParameters" }
      ],
      "read": [
        { "service": "DAX", "action": "DescribeParameterGroups" },
        { "service": "DAX", "action": "DescribeParameters" }
      ],
      "update": [
        { "service": "DAX", "action": "UpdateParameterGroup" },
        { "service": "DAX", "action": "DescribeParameterGroups" },
        { "service": "DAX", "action": "DescribeParameters" }
      ],
      "delete": [{ "service": "DAX", "action": "DeleteParameterGroup" }]
    },
    "subnet_group": {
      "create": [
        { "service": "DAX", "action": "CreateSubnetGroup" },
        { "service": "DAX", "action": "DescribeSubnetGroups" }
      ],
      "read": [{ "service": "DAX", "action": "DescribeSubnetGroups" }],
      "update": [
        { "service": "DAX", "action": "UpdateSubnetGroup" },
        { "service": "DAX", "action": "DescribeSubnetGroups" }
      ],
      "delete": [{ "service": "DAX", "action": "DeleteSubnetGroup" }]
    }
  },
  "deploy": {
    "codeapp": {
      "create": [
        { "service": "Deploy", "action": "CreateApplication" },
        { "service": "Deploy", "action": "GetApplication" }
      ],
      "read": [{ "service": "Deploy", "action": "GetApplication" }],
      "update": [
        { "service": "Deploy", "action": "UpdateApplication" },
        { "service": "Deploy", "action": "GetApplication" }
      ],
      "delete": [{ "service": "Deploy", "action": "DeleteApplication" }]
    },
    "codedeployment_config": {
      "create": [
        { "service": "Deploy", "action": "CreateDeploymentConfig" },
        { "service": "Deploy", "action": "GetDeploymentConfig" }
      ],
      "read": [{ "service": "Deploy", "action": "GetDeploymentConfig" }],
      "update": [],
      "delete": [{ "service": "Deploy", "action": "DeleteDeploymentConfig" }]
    },
    "codedeployment_group": {
      "create": [
        { "service": "Deploy", "action": "CreateDeploymentGroup" },
        { "service": "Deploy", "action": "CreateDeploymentGroup" },
        { "service": "Deploy", "action": "GetDeploymentGroup" }
      ],
      "read": [{ "service": "Deploy", "action": "GetDeploymentGroup" }],
      "update": [
        { "service": "Deploy", "action": "UpdateDeploymentGroup" },
        { "service": "Deploy", "action": "UpdateDeploymentGroup" },
        { "service": "Deploy", "action": "GetDeploymentGroup" }
      ],
      "delete": [{ "service": "Deploy", "action": "DeleteDeploymentGroup" }]
    }
  },
  "detective": {
    "graph": {
      "create": [
        { "service": "Detective", "action": "CreateGraph" },
        { "service": "Detective", "action": "CreateGraph" },
        { "service": "Detective", "action": "ListGraphs" }
      ],
      "read": [{ "service": "Detective", "action": "ListGraphs" }],
      "update": [],
      "delete": [{ "service": "Detective", "action": "DeleteGraph" }]
    },
    "invitation_accepter": {
      "create": [
        { "service": "Detective", "action": "AcceptInvitation" },
        { "service": "Detective", "action": "ListInvitations" }
      ],
      "read": [{ "service": "Detective", "action": "ListInvitations" }],
      "update": [],
      "delete": [{ "service": "Detective", "action": "DisassociateMembership" }]
    },
    "member": {
      "create": [
        { "service": "Detective", "action": "CreateMembers" },
        { "service": "Detective", "action": "CreateMembers" },
        { "service": "Detective", "action": "ListMembers" }
      ],
      "read": [{ "service": "Detective", "action": "ListMembers" }],
      "update": [],
      "delete": [{ "service": "Detective", "action": "DeleteMembers" }]
    }
  },
  "devicefarm": {
    "device_pool": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateDevicePool" },
        { "service": "DeviceFarm", "action": "GetDevicePool" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetDevicePool" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateDevicePool" },
        { "service": "DeviceFarm", "action": "GetDevicePool" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteDevicePool" }]
    },
    "instance_profile": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateInstanceProfile" },
        { "service": "DeviceFarm", "action": "GetInstanceProfile" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetInstanceProfile" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateInstanceProfile" },
        { "service": "DeviceFarm", "action": "GetInstanceProfile" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteInstanceProfile" }]
    },
    "network_profile": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateNetworkProfile" },
        { "service": "DeviceFarm", "action": "GetNetworkProfile" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetNetworkProfile" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateNetworkProfile" },
        { "service": "DeviceFarm", "action": "GetNetworkProfile" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteNetworkProfile" }]
    },
    "project": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateProject" },
        { "service": "DeviceFarm", "action": "GetProject" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetProject" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateProject" },
        { "service": "DeviceFarm", "action": "GetProject" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteProject" }]
    },
    "test_grid_project": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateTestGridProject" },
        { "service": "DeviceFarm", "action": "GetTestGridProject" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetTestGridProject" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateTestGridProject" },
        { "service": "DeviceFarm", "action": "GetTestGridProject" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteTestGridProject" }]
    },
    "upload": {
      "create": [
        { "service": "DeviceFarm", "action": "CreateUpload" },
        { "service": "DeviceFarm", "action": "GetUpload" }
      ],
      "read": [{ "service": "DeviceFarm", "action": "GetUpload" }],
      "update": [
        { "service": "DeviceFarm", "action": "UpdateUpload" },
        { "service": "DeviceFarm", "action": "GetUpload" }
      ],
      "delete": [{ "service": "DeviceFarm", "action": "DeleteUpload" }]
    }
  },
  "directconnect": {
    "dx_bgp_peer": {
      "create": [
        { "service": "DirectectConn", "action": "CreateBGPPeer" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": [
        { "service": "DirectectConn", "action": "DeleteBGPPeer" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ]
    },
    "dx_connection": {
      "create": [
        { "service": "DirectectConn", "action": "CreateConnection" },
        { "service": "DirectectConn", "action": "DescribeConnections" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeConnections" }],
      "update": [
        { "service": "DirectectConn", "action": "UpdateConnection" },
        { "service": "DirectectConn", "action": "DescribeConnections" }
      ],
      "delete": [{ "service": "DirectectConn", "action": "DeleteConnection" }]
    },
    "dx_connection_association": {
      "create": [{ "service": "DirectectConn", "action": "AssociateConnectionWithLag" }],
      "read": [{ "service": "DirectectConn", "action": "DescribeConnections" }],
      "update": [],
      "delete": [{ "service": "DirectectConn", "action": "DisassociateConnectionFromLag" }]
    },
    "dx_connection_confirmation": {
      "create": [
        { "service": "DirectectConn", "action": "ConfirmConnection" },
        { "service": "DirectectConn", "action": "DescribeConnections" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeConnections" }],
      "update": [],
      "delete": []
    },
    "dx_gateway": {
      "create": [
        { "service": "DirectectConn", "action": "CreateDirectConnectGateway" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGateways" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeDirectConnectGateways" }],
      "update": [
        { "service": "DirectectConn", "action": "UpdateDirectConnectGateway" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGateways" }
      ],
      "delete": [
        { "service": "DirectectConn", "action": "DeleteDirectConnectGateway" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGateways" }
      ]
    },
    "dx_gateway_association": {
      "create": [
        { "service": "DirectectConn", "action": "AcceptDirectConnectGatewayAssociationProposal" },
        { "service": "DirectectConn", "action": "CreateDirectConnectGatewayAssociation" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }],
      "update": [
        { "service": "DirectectConn", "action": "UpdateDirectConnectGatewayAssociation" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }
      ],
      "delete": [
        { "service": "DirectectConn", "action": "DeleteDirectConnectGatewayAssociation" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }
      ]
    },
    "dx_gateway_association_proposal": {
      "create": [
        { "service": "DirectectConn", "action": "CreateDirectConnectGatewayAssociationProposal" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociationProposals" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }
      ],
      "read": [
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociationProposals" },
        { "service": "DirectectConn", "action": "DescribeDirectConnectGatewayAssociations" }
      ],
      "update": [],
      "delete": [{ "service": "DirectectConn", "action": "DeleteDirectConnectGatewayAssociationProposal" }]
    },
    "dx_hosted_connection": {
      "create": [
        { "service": "DirectectConn", "action": "AllocateHostedConnection" },
        { "service": "DirectectConn", "action": "DescribeHostedConnections" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeHostedConnections" }],
      "update": [],
      "delete": [{ "service": "DirectectConn", "action": "DeleteConnection" }]
    },
    "dx_hosted_private_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "AllocatePrivateVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_hosted_private_virtual_interface_accepter": {
      "create": [
        { "service": "DirectectConn", "action": "ConfirmPrivateVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_hosted_public_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "AllocatePublicVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_hosted_public_virtual_interface_accepter": {
      "create": [
        { "service": "DirectectConn", "action": "ConfirmPublicVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_hosted_transit_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "AllocateTransitVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_hosted_transit_virtual_interface_accepter": {
      "create": [
        { "service": "DirectectConn", "action": "ConfirmTransitVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" },
        { "service": "DirectectConn", "action": "UpdateVirtualInterfaceAttributes" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_lag": {
      "create": [
        { "service": "DirectectConn", "action": "CreateLag" },
        { "service": "DirectectConn", "action": "DeleteConnection" },
        { "service": "DirectectConn", "action": "DescribeLags" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeLags" }],
      "update": [
        { "service": "DirectectConn", "action": "UpdateLag" },
        { "service": "DirectectConn", "action": "DescribeLags" }
      ],
      "delete": [
        { "service": "DirectectConn", "action": "DescribeLags" },
        { "service": "DirectectConn", "action": "DeleteConnection" },
        { "service": "DirectectConn", "action": "DisassociateConnectionFromLag" },
        { "service": "DirectectConn", "action": "DeleteLag" }
      ]
    },
    "dx_macsec_key_association": {
      "create": [
        { "service": "DirectectConn", "action": "AssociateMacSecKey" },
        { "service": "DirectectConn", "action": "DescribeConnections" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeConnections" }],
      "update": [],
      "delete": [{ "service": "DirectectConn", "action": "DisassociateMacSecKey" }]
    },
    "dx_private_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "CreatePrivateVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_public_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "CreatePublicVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    },
    "dx_transit_virtual_interface": {
      "create": [
        { "service": "DirectectConn", "action": "CreateTransitVirtualInterface" },
        { "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }
      ],
      "read": [{ "service": "DirectectConn", "action": "DescribeVirtualInterfaces" }],
      "update": [],
      "delete": []
    }
  },
  "dlm": {
    "lifecycle_policy": {
      "create": [
        { "service": "DLM", "action": "CreateLifecyclePolicy" },
        { "service": "DLM", "action": "GetLifecyclePolicy" }
      ],
      "read": [{ "service": "DLM", "action": "GetLifecyclePolicy" }],
      "update": [
        { "service": "DLM", "action": "UpdateLifecyclePolicy" },
        { "service": "DLM", "action": "GetLifecyclePolicy" }
      ],
      "delete": [{ "service": "DLM", "action": "DeleteLifecyclePolicy" }]
    }
  },
  "dms": {
    "certificate": {
      "create": [
        { "service": "DMS", "action": "ImportCertificate" },
        { "service": "DMS", "action": "DescribeCertificates" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeCertificates" }],
      "update": [],
      "delete": [{ "service": "DMS", "action": "DeleteCertificate" }]
    },
    "endpoint": {
      "create": [
        { "service": "DMS", "action": "CreateEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeEndpoints" }],
      "update": [
        { "service": "DMS", "action": "ModifyEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ],
      "delete": [
        { "service": "DMS", "action": "DeleteEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ]
    },
    "event_subscription": {
      "create": [
        { "service": "DMS", "action": "CreateEventSubscription" },
        { "service": "DMS", "action": "DescribeEventSubscriptions" },
        { "service": "DMS", "action": "DescribeEventSubscriptions" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeEventSubscriptions" }],
      "update": [
        { "service": "DMS", "action": "ModifyEventSubscription" },
        { "service": "DMS", "action": "DescribeEventSubscriptions" },
        { "service": "DMS", "action": "DescribeEventSubscriptions" }
      ],
      "delete": [
        { "service": "DMS", "action": "DeleteEventSubscription" },
        { "service": "DMS", "action": "DescribeEventSubscriptions" }
      ]
    },
    "replication_instance": {
      "create": [
        { "service": "DMS", "action": "CreateReplicationInstance" },
        { "service": "DMS", "action": "DescribeReplicationInstances" },
        { "service": "DMS", "action": "DescribeReplicationInstances" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeReplicationInstances" }],
      "update": [
        { "service": "DMS", "action": "ModifyReplicationInstance" },
        { "service": "DMS", "action": "DescribeReplicationInstances" },
        { "service": "DMS", "action": "DescribeReplicationInstances" }
      ],
      "delete": [
        { "service": "DMS", "action": "DeleteReplicationInstance" },
        { "service": "DMS", "action": "DescribeReplicationInstances" }
      ]
    },
    "replication_subnet_group": {
      "create": [
        { "service": "DMS", "action": "CreateReplicationSubnetGroup" },
        { "service": "DMS", "action": "CreateReplicationSubnetGroup" },
        { "service": "DMS", "action": "DescribeReplicationSubnetGroups" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeReplicationSubnetGroups" }],
      "update": [
        { "service": "DMS", "action": "ModifyReplicationSubnetGroup" },
        { "service": "DMS", "action": "DescribeReplicationSubnetGroups" }
      ],
      "delete": [{ "service": "DMS", "action": "DeleteReplicationSubnetGroup" }]
    },
    "replication_task": {
      "create": [
        { "service": "DMS", "action": "CreateReplicationTask" },
        { "service": "DMS", "action": "DescribeReplicationTasks" },
        { "service": "DMS", "action": "StartReplicationTask" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeReplicationTasks" }],
      "update": [
        { "service": "DMS", "action": "DescribeReplicationTasks" },
        { "service": "DMS", "action": "StopReplicationTask" },
        { "service": "DMS", "action": "ModifyReplicationTask" },
        { "service": "DMS", "action": "StartReplicationTask" }
      ],
      "delete": [
        { "service": "DMS", "action": "DescribeReplicationTasks" },
        { "service": "DMS", "action": "StopReplicationTask" },
        { "service": "DMS", "action": "DeleteReplicationTask" }
      ]
    },
    "s3_endpoint": {
      "create": [
        { "service": "DMS", "action": "CreateEndpoint" },
        { "service": "DMS", "action": "CreateEndpoint" },
        { "service": "DMS", "action": "ModifyEndpoint" },
        { "service": "DMS", "action": "ModifyEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ],
      "read": [{ "service": "DMS", "action": "DescribeEndpoints" }],
      "update": [
        { "service": "DMS", "action": "ModifyEndpoint" },
        { "service": "DMS", "action": "ModifyEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ],
      "delete": [
        { "service": "DMS", "action": "DeleteEndpoint" },
        { "service": "DMS", "action": "DescribeEndpoints" }
      ]
    }
  },
  "docdb": {
    "cluster": {
      "create": [
        { "service": "DocDB", "action": "RestoreDBClusterFromSnapshot" },
        { "service": "DocDB", "action": "RestoreDBClusterFromSnapshot" },
        { "service": "DocDB", "action": "CreateDBCluster" },
        { "service": "DocDB", "action": "CreateDBCluster" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "ModifyDBCluster" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" }
      ],
      "read": [
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" }
      ],
      "update": [
        { "service": "DocDB", "action": "RemoveFromGlobalCluster" },
        { "service": "DocDB", "action": "ModifyDBCluster" },
        { "service": "DocDB", "action": "ModifyDBCluster" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" }
      ],
      "delete": [
        { "service": "DocDB", "action": "RemoveFromGlobalCluster" },
        { "service": "DocDB", "action": "DeleteDBCluster" },
        { "service": "DocDB", "action": "DeleteDBCluster" },
        { "service": "DocDB", "action": "DescribeDBClusters" }
      ]
    },
    "cluster_instance": {
      "create": [
        { "service": "DocDB", "action": "CreateDBInstance" },
        { "service": "DocDB", "action": "CreateDBInstance" },
        { "service": "DocDB", "action": "DescribeDBInstances" },
        { "service": "DocDB", "action": "DescribeDBClusters" }
      ],
      "read": [
        { "service": "DocDB", "action": "DescribeDBInstances" },
        { "service": "DocDB", "action": "DescribeDBClusters" }
      ],
      "update": [
        { "service": "DocDB", "action": "ModifyDBInstance" },
        { "service": "DocDB", "action": "ModifyDBInstance" },
        { "service": "DocDB", "action": "DescribeDBInstances" },
        { "service": "DocDB", "action": "DescribeDBClusters" }
      ],
      "delete": [
        { "service": "DocDB", "action": "DeleteDBInstance" },
        { "service": "DocDB", "action": "DescribeDBInstances" }
      ]
    },
    "cluster_parameter_group": {
      "create": [
        { "service": "DocDB", "action": "CreateDBClusterParameterGroup" },
        { "service": "DocDB", "action": "ModifyDBClusterParameterGroup" },
        { "service": "DocDB", "action": "DescribeDBClusterParameterGroups" },
        { "service": "DocDB", "action": "DescribeDBClusterParameters" }
      ],
      "read": [
        { "service": "DocDB", "action": "DescribeDBClusterParameterGroups" },
        { "service": "DocDB", "action": "DescribeDBClusterParameters" }
      ],
      "update": [
        { "service": "DocDB", "action": "ModifyDBClusterParameterGroup" },
        { "service": "DocDB", "action": "DescribeDBClusterParameterGroups" },
        { "service": "DocDB", "action": "DescribeDBClusterParameters" }
      ],
      "delete": [
        { "service": "DocDB", "action": "DeleteDBClusterParameterGroup" },
        { "service": "DocDB", "action": "DescribeDBClusterParameterGroups" },
        { "service": "DocDB", "action": "DescribeDBClusterParameterGroups" }
      ]
    },
    "cluster_snapshot": {
      "create": [
        { "service": "DocDB", "action": "CreateDBClusterSnapshot" },
        { "service": "DocDB", "action": "DescribeDBClusterSnapshots" },
        { "service": "DocDB", "action": "DescribeDBClusterSnapshots" }
      ],
      "read": [{ "service": "DocDB", "action": "DescribeDBClusterSnapshots" }],
      "update": [],
      "delete": [{ "service": "DocDB", "action": "DeleteDBClusterSnapshot" }]
    },
    "event_subscription": {
      "create": [
        { "service": "DocDB", "action": "CreateEventSubscription" },
        { "service": "DocDB", "action": "DescribeEventSubscriptions" }
      ],
      "read": [{ "service": "DocDB", "action": "DescribeEventSubscriptions" }],
      "update": [
        { "service": "DocDB", "action": "ModifyEventSubscription" },
        { "service": "DocDB", "action": "DescribeEventSubscriptions" },
        { "service": "DocDB", "action": "RemoveSourceIdentifierFromSubscription" },
        { "service": "DocDB", "action": "AddSourceIdentifierToSubscription" }
      ],
      "delete": [
        { "service": "DocDB", "action": "DeleteEventSubscription" },
        { "service": "DocDB", "action": "DescribeEventSubscriptions" }
      ]
    },
    "global_cluster": {
      "create": [
        { "service": "DocDB", "action": "CreateGlobalCluster" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" }
      ],
      "read": [{ "service": "DocDB", "action": "DescribeGlobalClusters" }],
      "update": [
        { "service": "DocDB", "action": "ModifyDBCluster" },
        { "service": "DocDB", "action": "ModifyDBCluster" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "DescribeDBClusters" },
        { "service": "DocDB", "action": "ModifyGlobalCluster" }
      ],
      "delete": [
        { "service": "DocDB", "action": "RemoveFromGlobalCluster" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" },
        { "service": "DocDB", "action": "DeleteGlobalCluster" },
        { "service": "DocDB", "action": "DeleteGlobalCluster" },
        { "service": "DocDB", "action": "DescribeGlobalClusters" }
      ]
    },
    "subnet_group": {
      "create": [
        { "service": "DocDB", "action": "CreateDBSubnetGroup" },
        { "service": "DocDB", "action": "DescribeDBSubnetGroups" }
      ],
      "read": [{ "service": "DocDB", "action": "DescribeDBSubnetGroups" }],
      "update": [
        { "service": "DocDB", "action": "ModifyDBSubnetGroup" },
        { "service": "DocDB", "action": "DescribeDBSubnetGroups" }
      ],
      "delete": [
        { "service": "DocDB", "action": "DeleteDBSubnetGroup" },
        { "service": "DocDB", "action": "DescribeDBSubnetGroups" },
        { "service": "DocDB", "action": "DescribeDBSubnetGroups" }
      ]
    }
  },
  "ds": {
    "directory_service_conditional_forwarder": {
      "create": [{ "service": "DS", "action": "CreateConditionalForwarder" }],
      "read": [{ "service": "DS", "action": "DescribeConditionalForwarders" }],
      "update": [
        { "service": "DS", "action": "UpdateConditionalForwarder" },
        { "service": "DS", "action": "DescribeConditionalForwarders" }
      ],
      "delete": [{ "service": "DS", "action": "DeleteConditionalForwarder" }]
    },
    "directory_service_directory": {
      "create": [
        { "service": "DS", "action": "ConnectDirectory" },
        { "service": "DS", "action": "CreateMicrosoftAD" },
        { "service": "DS", "action": "CreateDirectory" },
        { "service": "DS", "action": "DescribeDirectories" },
        { "service": "DS", "action": "CreateAlias" },
        { "service": "DS", "action": "DescribeDomainControllers" },
        { "service": "DS", "action": "UpdateNumberOfDomainControllers" },
        { "service": "DS", "action": "EnableSso" }
      ],
      "read": [{ "service": "DS", "action": "DescribeDirectories" }],
      "update": [
        { "service": "DS", "action": "DescribeDomainControllers" },
        { "service": "DS", "action": "UpdateNumberOfDomainControllers" },
        { "service": "DS", "action": "EnableSso" },
        { "service": "DS", "action": "DisableSso" },
        { "service": "DS", "action": "DescribeDirectories" }
      ],
      "delete": [
        { "service": "DS", "action": "DeleteDirectory" },
        { "service": "DS", "action": "DescribeDirectories" }
      ]
    },
    "directory_service_log_subscription": {
      "create": [
        { "service": "DS", "action": "CreateLogSubscription" },
        { "service": "DS", "action": "ListLogSubscriptions" }
      ],
      "read": [{ "service": "DS", "action": "ListLogSubscriptions" }],
      "update": [],
      "delete": [{ "service": "DS", "action": "DeleteLogSubscription" }]
    },
    "directory_service_radius_settings": {
      "create": [
        { "service": "DS", "action": "EnableRadius" },
        { "service": "DS", "action": "DescribeDirectories" }
      ],
      "read": [{ "service": "DS", "action": "DescribeDirectories" }],
      "update": [
        { "service": "DS", "action": "UpdateRadius" },
        { "service": "DS", "action": "DescribeDirectories" }
      ],
      "delete": [{ "service": "DS", "action": "DisableRadius" }]
    },
    "directory_service_region": {
      "create": [
        { "service": "DS", "action": "AddRegion" },
        { "service": "DS", "action": "DescribeRegions" }
      ],
      "read": [{ "service": "DS", "action": "DescribeRegions" }],
      "update": [],
      "delete": []
    },
    "directory_service_shared_directory": {
      "create": [{ "service": "DS", "action": "ShareDirectory" }],
      "read": [{ "service": "DS", "action": "DescribeSharedDirectories" }],
      "update": [],
      "delete": [
        { "service": "DS", "action": "UnshareDirectory" },
        { "service": "DS", "action": "DescribeSharedDirectories" }
      ]
    },
    "directory_service_shared_directory_accepter": {
      "create": [
        { "service": "DS", "action": "AcceptSharedDirectory" },
        { "service": "DS", "action": "DescribeDirectories" }
      ],
      "read": [{ "service": "DS", "action": "DescribeDirectories" }],
      "update": [],
      "delete": [
        { "service": "DS", "action": "DeleteDirectory" },
        { "service": "DS", "action": "DescribeDirectories" }
      ]
    }
  },
  "dynamodb": {
    "contributor_insights": {
      "create": [
        { "service": "DynamoDB", "action": "UpdateContributorInsights" },
        { "service": "DynamoDB", "action": "DescribeContributorInsights" }
      ],
      "read": [{ "service": "DynamoDB", "action": "DescribeContributorInsights" }],
      "update": [],
      "delete": [
        { "service": "DynamoDB", "action": "UpdateContributorInsights" },
        { "service": "DynamoDB", "action": "DescribeContributorInsights" }
      ]
    },
    "global_table": {
      "create": [
        { "service": "DynamoDB", "action": "CreateGlobalTable" },
        { "service": "DynamoDB", "action": "DescribeGlobalTable" }
      ],
      "read": [{ "service": "DynamoDB", "action": "DescribeGlobalTable" }],
      "update": [
        { "service": "DynamoDB", "action": "UpdateGlobalTable" },
        { "service": "DynamoDB", "action": "DescribeGlobalTable" }
      ],
      "delete": [
        { "service": "DynamoDB", "action": "UpdateGlobalTable" },
        { "service": "DynamoDB", "action": "DescribeGlobalTable" }
      ]
    },
    "kinesis_streaming_destination": {
      "create": [
        { "service": "DynamoDB", "action": "EnableKinesisStreamingDestination" },
        { "service": "DynamoDB", "action": "DescribeKinesisStreamingDestination" }
      ],
      "read": [{ "service": "DynamoDB", "action": "DescribeKinesisStreamingDestination" }],
      "update": [],
      "delete": [
        { "service": "DynamoDB", "action": "DisableKinesisStreamingDestination" },
        { "service": "DynamoDB", "action": "DescribeKinesisStreamingDestination" }
      ]
    },
    "table": {
      "create": [
        { "service": "DynamoDB", "action": "RestoreTableToPointInTime" },
        { "service": "DynamoDB", "action": "CreateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "UpdateTimeToLive" },
        { "service": "DynamoDB", "action": "DescribeTimeToLive" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeTimeToLive" }
      ],
      "read": [
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeTimeToLive" }
      ],
      "update": [
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTimeToLive" },
        { "service": "DynamoDB", "action": "DescribeTimeToLive" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeTimeToLive" }
      ],
      "delete": [
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DeleteTable" },
        { "service": "DynamoDB", "action": "DescribeTable" }
      ]
    },
    "table_item": {
      "create": [
        { "service": "DynamoDB", "action": "PutItem" },
        { "service": "DynamoDB", "action": "GetItem" }
      ],
      "read": [{ "service": "DynamoDB", "action": "GetItem" }],
      "update": [
        { "service": "DynamoDB", "action": "UpdateItem" },
        { "service": "DynamoDB", "action": "DeleteItem" },
        { "service": "DynamoDB", "action": "GetItem" }
      ],
      "delete": [{ "service": "DynamoDB", "action": "DeleteItem" }]
    },
    "table_replica": {
      "create": [
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" }
      ],
      "read": [
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" }
      ],
      "update": [
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "UpdateContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeTable" },
        { "service": "DynamoDB", "action": "DescribeContinuousBackups" }
      ],
      "delete": [
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "UpdateTable" },
        { "service": "DynamoDB", "action": "DescribeTable" }
      ]
    },
    "tag": { "create": [], "read": [], "update": [], "delete": [] }
  },
  "ec2": {
    "ami": {
      "create": [
        { "service": "EC2", "action": "RegisterImage" },
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "EnableImageDeprecation" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeImages" }],
      "update": [
        { "service": "EC2", "action": "ModifyImageAttribute" },
        { "service": "EC2", "action": "EnableImageDeprecation" },
        { "service": "EC2", "action": "DescribeImages" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeregisterImage" },
        { "service": "EC2", "action": "DeleteSnapshot" },
        { "service": "EC2", "action": "DescribeImages" }
      ]
    },
    "ami_copy": {
      "create": [
        { "service": "EC2", "action": "CopyImage" },
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "EnableImageDeprecation" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "ami_from_instance": {
      "create": [
        { "service": "EC2", "action": "CreateImage" },
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "EnableImageDeprecation" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "ami_launch_permission": {
      "create": [
        { "service": "EC2", "action": "ModifyImageAttribute" },
        { "service": "EC2", "action": "DescribeImageAttribute" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeImageAttribute" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "ModifyImageAttribute" }]
    },
    "availability_zone_group": {
      "create": [
        { "service": "EC2", "action": "DescribeAvailabilityZones" },
        { "service": "EC2", "action": "ModifyAvailabilityZoneGroup" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeAvailabilityZones" }],
      "update": [
        { "service": "EC2", "action": "ModifyAvailabilityZoneGroup" },
        { "service": "EC2", "action": "DescribeAvailabilityZones" }
      ],
      "delete": []
    },
    "capacity_reservation": {
      "create": [
        { "service": "EC2", "action": "CreateCapacityReservation" },
        { "service": "EC2", "action": "DescribeCapacityReservations" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeCapacityReservations" }],
      "update": [
        { "service": "EC2", "action": "ModifyCapacityReservation" },
        { "service": "EC2", "action": "DescribeCapacityReservations" }
      ],
      "delete": [
        { "service": "EC2", "action": "CancelCapacityReservation" },
        { "service": "EC2", "action": "DescribeCapacityReservations" }
      ]
    },
    "carrier_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateCarrierGateway" },
        { "service": "EC2", "action": "DescribeCarrierGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeCarrierGateways" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteCarrierGateway" },
        { "service": "EC2", "action": "DescribeCarrierGateways" }
      ]
    },
    "client_vpn_authorization_rule": {
      "create": [
        { "service": "EC2", "action": "AuthorizeClientVpnIngress" },
        { "service": "EC2", "action": "DescribeClientVpnAuthorizationRules" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeClientVpnAuthorizationRules" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "RevokeClientVpnIngress" },
        { "service": "EC2", "action": "DescribeClientVpnAuthorizationRules" }
      ]
    },
    "client_vpn_endpoint": {
      "create": [
        { "service": "EC2", "action": "CreateClientVpnEndpoint" },
        { "service": "EC2", "action": "DescribeClientVpnEndpoints" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeClientVpnEndpoints" }],
      "update": [
        { "service": "EC2", "action": "ModifyClientVpnEndpoint" },
        { "service": "EC2", "action": "DescribeClientVpnEndpoints" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteClientVpnEndpoint" },
        { "service": "EC2", "action": "DescribeClientVpnEndpoints" }
      ]
    },
    "client_vpn_network_association": {
      "create": [
        { "service": "EC2", "action": "AssociateClientVpnTargetNetwork" },
        { "service": "EC2", "action": "DescribeClientVpnTargetNetworks" },
        { "service": "EC2", "action": "ApplySecurityGroupsToClientVpnTargetNetwork" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeClientVpnTargetNetworks" }],
      "update": [
        { "service": "EC2", "action": "ApplySecurityGroupsToClientVpnTargetNetwork" },
        { "service": "EC2", "action": "DescribeClientVpnTargetNetworks" }
      ],
      "delete": [
        { "service": "EC2", "action": "DisassociateClientVpnTargetNetwork" },
        { "service": "EC2", "action": "DescribeClientVpnTargetNetworks" }
      ]
    },
    "client_vpn_route": {
      "create": [
        { "service": "EC2", "action": "CreateClientVpnRoute" },
        { "service": "EC2", "action": "DescribeClientVpnRoutes" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeClientVpnRoutes" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteClientVpnRoute" },
        { "service": "EC2", "action": "DescribeClientVpnRoutes" }
      ]
    },
    "customer_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateCustomerGateway" },
        { "service": "EC2", "action": "DescribeCustomerGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeCustomerGateways" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteCustomerGateway" },
        { "service": "EC2", "action": "DescribeCustomerGateways" }
      ]
    },
    "default_network_acl": {
      "create": [
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "DeleteNetworkAclEntry" },
        { "service": "EC2", "action": "CreateNetworkAclEntry" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ],
      "read": [],
      "update": [
        { "service": "EC2", "action": "DeleteNetworkAclEntry" },
        { "service": "EC2", "action": "CreateNetworkAclEntry" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ],
      "delete": []
    },
    "default_route_table": {
      "create": [
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DisableVgwRoutePropagation" },
        { "service": "EC2", "action": "DeleteRoute" },
        { "service": "EC2", "action": "EnableVgwRoutePropagation" },
        { "service": "EC2", "action": "CreateRoute" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "default_security_group": {
      "create": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroupRules" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupEgress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupIngress" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "default_subnet": {
      "create": [
        { "service": "EC2", "action": "DescribeSubnets" },
        { "service": "EC2", "action": "CreateDefaultSubnet" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "DisassociateSubnetCidrBlock" },
        { "service": "EC2", "action": "AssociateSubnetCidrBlock" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "default_vpc": {
      "create": [
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "DescribeVpcClassicLink" },
        { "service": "EC2", "action": "DescribeVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DescribeVpcAttribute" },
        { "service": "EC2", "action": "CreateDefaultVpc" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "EnableVpcClassicLink" },
        { "service": "EC2", "action": "DisableVpcClassicLink" },
        { "service": "EC2", "action": "EnableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DisableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DisassociateVpcCidrBlock" },
        { "service": "EC2", "action": "AssociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "default_vpc_dhcp_options": {
      "create": [{ "service": "EC2", "action": "DescribeDhcpOptions" }],
      "read": [],
      "update": [],
      "delete": []
    },
    "ebs_default_kms_key": {
      "create": [
        { "service": "EC2", "action": "ModifyEbsDefaultKmsKeyId" },
        { "service": "EC2", "action": "GetEbsDefaultKmsKeyId" }
      ],
      "read": [{ "service": "EC2", "action": "GetEbsDefaultKmsKeyId" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "ResetEbsDefaultKmsKeyId" }]
    },
    "ebs_encryption_by_default": {
      "create": [
        { "service": "EC2", "action": "EnableEbsEncryptionByDefault" },
        { "service": "EC2", "action": "DisableEbsEncryptionByDefault" },
        { "service": "EC2", "action": "GetEbsEncryptionByDefault" }
      ],
      "read": [{ "service": "EC2", "action": "GetEbsEncryptionByDefault" }],
      "update": [
        { "service": "EC2", "action": "EnableEbsEncryptionByDefault" },
        { "service": "EC2", "action": "DisableEbsEncryptionByDefault" },
        { "service": "EC2", "action": "GetEbsEncryptionByDefault" }
      ],
      "delete": [
        { "service": "EC2", "action": "EnableEbsEncryptionByDefault" },
        { "service": "EC2", "action": "DisableEbsEncryptionByDefault" }
      ]
    },
    "ebs_snapshot": {
      "create": [
        { "service": "EC2", "action": "CreateSnapshot" },
        { "service": "EC2", "action": "WaitUntilSnapshotCompleted" },
        { "service": "EC2", "action": "ModifySnapshotTier" },
        { "service": "EC2", "action": "DescribeSnapshotTierStatus" },
        { "service": "EC2", "action": "DescribeSnapshots" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSnapshots" }],
      "update": [
        { "service": "EC2", "action": "ModifySnapshotTier" },
        { "service": "EC2", "action": "DescribeSnapshotTierStatus" },
        { "service": "EC2", "action": "RestoreSnapshotTier" },
        { "service": "EC2", "action": "DescribeSnapshots" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteSnapshot" }]
    },
    "ebs_snapshot_copy": {
      "create": [
        { "service": "EC2", "action": "CopySnapshot" },
        { "service": "EC2", "action": "WaitUntilSnapshotCompleted" },
        { "service": "EC2", "action": "ModifySnapshotTier" },
        { "service": "EC2", "action": "DescribeSnapshotTierStatus" },
        { "service": "EC2", "action": "DescribeSnapshots" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "ebs_snapshot_import": {
      "create": [
        { "service": "EC2", "action": "ImportSnapshot" },
        { "service": "EC2", "action": "DescribeImportSnapshotTasks" },
        { "service": "EC2", "action": "ModifySnapshotTier" },
        { "service": "EC2", "action": "DescribeSnapshotTierStatus" },
        { "service": "EC2", "action": "DescribeSnapshots" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSnapshots" }],
      "update": [],
      "delete": []
    },
    "ebs_volume": {
      "create": [
        { "service": "EC2", "action": "CreateVolume" },
        { "service": "EC2", "action": "DescribeVolumes" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVolumes" }],
      "update": [
        { "service": "EC2", "action": "ModifyVolume" },
        { "service": "EC2", "action": "DescribeVolumes" }
      ],
      "delete": [
        { "service": "EC2", "action": "CreateSnapshot" },
        { "service": "EC2", "action": "WaitUntilSnapshotCompleted" },
        { "service": "EC2", "action": "DeleteVolume" },
        { "service": "EC2", "action": "DescribeVolumes" }
      ]
    },
    "egress_only_internet_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateEgressOnlyInternetGateway" },
        { "service": "EC2", "action": "DescribeEgressOnlyInternetGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeEgressOnlyInternetGateways" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteEgressOnlyInternetGateway" }]
    },
    "eip": {
      "create": [
        { "service": "EC2", "action": "AllocateAddress" },
        { "service": "EC2", "action": "DescribeAddresses" },
        { "service": "EC2", "action": "AssociateAddress" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeAddresses" }],
      "update": [
        { "service": "EC2", "action": "DisassociateAddress" },
        { "service": "EC2", "action": "AssociateAddress" },
        { "service": "EC2", "action": "DescribeAddresses" }
      ],
      "delete": [
        { "service": "EC2", "action": "DisassociateAddress" },
        { "service": "EC2", "action": "ReleaseAddress" }
      ]
    },
    "eip_association": {
      "create": [
        { "service": "EC2", "action": "AssociateAddress" },
        { "service": "EC2", "action": "DescribeAddresses" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeAddresses" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DisassociateAddress" }]
    },
    "fleet": {
      "create": [
        { "service": "EC2", "action": "CreateFleet" },
        { "service": "EC2", "action": "DescribeFleets" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeFleets" }],
      "update": [
        { "service": "EC2", "action": "ModifyFleet" },
        { "service": "EC2", "action": "DescribeFleets" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteFleets" },
        { "service": "EC2", "action": "DescribeFleets" }
      ]
    },
    "flow_log": {
      "create": [
        { "service": "EC2", "action": "CreateFlowLogs" },
        { "service": "EC2", "action": "DescribeFlowLogs" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeFlowLogs" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteFlowLogs" }]
    },
    "host": {
      "create": [
        { "service": "EC2", "action": "AllocateHosts" },
        { "service": "EC2", "action": "DescribeHosts" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeHosts" }],
      "update": [
        { "service": "EC2", "action": "ModifyHosts" },
        { "service": "EC2", "action": "DescribeHosts" }
      ],
      "delete": [
        { "service": "EC2", "action": "ReleaseHosts" },
        { "service": "EC2", "action": "DescribeHosts" }
      ]
    },
    "instance": {
      "create": [
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" },
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "RunInstances" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeIamInstanceProfileAssociations" },
        { "service": "EC2", "action": "AssociateIamInstanceProfile" },
        { "service": "EC2", "action": "AssociateIamInstanceProfile" },
        { "service": "EC2", "action": "DisassociateIamInstanceProfile" },
        { "service": "EC2", "action": "ReplaceIamInstanceProfileAssociation" },
        { "service": "EC2", "action": "ReplaceIamInstanceProfileAssociation" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" },
        { "service": "EC2", "action": "StopInstances" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "StartInstances" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceMaintenanceOptions" },
        { "service": "EC2", "action": "MonitorInstances" },
        { "service": "EC2", "action": "UnmonitorInstances" },
        { "service": "EC2", "action": "ModifyInstanceCreditSpecification" },
        { "service": "EC2", "action": "ModifyInstanceMetadataOptions" },
        { "service": "EC2", "action": "ModifyInstanceMetadataOptions" },
        { "service": "EC2", "action": "ModifyVolume" },
        { "service": "EC2", "action": "DescribeVolumesModifications" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceCapacityReservationAttributes" },
        { "service": "EC2", "action": "ModifyPrivateDnsNameOptions" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceCreditSpecifications" },
        { "service": "EC2", "action": "GetPasswordData" },
        { "service": "EC2", "action": "GetPasswordData" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceCreditSpecifications" },
        { "service": "EC2", "action": "GetPasswordData" },
        { "service": "EC2", "action": "GetPasswordData" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeIamInstanceProfileAssociations" },
        { "service": "EC2", "action": "AssociateIamInstanceProfile" },
        { "service": "EC2", "action": "AssociateIamInstanceProfile" },
        { "service": "EC2", "action": "DisassociateIamInstanceProfile" },
        { "service": "EC2", "action": "ReplaceIamInstanceProfileAssociation" },
        { "service": "EC2", "action": "ReplaceIamInstanceProfileAssociation" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" },
        { "service": "EC2", "action": "StopInstances" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "StartInstances" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceMaintenanceOptions" },
        { "service": "EC2", "action": "MonitorInstances" },
        { "service": "EC2", "action": "UnmonitorInstances" },
        { "service": "EC2", "action": "ModifyInstanceCreditSpecification" },
        { "service": "EC2", "action": "ModifyInstanceMetadataOptions" },
        { "service": "EC2", "action": "ModifyInstanceMetadataOptions" },
        { "service": "EC2", "action": "ModifyVolume" },
        { "service": "EC2", "action": "DescribeVolumesModifications" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceCapacityReservationAttributes" },
        { "service": "EC2", "action": "ModifyPrivateDnsNameOptions" },
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" },
        { "service": "EC2", "action": "DescribeTags" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceAttribute" },
        { "service": "EC2", "action": "DescribeInstanceCreditSpecifications" },
        { "service": "EC2", "action": "GetPasswordData" },
        { "service": "EC2", "action": "GetPasswordData" }
      ],
      "delete": [
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "ModifyInstanceAttribute" },
        { "service": "EC2", "action": "TerminateInstances" },
        { "service": "EC2", "action": "DescribeInstances" }
      ]
    },
    "instance_state": {
      "create": [
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "StopInstances" },
        { "service": "EC2", "action": "StartInstances" },
        { "service": "EC2", "action": "DescribeInstanceStatus" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeInstanceStatus" }],
      "update": [
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "StopInstances" },
        { "service": "EC2", "action": "StartInstances" },
        { "service": "EC2", "action": "DescribeInstanceStatus" }
      ],
      "delete": []
    },
    "internet_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateInternetGateway" },
        { "service": "EC2", "action": "AttachInternetGateway" },
        { "service": "EC2", "action": "DescribeInternetGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeInternetGateways" }],
      "update": [
        { "service": "EC2", "action": "DetachInternetGateway" },
        { "service": "EC2", "action": "DescribeInternetGateways" },
        { "service": "EC2", "action": "AttachInternetGateway" }
      ],
      "delete": [
        { "service": "EC2", "action": "DetachInternetGateway" },
        { "service": "EC2", "action": "DescribeInternetGateways" },
        { "service": "EC2", "action": "DeleteInternetGateway" }
      ]
    },
    "internet_gateway_attachment": {
      "create": [
        { "service": "EC2", "action": "AttachInternetGateway" },
        { "service": "EC2", "action": "DescribeInternetGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeInternetGateways" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DetachInternetGateway" },
        { "service": "EC2", "action": "DescribeInternetGateways" }
      ]
    },
    "key_pair": {
      "create": [
        { "service": "EC2", "action": "ImportKeyPair" },
        { "service": "EC2", "action": "DescribeKeyPairs" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeKeyPairs" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteKeyPair" }]
    },
    "launch_template": {
      "create": [
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "CreateLaunchTemplate" },
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" },
        { "service": "EC2", "action": "DescribeInstanceTypes" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "CreateLaunchTemplateVersion" },
        { "service": "EC2", "action": "ModifyLaunchTemplate" },
        { "service": "EC2", "action": "DescribeLaunchTemplates" },
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteLaunchTemplate" }]
    },
    "local_gateway_route": {
      "create": [
        { "service": "EC2", "action": "CreateLocalGatewayRoute" },
        { "service": "EC2", "action": "SearchLocalGatewayRoutes" }
      ],
      "read": [{ "service": "EC2", "action": "SearchLocalGatewayRoutes" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteLocalGatewayRoute" }]
    },
    "local_gateway_route_table_vpc_association": {
      "create": [
        { "service": "EC2", "action": "CreateLocalGatewayRouteTableVpcAssociation" },
        { "service": "EC2", "action": "DescribeLocalGatewayRouteTableVpcAssociations" },
        { "service": "EC2", "action": "DescribeLocalGatewayRouteTableVpcAssociations" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeLocalGatewayRouteTableVpcAssociations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteLocalGatewayRouteTableVpcAssociation" },
        { "service": "EC2", "action": "DescribeLocalGatewayRouteTableVpcAssociations" }
      ]
    },
    "main_route_table_association": {
      "create": [
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "ReplaceRouteTableAssociation" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeRouteTables" }],
      "update": [
        { "service": "EC2", "action": "ReplaceRouteTableAssociation" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ],
      "delete": [
        { "service": "EC2", "action": "ReplaceRouteTableAssociation" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ]
    },
    "managed_prefix_list": {
      "create": [
        { "service": "EC2", "action": "CreateManagedPrefixList" },
        { "service": "EC2", "action": "DescribeManagedPrefixLists" },
        { "service": "EC2", "action": "GetManagedPrefixListEntries" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeManagedPrefixLists" },
        { "service": "EC2", "action": "GetManagedPrefixListEntries" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifyManagedPrefixList" },
        { "service": "EC2", "action": "DescribeManagedPrefixLists" },
        { "service": "EC2", "action": "ModifyManagedPrefixList" },
        { "service": "EC2", "action": "ModifyManagedPrefixList" },
        { "service": "EC2", "action": "GetManagedPrefixListEntries" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteManagedPrefixList" },
        { "service": "EC2", "action": "DescribeManagedPrefixLists" }
      ]
    },
    "managed_prefix_list_entry": {
      "create": [
        { "service": "EC2", "action": "DescribeManagedPrefixLists" },
        { "service": "EC2", "action": "ModifyManagedPrefixList" },
        { "service": "EC2", "action": "GetManagedPrefixListEntries" }
      ],
      "read": [{ "service": "EC2", "action": "GetManagedPrefixListEntries" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DescribeManagedPrefixLists" },
        { "service": "EC2", "action": "ModifyManagedPrefixList" }
      ]
    },
    "nat_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateNatGateway" },
        { "service": "EC2", "action": "DescribeNatGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNatGateways" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteNatGateway" },
        { "service": "EC2", "action": "DescribeNatGateways" }
      ]
    },
    "network_acl": {
      "create": [
        { "service": "EC2", "action": "CreateNetworkAcl" },
        { "service": "EC2", "action": "CreateNetworkAclEntry" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkAcls" }],
      "update": [
        { "service": "EC2", "action": "DeleteNetworkAclEntry" },
        { "service": "EC2", "action": "CreateNetworkAclEntry" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ],
      "delete": [
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" },
        { "service": "EC2", "action": "DeleteNetworkAcl" }
      ]
    },
    "network_acl_association": {
      "create": [
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkAcls" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "ReplaceNetworkAclAssociation" }
      ]
    },
    "network_acl_rule": {
      "create": [
        { "service": "EC2", "action": "CreateNetworkAclEntry" },
        { "service": "EC2", "action": "DescribeNetworkAcls" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkAcls" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteNetworkAclEntry" }]
    },
    "network_insights_analysis": {
      "create": [
        { "service": "EC2", "action": "StartNetworkInsightsAnalysis" },
        { "service": "EC2", "action": "DescribeNetworkInsightsAnalyses" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkInsightsAnalyses" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteNetworkInsightsAnalysis" }]
    },
    "network_insights_path": {
      "create": [
        { "service": "EC2", "action": "CreateNetworkInsightsPath" },
        { "service": "EC2", "action": "DescribeNetworkInsightsPaths" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkInsightsPaths" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteNetworkInsightsPath" }]
    },
    "network_interface": {
      "create": [
        { "service": "EC2", "action": "CreateNetworkInterface" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" },
        { "service": "EC2", "action": "AttachNetworkInterface" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkInterfaces" }],
      "update": [
        { "service": "EC2", "action": "DetachNetworkInterface" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "AttachNetworkInterface" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "UnassignPrivateIpAddresses" },
        { "service": "EC2", "action": "AssignPrivateIpAddresses" },
        { "service": "EC2", "action": "UnassignIpv6Addresses" },
        { "service": "EC2", "action": "AssignIpv6Addresses" },
        { "service": "EC2", "action": "AssignIpv6Addresses" },
        { "service": "EC2", "action": "UnassignIpv6Addresses" },
        { "service": "EC2", "action": "UnassignIpv6Addresses" },
        { "service": "EC2", "action": "AssignIpv6Addresses" },
        { "service": "EC2", "action": "UnassignIpv6Addresses" },
        { "service": "EC2", "action": "AssignIpv6Addresses" },
        { "service": "EC2", "action": "AssignIpv6Addresses" },
        { "service": "EC2", "action": "UnassignIpv6Addresses" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" }
      ],
      "delete": [
        { "service": "EC2", "action": "DetachNetworkInterface" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "DeleteNetworkInterface" }
      ]
    },
    "network_interface_attachment": {
      "create": [
        { "service": "EC2", "action": "AttachNetworkInterface" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkInterfaces" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DetachNetworkInterface" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ]
    },
    "network_interface_sg_attachment": {
      "create": [
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeNetworkInterfaces" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" }
      ]
    },
    "placement_group": {
      "create": [
        { "service": "EC2", "action": "CreatePlacementGroup" },
        { "service": "EC2", "action": "DescribePlacementGroups" }
      ],
      "read": [{ "service": "EC2", "action": "DescribePlacementGroups" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeletePlacementGroup" },
        { "service": "EC2", "action": "DescribePlacementGroups" }
      ]
    },
    "route": {
      "create": [{ "service": "EC2", "action": "CreateRoute" }],
      "read": [],
      "update": [{ "service": "EC2", "action": "ReplaceRoute" }],
      "delete": [{ "service": "EC2", "action": "DeleteRoute" }]
    },
    "route_table": {
      "create": [
        { "service": "EC2", "action": "CreateRouteTable" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "EnableVgwRoutePropagation" },
        { "service": "EC2", "action": "CreateRoute" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ],
      "update": [
        { "service": "EC2", "action": "DisableVgwRoutePropagation" },
        { "service": "EC2", "action": "EnableVgwRoutePropagation" },
        { "service": "EC2", "action": "ReplaceRoute" },
        { "service": "EC2", "action": "CreateRoute" },
        { "service": "EC2", "action": "DeleteRoute" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeNetworkInterfaces" }
      ],
      "delete": [
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DisassociateRouteTable" },
        { "service": "EC2", "action": "DeleteRouteTable" }
      ]
    },
    "route_table_association": {
      "create": [
        { "service": "EC2", "action": "AssociateRouteTable" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeRouteTables" }],
      "update": [
        { "service": "EC2", "action": "ReplaceRouteTableAssociation" },
        { "service": "EC2", "action": "AssociateRouteTable" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ],
      "delete": [
        { "service": "EC2", "action": "DisassociateRouteTable" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ]
    },
    "security_group": {
      "create": [
        { "service": "EC2", "action": "CreateSecurityGroup" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupEgress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupIngress" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSecurityGroups" }],
      "update": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupEgress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupIngress" }
      ],
      "delete": [
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "DetachNetworkInterface" },
        { "service": "EC2", "action": "DeleteNetworkInterface" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroupRules" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" },
        { "service": "EC2", "action": "DeleteSecurityGroup" },
        { "service": "EC2", "action": "DeleteSecurityGroup" }
      ]
    },
    "security_group_rule": {
      "create": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupIngress" },
        { "service": "EC2", "action": "AuthorizeSecurityGroupEgress" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroupRules" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "UpdateSecurityGroupRuleDescriptionsIngress" },
        { "service": "EC2", "action": "UpdateSecurityGroupRuleDescriptionsEgress" },
        { "service": "EC2", "action": "DescribeSecurityGroupRules" }
      ],
      "delete": [
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "RevokeSecurityGroupIngress" },
        { "service": "EC2", "action": "RevokeSecurityGroupEgress" }
      ]
    },
    "serial_console_access": {
      "create": [
        { "service": "EC2", "action": "EnableSerialConsoleAccess" },
        { "service": "EC2", "action": "DisableSerialConsoleAccess" },
        { "service": "EC2", "action": "GetSerialConsoleAccessStatus" }
      ],
      "read": [{ "service": "EC2", "action": "GetSerialConsoleAccessStatus" }],
      "update": [
        { "service": "EC2", "action": "EnableSerialConsoleAccess" },
        { "service": "EC2", "action": "DisableSerialConsoleAccess" },
        { "service": "EC2", "action": "GetSerialConsoleAccessStatus" }
      ],
      "delete": [
        { "service": "EC2", "action": "EnableSerialConsoleAccess" },
        { "service": "EC2", "action": "DisableSerialConsoleAccess" }
      ]
    },
    "snapshot_create_volume_permission": {
      "create": [
        { "service": "EC2", "action": "ModifySnapshotAttribute" },
        { "service": "EC2", "action": "DescribeSnapshotAttribute" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSnapshotAttribute" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "ModifySnapshotAttribute" },
        { "service": "EC2", "action": "DescribeSnapshotAttribute" }
      ]
    },
    "spot_datafeed_subscription": {
      "create": [
        { "service": "EC2", "action": "CreateSpotDatafeedSubscription" },
        { "service": "EC2", "action": "DescribeSpotDatafeedSubscription" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSpotDatafeedSubscription" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteSpotDatafeedSubscription" }]
    },
    "spot_fleet_request": {
      "create": [
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "RequestSpotFleet" },
        { "service": "EC2", "action": "DescribeSpotFleetRequests" },
        { "service": "EC2", "action": "DescribeSpotFleetRequestHistory" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeSpotFleetRequests" },
        { "service": "EC2", "action": "DescribeImages" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifySpotFleetRequest" },
        { "service": "EC2", "action": "DescribeSpotFleetRequests" },
        { "service": "EC2", "action": "DescribeImages" }
      ],
      "delete": [
        { "service": "EC2", "action": "CancelSpotFleetRequests" },
        { "service": "EC2", "action": "DescribeSpotFleetInstances" }
      ]
    },
    "spot_instance_request": {
      "create": [
        { "service": "EC2", "action": "DescribeLaunchTemplateVersions" },
        { "service": "EC2", "action": "DescribeInstanceTypes" },
        { "service": "EC2", "action": "DescribeImages" },
        { "service": "EC2", "action": "RequestSpotInstances" },
        { "service": "EC2", "action": "RequestSpotInstances" },
        { "service": "EC2", "action": "DescribeSpotInstanceRequests" },
        { "service": "EC2", "action": "DescribeSpotInstanceRequests" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "GetPasswordData" },
        { "service": "EC2", "action": "GetPasswordData" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeSpotInstanceRequests" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "GetPasswordData" },
        { "service": "EC2", "action": "GetPasswordData" }
      ],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "CancelSpotInstanceRequests" },
        { "service": "EC2", "action": "TerminateInstances" },
        { "service": "EC2", "action": "DescribeInstances" }
      ]
    },
    "subnet": {
      "create": [
        { "service": "EC2", "action": "CreateSubnet" },
        { "service": "EC2", "action": "DescribeSubnets" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "DisassociateSubnetCidrBlock" },
        { "service": "EC2", "action": "AssociateSubnetCidrBlock" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeSubnets" }],
      "update": [
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "DescribeSubnets" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "ModifySubnetAttribute" },
        { "service": "EC2", "action": "DisassociateSubnetCidrBlock" },
        { "service": "EC2", "action": "AssociateSubnetCidrBlock" }
      ],
      "delete": [
        { "service": "EC2", "action": "DescribeNetworkInterfaces" },
        { "service": "EC2", "action": "DetachNetworkInterface" },
        { "service": "EC2", "action": "DeleteNetworkInterface" },
        { "service": "EC2", "action": "DeleteSubnet" }
      ]
    },
    "subnet_cidr_reservation": {
      "create": [
        { "service": "EC2", "action": "CreateSubnetCidrReservation" },
        { "service": "EC2", "action": "GetSubnetCidrReservations" }
      ],
      "read": [{ "service": "EC2", "action": "GetSubnetCidrReservations" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteSubnetCidrReservation" }]
    },
    "tag": {
      "create": [{ "service": "EC2", "action": "DescribeTags" }],
      "read": [{ "service": "EC2", "action": "DescribeTags" }],
      "update": [{ "service": "EC2", "action": "DescribeTags" }],
      "delete": []
    },
    "traffic_mirror_filter": {
      "create": [
        { "service": "EC2", "action": "CreateTrafficMirrorFilter" },
        { "service": "EC2", "action": "ModifyTrafficMirrorFilterNetworkServices" },
        { "service": "EC2", "action": "DescribeTrafficMirrorFilters" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTrafficMirrorFilters" }],
      "update": [
        { "service": "EC2", "action": "ModifyTrafficMirrorFilterNetworkServices" },
        { "service": "EC2", "action": "DescribeTrafficMirrorFilters" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteTrafficMirrorFilter" }]
    },
    "traffic_mirror_filter_rule": {
      "create": [
        { "service": "EC2", "action": "CreateTrafficMirrorFilterRule" },
        { "service": "EC2", "action": "DescribeTrafficMirrorFilters" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTrafficMirrorFilters" }],
      "update": [
        { "service": "EC2", "action": "ModifyTrafficMirrorFilterRule" },
        { "service": "EC2", "action": "DescribeTrafficMirrorFilters" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteTrafficMirrorFilterRule" }]
    },
    "traffic_mirror_session": {
      "create": [
        { "service": "EC2", "action": "CreateTrafficMirrorSession" },
        { "service": "EC2", "action": "DescribeTrafficMirrorSessions" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTrafficMirrorSessions" }],
      "update": [
        { "service": "EC2", "action": "ModifyTrafficMirrorSession" },
        { "service": "EC2", "action": "DescribeTrafficMirrorSessions" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteTrafficMirrorSession" }]
    },
    "traffic_mirror_target": {
      "create": [
        { "service": "EC2", "action": "CreateTrafficMirrorTarget" },
        { "service": "EC2", "action": "DescribeTrafficMirrorTargets" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTrafficMirrorTargets" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DeleteTrafficMirrorTarget" }]
    },
    "transit_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGateway" },
        { "service": "EC2", "action": "DescribeTransitGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGateways" }],
      "update": [
        { "service": "EC2", "action": "ModifyTransitGateway" },
        { "service": "EC2", "action": "DescribeTransitGateways" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGateway" },
        { "service": "EC2", "action": "DescribeTransitGateways" }
      ]
    },
    "transit_gateway_connect": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayConnect" },
        { "service": "EC2", "action": "DescribeTransitGatewayConnects" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeTransitGatewayConnects" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DescribeTransitGatewayConnects" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayConnect" },
        { "service": "EC2", "action": "DescribeTransitGatewayConnects" }
      ]
    },
    "transit_gateway_connect_peer": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayConnectPeer" },
        { "service": "EC2", "action": "DescribeTransitGatewayConnectPeers" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGatewayConnectPeers" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayConnectPeer" },
        { "service": "EC2", "action": "DescribeTransitGatewayConnectPeers" }
      ]
    },
    "transit_gateway_multicast_domain": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayMulticastDomain" },
        { "service": "EC2", "action": "DescribeTransitGatewayMulticastDomains" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGatewayMulticastDomains" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" },
        { "service": "EC2", "action": "DeregisterTransitGatewayMulticastGroupMembers" },
        { "service": "EC2", "action": "DeregisterTransitGatewayMulticastGroupSources" },
        { "service": "EC2", "action": "GetTransitGatewayMulticastDomainAssociations" },
        { "service": "EC2", "action": "DisassociateTransitGatewayMulticastDomain" },
        { "service": "EC2", "action": "DeleteTransitGatewayMulticastDomain" },
        { "service": "EC2", "action": "DescribeTransitGatewayMulticastDomains" }
      ]
    },
    "transit_gateway_multicast_domain_association": {
      "create": [
        { "service": "EC2", "action": "AssociateTransitGatewayMulticastDomain" },
        { "service": "EC2", "action": "GetTransitGatewayMulticastDomainAssociations" }
      ],
      "read": [{ "service": "EC2", "action": "GetTransitGatewayMulticastDomainAssociations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateTransitGatewayMulticastDomain" },
        { "service": "EC2", "action": "GetTransitGatewayMulticastDomainAssociations" }
      ]
    },
    "transit_gateway_multicast_group_member": {
      "create": [
        { "service": "EC2", "action": "RegisterTransitGatewayMulticastGroupMembers" },
        { "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }
      ],
      "read": [{ "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeregisterTransitGatewayMulticastGroupMembers" },
        { "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }
      ]
    },
    "transit_gateway_multicast_group_source": {
      "create": [
        { "service": "EC2", "action": "RegisterTransitGatewayMulticastGroupSources" },
        { "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }
      ],
      "read": [{ "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeregisterTransitGatewayMulticastGroupSources" },
        { "service": "EC2", "action": "SearchTransitGatewayMulticastGroups" }
      ]
    },
    "transit_gateway_peering_attachment": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayPeeringAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayPeeringAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" }
      ]
    },
    "transit_gateway_peering_attachment_accepter": {
      "create": [
        { "service": "EC2", "action": "AcceptTransitGatewayPeeringAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" }
      ],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayPeeringAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayPeeringAttachments" }
      ]
    },
    "transit_gateway_policy_table": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayPolicyTable" },
        { "service": "EC2", "action": "DescribeTransitGatewayPolicyTables" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGatewayPolicyTables" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayPolicyTable" },
        { "service": "EC2", "action": "DescribeTransitGatewayPolicyTables" }
      ]
    },
    "transit_gateway_policy_table_association": {
      "create": [
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayPolicyTable" },
        { "service": "EC2", "action": "GetTransitGatewayPolicyTableAssociations" }
      ],
      "read": [{ "service": "EC2", "action": "GetTransitGatewayPolicyTableAssociations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateTransitGatewayPolicyTable" },
        { "service": "EC2", "action": "GetTransitGatewayPolicyTableAssociations" }
      ]
    },
    "transit_gateway_prefix_list_reference": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayPrefixListReference" },
        { "service": "EC2", "action": "GetTransitGatewayPrefixListReferences" }
      ],
      "read": [{ "service": "EC2", "action": "GetTransitGatewayPrefixListReferences" }],
      "update": [
        { "service": "EC2", "action": "ModifyTransitGatewayPrefixListReference" },
        { "service": "EC2", "action": "GetTransitGatewayPrefixListReferences" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayPrefixListReference" },
        { "service": "EC2", "action": "GetTransitGatewayPrefixListReferences" }
      ]
    },
    "transit_gateway_route": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayRoute" },
        { "service": "EC2", "action": "SearchTransitGatewayRoutes" }
      ],
      "read": [{ "service": "EC2", "action": "SearchTransitGatewayRoutes" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayRoute" },
        { "service": "EC2", "action": "SearchTransitGatewayRoutes" }
      ]
    },
    "transit_gateway_route_table": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DescribeTransitGatewayRouteTables" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeTransitGatewayRouteTables" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DescribeTransitGatewayRouteTables" }
      ]
    },
    "transit_gateway_route_table_association": {
      "create": [
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" }
      ],
      "read": [{ "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" }
      ]
    },
    "transit_gateway_route_table_propagation": {
      "create": [
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }
      ],
      "read": [{ "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }
      ]
    },
    "transit_gateway_vpc_attachment": {
      "create": [
        { "service": "EC2", "action": "CreateTransitGatewayVpcAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifyTransitGatewayVpcAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayVpcAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" }
      ]
    },
    "transit_gateway_vpc_attachment_accepter": {
      "create": [
        { "service": "EC2", "action": "AcceptTransitGatewayVpcAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" },
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeTransitGateways" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTableAssociations" },
        { "service": "EC2", "action": "AssociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "DisassociateTransitGatewayRouteTable" },
        { "service": "EC2", "action": "GetTransitGatewayRouteTablePropagations" },
        { "service": "EC2", "action": "EnableTransitGatewayRouteTablePropagation" },
        { "service": "EC2", "action": "DisableTransitGatewayRouteTablePropagation" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteTransitGatewayVpcAttachment" },
        { "service": "EC2", "action": "DescribeTransitGatewayVpcAttachments" }
      ]
    },
    "volume_attachment": {
      "create": [
        { "service": "EC2", "action": "DescribeVolumes" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "AttachVolume" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVolumes" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "StopInstances" },
        { "service": "EC2", "action": "DescribeInstances" },
        { "service": "EC2", "action": "DetachVolume" },
        { "service": "EC2", "action": "DescribeVolumes" }
      ]
    },
    "vpc": {
      "create": [
        { "service": "EC2", "action": "CreateVpc" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "DescribeVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "EnableVpcClassicLink" },
        { "service": "EC2", "action": "DisableVpcClassicLink" },
        { "service": "EC2", "action": "EnableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DisableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DescribeVpcClassicLink" },
        { "service": "EC2", "action": "DescribeVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "DescribeVpcClassicLink" },
        { "service": "EC2", "action": "DescribeVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DescribeVpcAttribute" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "DescribeVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "ModifyVpcAttribute" },
        { "service": "EC2", "action": "EnableVpcClassicLink" },
        { "service": "EC2", "action": "DisableVpcClassicLink" },
        { "service": "EC2", "action": "EnableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DisableVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "ModifyVpcTenancy" },
        { "service": "EC2", "action": "DisassociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "AssociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcClassicLink" },
        { "service": "EC2", "action": "DescribeVpcClassicLinkDnsSupport" },
        { "service": "EC2", "action": "DescribeNetworkAcls" },
        { "service": "EC2", "action": "DescribeRouteTables" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteVpc" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ]
    },
    "vpc_dhcp_options": {
      "create": [
        { "service": "EC2", "action": "CreateDhcpOptions" },
        { "service": "EC2", "action": "DescribeDhcpOptions" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeDhcpOptions" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DescribeVpcs" },
        { "service": "EC2", "action": "AssociateDhcpOptions" },
        { "service": "EC2", "action": "DeleteDhcpOptions" }
      ]
    },
    "vpc_dhcp_options_association": {
      "create": [
        { "service": "EC2", "action": "AssociateDhcpOptions" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcs" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "AssociateDhcpOptions" }]
    },
    "vpc_endpoint": {
      "create": [
        { "service": "EC2", "action": "CreateVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "AcceptVpcEndpointConnections" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" },
        { "service": "EC2", "action": "DescribePrefixLists" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeVpcEndpoints" },
        { "service": "EC2", "action": "DescribePrefixLists" }
      ],
      "update": [
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "AcceptVpcEndpointConnections" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" },
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribePrefixLists" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteVpcEndpoints" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ]
    },
    "vpc_endpoint_connection_accepter": {
      "create": [
        { "service": "EC2", "action": "AcceptVpcEndpointConnections" },
        { "service": "EC2", "action": "DescribeVpcEndpointConnections" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpointConnections" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "RejectVpcEndpointConnections" }]
    },
    "vpc_endpoint_connection_notification": {
      "create": [
        { "service": "EC2", "action": "CreateVpcEndpointConnectionNotification" },
        { "service": "EC2", "action": "DescribeVpcEndpointConnectionNotifications" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpointConnectionNotifications" }],
      "update": [
        { "service": "EC2", "action": "ModifyVpcEndpointConnectionNotification" },
        { "service": "EC2", "action": "DescribeVpcEndpointConnectionNotifications" }
      ],
      "delete": [{ "service": "EC2", "action": "DeleteVpcEndpointConnectionNotifications" }]
    },
    "vpc_endpoint_policy": {
      "create": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpoints" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ]
    },
    "vpc_endpoint_route_table_association": {
      "create": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpoints" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ]
    },
    "vpc_endpoint_security_group_association": {
      "create": [
        { "service": "EC2", "action": "DescribeVpcEndpoints" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "ModifyVpcEndpoint" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpoints" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DescribeVpcEndpoints" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "ModifyVpcEndpoint" }
      ]
    },
    "vpc_endpoint_service": {
      "create": [
        { "service": "EC2", "action": "CreateVpcEndpointServiceConfiguration" },
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "ModifyVpcEndpointServicePermissions" },
        { "service": "EC2", "action": "DescribeVpcEndpointServicePermissions" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "DescribeVpcEndpointServicePermissions" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifyVpcEndpointServiceConfiguration" },
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "ModifyVpcEndpointServicePermissions" },
        { "service": "EC2", "action": "DescribeVpcEndpointServicePermissions" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteVpcEndpointServiceConfigurations" },
        { "service": "EC2", "action": "DescribeVpcEndpointServiceConfigurations" }
      ]
    },
    "vpc_endpoint_service_allowed_principal": {
      "create": [
        { "service": "EC2", "action": "ModifyVpcEndpointServicePermissions" },
        { "service": "EC2", "action": "DescribeVpcEndpointServicePermissions" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpointServicePermissions" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "ModifyVpcEndpointServicePermissions" }]
    },
    "vpc_endpoint_subnet_association": {
      "create": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcEndpoints" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "ModifyVpcEndpoint" },
        { "service": "EC2", "action": "DescribeVpcEndpoints" }
      ]
    },
    "vpc_ipam": {
      "create": [
        { "service": "EC2", "action": "CreateIpam" },
        { "service": "EC2", "action": "DescribeIpams" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeIpams" }],
      "update": [
        { "service": "EC2", "action": "ModifyIpam" },
        { "service": "EC2", "action": "DescribeIpams" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteIpam" },
        { "service": "EC2", "action": "DescribeIpams" }
      ]
    },
    "vpc_ipam_organization_admin_account": {
      "create": [
        { "service": "EC2", "action": "EnableIpamOrganizationAdminAccount" },
        { "service": "Organizations", "action": "ListDelegatedAdministrators" }
      ],
      "read": [{ "service": "Organizations", "action": "ListDelegatedAdministrators" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DisableIpamOrganizationAdminAccount" }]
    },
    "vpc_ipam_pool": {
      "create": [
        { "service": "EC2", "action": "CreateIpamPool" },
        { "service": "EC2", "action": "DescribeIpamPools" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeIpamPools" }],
      "update": [
        { "service": "EC2", "action": "ModifyIpamPool" },
        { "service": "EC2", "action": "DescribeIpamPools" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteIpamPool" },
        { "service": "EC2", "action": "DescribeIpamPools" }
      ]
    },
    "vpc_ipam_pool_cidr": {
      "create": [
        { "service": "EC2", "action": "ProvisionIpamPoolCidr" },
        { "service": "EC2", "action": "GetIpamPoolCidrs" }
      ],
      "read": [{ "service": "EC2", "action": "GetIpamPoolCidrs" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeprovisionIpamPoolCidr" },
        { "service": "EC2", "action": "GetIpamPoolCidrs" }
      ]
    },
    "vpc_ipam_pool_cidr_allocation": {
      "create": [
        { "service": "EC2", "action": "AllocateIpamPoolCidr" },
        { "service": "EC2", "action": "GetIpamPoolAllocations" }
      ],
      "read": [{ "service": "EC2", "action": "GetIpamPoolAllocations" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "ReleaseIpamPoolAllocation" }]
    },
    "vpc_ipam_preview_next_cidr": {
      "create": [{ "service": "EC2", "action": "AllocateIpamPoolCidr" }],
      "read": [],
      "update": [],
      "delete": []
    },
    "vpc_ipam_resource_discovery": {
      "create": [
        { "service": "EC2", "action": "CreateIpamResourceDiscovery" },
        { "service": "EC2", "action": "DescribeIpamResourceDiscoveries" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeIpamResourceDiscoveries" }],
      "update": [
        { "service": "EC2", "action": "ModifyIpamResourceDiscovery" },
        { "service": "EC2", "action": "DescribeIpamResourceDiscoveries" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteIpamResourceDiscovery" },
        { "service": "EC2", "action": "DescribeIpamResourceDiscoveries" }
      ]
    },
    "vpc_ipam_resource_discovery_association": {
      "create": [
        { "service": "EC2", "action": "AssociateIpamResourceDiscovery" },
        { "service": "EC2", "action": "DescribeIpamResourceDiscoveryAssociations" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeIpamResourceDiscoveryAssociations" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateIpamResourceDiscovery" },
        { "service": "EC2", "action": "DescribeIpamResourceDiscoveryAssociations" }
      ]
    },
    "vpc_ipam_scope": {
      "create": [
        { "service": "EC2", "action": "CreateIpamScope" },
        { "service": "EC2", "action": "DescribeIpamScopes" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeIpamScopes" }],
      "update": [
        { "service": "EC2", "action": "ModifyIpamScope" },
        { "service": "EC2", "action": "DescribeIpamScopes" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteIpamScope" },
        { "service": "EC2", "action": "DescribeIpamScopes" }
      ]
    },
    "vpc_ipv4_cidr_block_association": {
      "create": [
        { "service": "EC2", "action": "AssociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcs" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ]
    },
    "vpc_ipv6_cidr_block_association": {
      "create": [
        { "service": "EC2", "action": "AssociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcs" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DisassociateVpcCidrBlock" },
        { "service": "EC2", "action": "DescribeVpcs" }
      ]
    },
    "vpc_network_performance_metric_subscription": {
      "create": [{ "service": "EC2Client", "action": "EnableAwsNetworkPerformanceMetricSubscription" }],
      "read": [],
      "update": [],
      "delete": [{ "service": "EC2Client", "action": "DisableAwsNetworkPerformanceMetricSubscription" }]
    },
    "vpc_peering_connection": {
      "create": [
        { "service": "EC2", "action": "CreateVpcPeeringConnection" },
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" },
        { "service": "EC2", "action": "AcceptVpcPeeringConnection" },
        { "service": "EC2", "action": "ModifyVpcPeeringConnectionOptions" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcPeeringConnections" }],
      "update": [
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" },
        { "service": "EC2", "action": "AcceptVpcPeeringConnection" },
        { "service": "EC2", "action": "ModifyVpcPeeringConnectionOptions" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteVpcPeeringConnection" },
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" }
      ]
    },
    "vpc_peering_connection_accepter": {
      "create": [
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" },
        { "service": "EC2", "action": "AcceptVpcPeeringConnection" },
        { "service": "EC2", "action": "ModifyVpcPeeringConnectionOptions" }
      ],
      "read": [],
      "update": [],
      "delete": []
    },
    "vpc_peering_connection_options": {
      "create": [
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" },
        { "service": "EC2", "action": "ModifyVpcPeeringConnectionOptions" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpcPeeringConnections" }],
      "update": [
        { "service": "EC2", "action": "DescribeVpcPeeringConnections" },
        { "service": "EC2", "action": "ModifyVpcPeeringConnectionOptions" }
      ],
      "delete": []
    },
    "vpn_connection": {
      "create": [
        { "service": "EC2", "action": "CreateVpnConnection" },
        { "service": "EC2", "action": "DescribeVpnConnections" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" }
      ],
      "read": [
        { "service": "EC2", "action": "DescribeVpnConnections" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" }
      ],
      "update": [
        { "service": "EC2", "action": "ModifyVpnConnection" },
        { "service": "EC2", "action": "DescribeVpnConnections" },
        { "service": "EC2", "action": "ModifyVpnConnectionOptions" },
        { "service": "EC2", "action": "ModifyVpnTunnelOptions" },
        { "service": "EC2", "action": "DescribeTransitGatewayAttachments" }
      ],
      "delete": [
        { "service": "EC2", "action": "DeleteVpnConnection" },
        { "service": "EC2", "action": "DescribeVpnConnections" }
      ]
    },
    "vpn_connection_route": {
      "create": [
        { "service": "EC2", "action": "CreateVpnConnectionRoute" },
        { "service": "EC2", "action": "DescribeVpnConnections" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpnConnections" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DeleteVpnConnectionRoute" },
        { "service": "EC2", "action": "DescribeVpnConnections" }
      ]
    },
    "vpn_gateway": {
      "create": [
        { "service": "EC2", "action": "CreateVpnGateway" },
        { "service": "EC2", "action": "AttachVpnGateway" },
        { "service": "EC2", "action": "DescribeVpnGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpnGateways" }],
      "update": [
        { "service": "EC2", "action": "DetachVpnGateway" },
        { "service": "EC2", "action": "DescribeVpnGateways" },
        { "service": "EC2", "action": "AttachVpnGateway" }
      ],
      "delete": [
        { "service": "EC2", "action": "DetachVpnGateway" },
        { "service": "EC2", "action": "DescribeVpnGateways" },
        { "service": "EC2", "action": "DeleteVpnGateway" }
      ]
    },
    "vpn_gateway_attachment": {
      "create": [
        { "service": "EC2", "action": "AttachVpnGateway" },
        { "service": "EC2", "action": "DescribeVpnGateways" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeVpnGateways" }],
      "update": [],
      "delete": [
        { "service": "EC2", "action": "DetachVpnGateway" },
        { "service": "EC2", "action": "DescribeVpnGateways" }
      ]
    },
    "vpn_gateway_route_propagation": {
      "create": [
        { "service": "EC2", "action": "EnableVgwRoutePropagation" },
        { "service": "EC2", "action": "DescribeRouteTables" }
      ],
      "read": [{ "service": "EC2", "action": "DescribeRouteTables" }],
      "update": [],
      "delete": [{ "service": "EC2", "action": "DisableVgwRoutePropagation" }]
    }
  },
  "ecr": {
    "lifecycle_policy": {
      "create": [
        { "service": "ECR", "action": "PutLifecyclePolicy" },
        { "service": "ECR", "action": "GetLifecyclePolicy" },
        { "service": "ECR", "action": "GetLifecyclePolicy" }
      ],
      "read": [
        { "service": "ECR", "action": "GetLifecyclePolicy" },
        { "service": "ECR", "action": "GetLifecyclePolicy" }
      ],
      "update": [],
      "delete": [{ "service": "ECR", "action": "DeleteLifecyclePolicy" }]
    },
    "pull_through_cache_rule": {
      "create": [
        { "service": "ECR", "action": "CreatePullThroughCacheRule" },
        { "service": "ECR", "action": "DescribePullThroughCacheRules" }
      ],
      "read": [{ "service": "ECR", "action": "DescribePullThroughCacheRules" }],
      "update": [],
      "delete": [{ "service": "ECR", "action": "DeletePullThroughCacheRule" }]
    },
    "registry_policy": {
      "create": [
        { "service": "ECR", "action": "PutRegistryPolicy" },
        { "service": "ECR", "action": "GetRegistryPolicy" }
      ],
      "read": [{ "service": "ECR", "action": "GetRegistryPolicy" }],
      "update": [],
      "delete": [{ "service": "ECR", "action": "DeleteRegistryPolicy" }]
    },
    "registry_scanning_configuration": {
      "create": [
        { "service": "ECR", "action": "PutRegistryScanningConfiguration" },
        { "service": "ECR", "action": "GetRegistryScanningConfiguration" }
      ],
      "read": [{ "service": "ECR", "action": "GetRegistryScanningConfiguration" }],
      "update": [],
      "delete": [{ "service": "ECR", "action": "PutRegistryScanningConfiguration" }]
    },
    "replication_configuration": {
      "create": [
        { "service": "ECR", "action": "PutReplicationConfiguration" },
        { "service": "ECR", "action": "DescribeRegistry" }
      ],
      "read": [{ "service": "ECR", "action": "DescribeRegistry" }],
      "update": [],
      "delete": [{ "service": "ECR", "action": "PutReplicationConfiguration" }]
    },
    "repository": {
      "create": [
        { "service": "ECR", "action": "CreateRepository" },
        { "service": "ECR", "action": "CreateRepository" },
        { "service": "ECR", "action": "DescribeRepositories" }
      ],
      "read": [{ "service": "ECR", "action": "DescribeRepositories" }],
      "update": [
        { "service": "ECR", "action": "PutImageTagMutability" },
        { "service": "ECR", "action": "PutImageScanningConfiguration" },
        { "service": "ECR", "action": "DescribeRepositories" }
      ],
      "delete": [
        { "service": "ECR", "action": "DeleteRepository" },
        { "service": "ECR", "action": "DescribeRepositories" }
      ]
    },
    "repository_policy": {
      "create": [
        { "service": "ECR", "action": "SetRepositoryPolicy" },
        { "service": "ECR", "action": "SetRepositoryPolicy" },
        { "service": "ECR", "action": "GetRepositoryPolicy" },
        { "service": "ECR", "action": "GetRepositoryPolicy" }
      ],
      "read": [
        { "service": "ECR", "action": "GetRepositoryPolicy" },
        { "service": "ECR", "action": "GetRepositoryPolicy" }
      ],
      "update": [],
      "delete": [{ "service": "ECR", "action": "DeleteRepositoryPolicy" }]
    }
  },
  "ecrpublic": {
    "repository": {
      "create": [
        { "service": "ECRPublic", "action": "CreateRepository" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "GetRepositoryCatalogData" }
      ],
      "read": [
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "GetRepositoryCatalogData" }
      ],
      "update": [
        { "service": "ECRPublic", "action": "PutRepositoryCatalogData" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "GetRepositoryCatalogData" }
      ],
      "delete": [
        { "service": "ECRPublic", "action": "DeleteRepository" },
        { "service": "ECRPublic", "action": "DescribeRepositories" },
        { "service": "ECRPublic", "action": "DescribeRepositories" }
      ]
    },
    "repository_policy": {
      "create": [
        { "service": "ECRPublic", "action": "SetRepositoryPolicy" },
        { "service": "ECRPublic", "action": "GetRepositoryPolicy" }
      ],
      "read": [{ "service": "ECRPublic", "action": "GetRepositoryPolicy" }],
      "update": [],
      "delete": [{ "service": "ECRPublic", "action": "DeleteRepositoryPolicy" }]
    }
  },
  "ecs": {
    "account_setting_default": {
      "create": [
        { "service": "ECS", "action": "PutAccountSettingDefault" },
        { "service": "ECS", "action": "ListAccountSettings" }
      ],
      "read": [{ "service": "ECS", "action": "ListAccountSettings" }],
      "update": [{ "service": "ECS", "action": "PutAccountSettingDefault" }],
      "delete": [{ "service": "ECS", "action": "PutAccountSettingDefault" }]
    },
    "capacity_provider": {
      "create": [
        { "service": "ECS", "action": "CreateCapacityProvider" },
        { "service": "ECS", "action": "CreateCapacityProvider" },
        { "service": "ECS", "action": "DescribeCapacityProviders" },
        { "service": "ECS", "action": "DescribeCapacityProviders" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeCapacityProviders" },
        { "service": "ECS", "action": "DescribeCapacityProviders" }
      ],
      "update": [
        { "service": "ECS", "action": "UpdateCapacityProvider" },
        { "service": "ECS", "action": "UpdateCapacityProvider" },
        { "service": "ECS", "action": "DescribeCapacityProviders" },
        { "service": "ECS", "action": "DescribeCapacityProviders" }
      ],
      "delete": [
        { "service": "ECS", "action": "DeleteCapacityProvider" },
        { "service": "ECS", "action": "DescribeCapacityProviders" },
        { "service": "ECS", "action": "DescribeCapacityProviders" }
      ]
    },
    "cluster": {
      "create": [
        { "service": "ECS", "action": "CreateCluster" },
        { "service": "ECS", "action": "CreateCluster" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ],
      "update": [
        { "service": "ECS", "action": "UpdateCluster" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "PutClusterCapacityProviders" }
      ],
      "delete": [
        { "service": "ECS", "action": "DeleteCluster" },
        { "service": "ECS", "action": "DeleteCluster" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ]
    },
    "cluster_capacity_providers": {
      "create": [
        { "service": "ECS", "action": "PutClusterCapacityProviders" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ],
      "update": [],
      "delete": [
        { "service": "ECS", "action": "PutClusterCapacityProviders" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" },
        { "service": "ECS", "action": "DescribeClusters" }
      ]
    },
    "service": {
      "create": [
        { "service": "ECS", "action": "CreateService" },
        { "service": "ECS", "action": "CreateService" },
        { "service": "ECS", "action": "DescribeServices" },
        { "service": "ECS", "action": "DescribeServices" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeServices" },
        { "service": "ECS", "action": "DescribeServices" }
      ],
      "update": [
        { "service": "ECS", "action": "UpdateService" },
        { "service": "ECS", "action": "UpdateService" },
        { "service": "ECS", "action": "DescribeServices" },
        { "service": "ECS", "action": "DescribeServices" }
      ],
      "delete": [
        { "service": "ECS", "action": "DescribeServices" },
        { "service": "ECS", "action": "DescribeServices" },
        { "service": "ECS", "action": "UpdateService" },
        { "service": "ECS", "action": "DeleteService" },
        { "service": "ECS", "action": "DeleteService" }
      ]
    },
    "tag": { "create": [], "read": [], "update": [], "delete": [] },
    "task_definition": {
      "create": [
        { "service": "ECS", "action": "RegisterTaskDefinition" },
        { "service": "ECS", "action": "RegisterTaskDefinition" },
        { "service": "ECS", "action": "DescribeTaskDefinition" },
        { "service": "ECS", "action": "DescribeTaskDefinition" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeTaskDefinition" },
        { "service": "ECS", "action": "DescribeTaskDefinition" }
      ],
      "update": [],
      "delete": [{ "service": "ECS", "action": "DeregisterTaskDefinition" }]
    },
    "task_set": {
      "create": [
        { "service": "ECS", "action": "CreateTaskSet" },
        { "service": "ECS", "action": "DescribeTaskSets" },
        { "service": "ECS", "action": "DescribeTaskSets" },
        { "service": "ECS", "action": "DescribeTaskSets" }
      ],
      "read": [
        { "service": "ECS", "action": "DescribeTaskSets" },
        { "service": "ECS", "action": "DescribeTaskSets" }
      ],
      "update": [
        { "service": "ECS", "action": "UpdateTaskSet" },
        { "service": "ECS", "action": "DescribeTaskSets" },
        { "service": "ECS", "action": "DescribeTaskSets" },
        { "service": "ECS", "action": "DescribeTaskSets" }
      ],
      "delete": [
        { "service": "ECS", "action": "DeleteTaskSet" },
        { "service": "ECS", "action": "DescribeTaskSets" }
      ]
    }
  },
  "efs": {
    "access_point": {
      "create": [
        { "service": "EFS", "action": "CreateAccessPoint" },
        { "service": "EFS", "action": "DescribeAccessPoints" },
        { "service": "EFS", "action": "DescribeAccessPoints" }
      ],
      "read": [{ "service": "EFS", "action": "DescribeAccessPoints" }],
      "update": [],
      "delete": [
        { "service": "EFS", "action": "DeleteAccessPoint" },
        { "service": "EFS", "action": "DescribeAccessPoints" }
      ]
    },
    "backup_policy": {
      "create": [
        { "service": "EFS", "action": "PutBackupPolicy" },
        { "service": "EFS", "action": "DescribeBackupPolicy" }
      ],
      "read": [{ "service": "EFS", "action": "DescribeBackupPolicy" }],
      "update": [
        { "service": "EFS", "action": "PutBackupPolicy" },
        { "service": "EFS", "action": "DescribeBackupPolicy" }
      ],
      "delete": [
        { "service": "EFS", "action": "PutBackupPolicy" },
        { "service": "EFS", "action": "DescribeBackupPolicy" }
      ]
    },
    "file_system": {
      "create": [
        { "service": "EFS", "action": "CreateFileSystem" },
        { "service": "EFS", "action": "DescribeFileSystems" },
        { "service": "EFS", "action": "PutLifecycleConfiguration" },
        { "service": "EFS", "action": "DescribeLifecycleConfiguration" }
      ],
      "read": [
        { "service": "EFS", "action": "DescribeFileSystems" },
        { "service": "EFS", "action": "DescribeLifecycleConfiguration" }
      ],
      "update": [
        { "service": "EFS", "action": "UpdateFileSystem" },
        { "service": "EFS", "action": "DescribeFileSystems" },
        { "service": "EFS", "action": "PutLifecycleConfiguration" },
        { "service": "EFS", "action": "DescribeLifecycleConfiguration" }
      ],
      "delete": [
        { "service": "EFS", "action": "DeleteFileSystem" },
        { "service": "EFS", "action": "DescribeFileSystems" }
      ]
    },
    "file_system_policy": {
      "create": [
        { "service": "EFS", "action": "PutFileSystemPolicy" },
        { "service": "EFS", "action": "DescribeFileSystemPolicy" }
      ],
      "read": [{ "service": "EFS", "action": "DescribeFileSystemPolicy" }],
      "update": [],
      "delete": [{ "service": "EFS", "action": "DeleteFileSystemPolicy" }]
    },
    "mount_target": {
      "create": [
        { "service": "EFS", "action": "CreateMountTarget" },
        { "service": "EFS", "action": "DescribeMountTargets" },
        { "service": "EFS", "action": "DescribeMountTargetSecurityGroups" }
      ],
      "read": [
        { "service": "EFS", "action": "DescribeMountTargets" },
        { "service": "EFS", "action": "DescribeMountTargetSecurityGroups" }
      ],
      "update": [
        { "service": "EFS", "action": "ModifyMountTargetSecurityGroups" },
        { "service": "EFS", "action": "DescribeMountTargets" },
        { "service": "EFS", "action": "DescribeMountTargetSecurityGroups" }
      ],
      "delete": [
        { "service": "EFS", "action": "DeleteMountTarget" },
        { "service": "EFS", "action": "DescribeMountTargets" }
      ]
    },
    "replication_configuration": {
      "create": [
        { "service": "EFS", "action": "CreateReplicationConfiguration" },
        { "service": "EFS", "action": "DescribeReplicationConfigurations" }
      ],
      "read": [{ "service": "EFS", "action": "DescribeReplicationConfigurations" }],
      "update": [],
      "delete": [{ "service": "EFS", "action": "DescribeReplicationConfigurations" }]
    }
  },
  "eks": {
    "addon": {
      "create": [
        { "service": "EKS", "action": "CreateAddon" },
        { "service": "EKS", "action": "CreateAddon" },
        { "service": "EKS", "action": "DescribeAddon" }
      ],
      "read": [{ "service": "EKS", "action": "DescribeAddon" }],
      "update": [
        { "service": "EKS", "action": "UpdateAddon" },
        { "service": "EKS", "action": "DescribeUpdate" },
        { "service": "EKS", "action": "DescribeAddon" }
      ],
      "delete": [
        { "service": "EKS", "action": "DeleteAddon" },
        { "service": "EKS", "action": "DescribeAddon" }
      ]
    },
    "cluster": {
      "create": [
        { "service": "EKS", "action": "CreateCluster" },
        { "service": "EKS", "action": "DescribeCluster" }
      ],
      "read": [{ "service": "EKS", "action": "DescribeCluster" }],
      "update": [
        { "service": "EKS", "action": "UpdateClusterVersion" },
        { "service": "EKS", "action": "DescribeUpdate" },
        { "service": "EKS", "action": "AssociateEncryptionConfig" },
        { "service": "EKS", "action": "UpdateClusterConfig" },
        { "service": "EKS", "action": "UpdateClusterConfig" },
        { "service": "EKS", "action": "DescribeCluster" }
      ],
      "delete": [
        { "service": "EKS", "action": "DeleteCluster" },
        { "service": "EKS", "action": "DeleteCluster" },
        { "service": "EKS", "action": "DescribeCluster" }
      ]
    },
    "fargate_profile": {
      "create": [
        { "service": "EKS", "action": "CreateFargateProfile" },
        { "service": "EKS", "action": "CreateFargateProfile" },
        { "service": "EKS", "action": "DescribeFargateProfile" }
      ],
      "read": [{ "service": "EKS", "action": "DescribeFargateProfile" }],
      "update": [],
      "delete": [
        { "service": "EKS", "action": "DeleteFargateProfile" },
        { "service": "EKS", "action": "DescribeFargateProfile" }
      ]
    },
    "identity_provider_config": {
      "create": [
        { "service": "EKS", "action": "AssociateIdentityProviderConfig" },
        { "service": "EKS", "action": "DescribeIdentityProviderConfig" }
      ],
      "read": [{ "service": "EKS", "action": "DescribeIdentityProviderConfig" }],
      "update": [],
      "delete": [
        { "service": "EKS", "action": "DisassociateIdentityProviderConfig" },
        { "service": "EKS", "action": "DescribeIdentityProviderConfig" }
      ]
    },
    "node_group": {
      "create": [
        { "service": "EKS", "action": "CreateNodegroup" },
        { "service": "EKS", "action": "DescribeNodegroup" }
      ],
      "read": [{ "service": "EKS", "action": "DescribeNodegroup" }],
      "update": [
        { "service": "EKS", "action": "UpdateNodegroupVersion" },
        { "service": "EKS", "action": "DescribeUpdate" },
        { "service": "EKS", "action": "UpdateNodegroupConfig" },
        { "service": "EKS", "action": "DescribeNodegroup" }
      ],
      "delete": [
        { "service": "EKS", "action": "DeleteNodegroup" },
        { "service": "EKS", "action": "DescribeNodegroup" }
      ]
    }
  },
  "elasticache": {
    "cluster": {
      "create": [
        { "service": "ElastiCache", "action": "CreateCacheCluster" },
        { "service": "ElastiCache", "action": "CreateCacheCluster" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeCacheClusters" }],
      "update": [
        { "service": "ElastiCache", "action": "ModifyCacheCluster" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteCacheCluster" },
        { "service": "ElastiCache", "action": "DeleteCacheCluster" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ]
    },
    "global_replication_group": {
      "create": [
        { "service": "ElastiCache", "action": "CreateGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" },
        { "service": "ElastiCache", "action": "ModifyGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "IncreaseNodeGroupsInGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DecreaseNodeGroupsInGlobalReplicationGroup" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" }],
      "update": [
        { "service": "ElastiCache", "action": "ModifyGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" },
        { "service": "ElastiCache", "action": "IncreaseNodeGroupsInGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DecreaseNodeGroupsInGlobalReplicationGroup" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DeleteGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" }
      ]
    },
    "parameter_group": {
      "create": [
        { "service": "ElastiCache", "action": "CreateCacheParameterGroup" },
        { "service": "ElastiCache", "action": "CreateCacheParameterGroup" },
        { "service": "ElastiCache", "action": "ResetCacheParameterGroup" },
        { "service": "ElastiCache", "action": "ModifyCacheParameterGroup" },
        { "service": "ElastiCache", "action": "DescribeCacheParameterGroups" },
        { "service": "ElastiCache", "action": "DescribeCacheParameters" }
      ],
      "read": [
        { "service": "ElastiCache", "action": "DescribeCacheParameterGroups" },
        { "service": "ElastiCache", "action": "DescribeCacheParameters" }
      ],
      "update": [
        { "service": "ElastiCache", "action": "ResetCacheParameterGroup" },
        { "service": "ElastiCache", "action": "ModifyCacheParameterGroup" },
        { "service": "ElastiCache", "action": "DescribeCacheParameterGroups" },
        { "service": "ElastiCache", "action": "DescribeCacheParameters" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteCacheParameterGroup" },
        { "service": "ElastiCache", "action": "DeleteCacheParameterGroup" }
      ]
    },
    "replication_group": {
      "create": [
        { "service": "ElastiCache", "action": "CreateReplicationGroup" },
        { "service": "ElastiCache", "action": "CreateReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeReplicationGroups" },
        { "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ],
      "read": [
        { "service": "ElastiCache", "action": "DescribeReplicationGroups" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ],
      "update": [
        { "service": "ElastiCache", "action": "ModifyReplicationGroupShardConfiguration" },
        { "service": "ElastiCache", "action": "DescribeReplicationGroups" },
        { "service": "ElastiCache", "action": "IncreaseReplicaCount" },
        { "service": "ElastiCache", "action": "DecreaseReplicaCount" },
        { "service": "ElastiCache", "action": "IncreaseReplicaCount" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" },
        { "service": "ElastiCache", "action": "DecreaseReplicaCount" },
        { "service": "ElastiCache", "action": "ModifyReplicationGroup" },
        { "service": "ElastiCache", "action": "ModifyReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeCacheClusters" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DisassociateGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DisassociateGlobalReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeGlobalReplicationGroups" },
        { "service": "ElastiCache", "action": "DeleteReplicationGroup" },
        { "service": "ElastiCache", "action": "DeleteReplicationGroup" },
        { "service": "ElastiCache", "action": "DescribeReplicationGroups" },
        { "service": "ElastiCache", "action": "DeleteCacheParameterGroup" },
        { "service": "ElastiCache", "action": "DeleteCacheParameterGroup" }
      ]
    },
    "security_group": {
      "create": [],
      "read": [{ "service": "ElastiCache", "action": "DescribeCacheSecurityGroups" }],
      "update": [],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteCacheSecurityGroup" },
        { "service": "ElastiCache", "action": "DeleteCacheSecurityGroup" }
      ]
    },
    "subnet_group": {
      "create": [
        { "service": "ElastiCache", "action": "CreateCacheSubnetGroup" },
        { "service": "ElastiCache", "action": "CreateCacheSubnetGroup" },
        { "service": "ElastiCache", "action": "DescribeCacheSubnetGroups" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeCacheSubnetGroups" }],
      "update": [
        { "service": "ElastiCache", "action": "ModifyCacheSubnetGroup" },
        { "service": "ElastiCache", "action": "DescribeCacheSubnetGroups" }
      ],
      "delete": [{ "service": "ElastiCache", "action": "DeleteCacheSubnetGroup" }]
    },
    "user": {
      "create": [
        { "service": "ElastiCache", "action": "CreateUser" },
        { "service": "ElastiCache", "action": "CreateUser" },
        { "service": "ElastiCache", "action": "DescribeUsers" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeUsers" }],
      "update": [
        { "service": "ElastiCache", "action": "ModifyUser" },
        { "service": "ElastiCache", "action": "DescribeUsers" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteUser" },
        { "service": "ElastiCache", "action": "DescribeUsers" }
      ]
    },
    "user_group": {
      "create": [
        { "service": "ElastiCache", "action": "CreateUserGroup" },
        { "service": "ElastiCache", "action": "CreateUserGroup" },
        { "service": "ElastiCache", "action": "DescribeUserGroups" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeUserGroups" }],
      "update": [
        { "service": "ElastiCache", "action": "ModifyUserGroup" },
        { "service": "ElastiCache", "action": "DescribeUserGroups" }
      ],
      "delete": [
        { "service": "ElastiCache", "action": "DeleteUserGroup" },
        { "service": "ElastiCache", "action": "DescribeUserGroups" }
      ]
    },
    "user_group_association": {
      "create": [
        { "service": "ElastiCache", "action": "ModifyUserGroup" },
        { "service": "ElastiCache", "action": "DescribeUserGroups" }
      ],
      "read": [{ "service": "ElastiCache", "action": "DescribeUserGroups" }],
      "update": [],
      "delete": [
        { "service": "ElastiCache", "action": "ModifyUserGroup" },
        { "service": "ElastiCache", "action": "DescribeUserGroups" }
      ]
    }
  },
  "elasticbeanstalk": {
    "elastic_beanstalk_application": {
      "create": [
        { "service": "ElasticBeanstalk", "action": "CreateApplication" },
        { "service": "ElasticBeanstalk", "action": "UpdateApplicationResourceLifecycle" },
        { "service": "ElasticBeanstalk", "action": "DescribeApplications" }
      ],
      "read": [{ "service": "ElasticBeanstalk", "action": "DescribeApplications" }],
      "update": [
        { "service": "ElasticBeanstalk", "action": "UpdateApplication" },
        { "service": "ElasticBeanstalk", "action": "UpdateApplicationResourceLifecycle" },
        { "service": "ElasticBeanstalk", "action": "DescribeApplications" }
      ],
      "delete": [{ "service": "ElasticBeanstalk", "action": "DeleteApplication" }]
    },
    "elastic_beanstalk_application_version": {
      "create": [
        { "service": "ElasticBeanstalk", "action": "CreateApplicationVersion" },
        { "service": "ElasticBeanstalk", "action": "DescribeApplicationVersions" }
      ],
      "read": [{ "service": "ElasticBeanstalk", "action": "DescribeApplicationVersions" }],
      "update": [
        { "service": "ElasticBeanstalk", "action": "UpdateApplicationVersion" },
        { "service": "ElasticBeanstalk", "action": "DescribeApplicationVersions" }
      ],
      "delete": [
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironments" },
        { "service": "ElasticBeanstalk", "action": "DeleteApplicationVersion" }
      ]
    },
    "elastic_beanstalk_configuration_template": {
      "create": [
        { "service": "ElasticBeanstalk", "action": "CreateConfigurationTemplate" },
        { "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" }
      ],
      "read": [{ "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" }],
      "update": [
        { "service": "ElasticBeanstalk", "action": "UpdateConfigurationTemplate" },
        { "service": "ElasticBeanstalk", "action": "UpdateConfigurationTemplate" },
        { "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" }
      ],
      "delete": [{ "service": "ElasticBeanstalk", "action": "DeleteConfigurationTemplate" }]
    },
    "elastic_beanstalk_environment": {
      "create": [
        { "service": "ElasticBeanstalk", "action": "CreateEnvironment" },
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironments" },
        { "service": "ElasticBeanstalk", "action": "DescribeEvents" },
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironmentResources" },
        { "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "read": [
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironments" },
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironmentResources" },
        { "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "update": [
        { "service": "ElasticBeanstalk", "action": "UpdateEnvironment" },
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironments" },
        { "service": "ElasticBeanstalk", "action": "DescribeEvents" },
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironmentResources" },
        { "service": "ElasticBeanstalk", "action": "DescribeConfigurationSettings" },
        { "service": "EC2", "action": "DescribeSecurityGroups" },
        { "service": "EC2", "action": "DescribeSecurityGroups" }
      ],
      "delete": [
        { "service": "ElasticBeanstalk", "action": "DescribeEnvironments" },
        { "service": "ElasticBeanstalk", "action": "TerminateEnvironment" }
      ]
    }
  },
  "elasticsearch": {
    "domain": {
      "create": [
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "CreateElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomainConfig" }
      ],
      "read": [
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomainConfig" }
      ],
      "update": [
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "UpgradeElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "GetUpgradeStatus" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomainConfig" }
      ],
      "delete": [
        { "service": "Elasticsearch", "action": "DeleteElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomainConfig" }
      ]
    },
    "domain_policy": {
      "create": [
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }
      ],
      "read": [{ "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }],
      "update": [],
      "delete": [
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }
      ]
    },
    "domain_saml_options": {
      "create": [
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }
      ],
      "read": [{ "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }],
      "update": [],
      "delete": [
        { "service": "Elasticsearch", "action": "UpdateElasticsearchDomainConfig" },
        { "service": "Elasticsearch", "action": "DescribeElasticsearchDomain" }
      ]
    }
  },
  "elastictranscoder": {
    "pipeline": {
      "create": [
        { "service": "ElasticTranscoder", "action": "CreatePipeline" },
        { "service": "ElasticTranscoder", "action": "ReadPipeline" }
      ],
      "read": [{ "service": "ElasticTranscoder", "action": "ReadPipeline" }],
      "update": [
        { "service": "ElasticTranscoder", "action": "UpdatePipeline" },
        { "service": "ElasticTranscoder", "action": "ReadPipeline" }
      ],
      "delete": [{ "service": "ElasticTranscoder", "action": "DeletePipeline" }]
    },
    "preset": {
      "create": [
        { "service": "ElasticTranscoder", "action": "CreatePreset" },
        { "service": "ElasticTranscoder", "action": "ReadPreset" }
      ],
      "read": [{ "service": "ElasticTranscoder", "action": "ReadPreset" }],
      "update": [],
      "delete": [{ "service": "ElasticTranscoder", "action": "DeletePreset" }]
    }
  },
  "elb": {
    "app_cookie_stickiness_policy": {
      "create": [
        { "service": "ELB", "action": "CreateAppCookieStickinessPolicy" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "update": [],
      "delete": [
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" }
      ]
    },
    "attachment": {
      "create": [
        { "service": "ELB", "action": "RegisterInstancesWithLoadBalancer" },
        { "service": "ELB", "action": "RegisterInstancesWithLoadBalancer" }
      ],
      "read": [{ "service": "ELB", "action": "DescribeLoadBalancers" }],
      "update": [],
      "delete": [{ "service": "ELB", "action": "DeregisterInstancesFromLoadBalancer" }]
    },
    "elb": {
      "create": [
        { "service": "ELB", "action": "CreateLoadBalancer" },
        { "service": "ELB", "action": "DeleteLoadBalancerListeners" },
        { "service": "ELB", "action": "CreateLoadBalancerListeners" },
        { "service": "ELB", "action": "CreateLoadBalancerListeners" },
        { "service": "ELB", "action": "RegisterInstancesWithLoadBalancer" },
        { "service": "ELB", "action": "DeregisterInstancesFromLoadBalancer" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ConfigureHealthCheck" },
        { "service": "ELB", "action": "ApplySecurityGroupsToLoadBalancer" },
        { "service": "ELB", "action": "EnableAvailabilityZonesForLoadBalancer" },
        { "service": "ELB", "action": "DisableAvailabilityZonesForLoadBalancer" },
        { "service": "ELB", "action": "DetachLoadBalancerFromSubnets" },
        { "service": "ELB", "action": "AttachLoadBalancerToSubnets" },
        { "service": "ELB", "action": "AttachLoadBalancerToSubnets" },
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "DescribeLoadBalancerAttributes" }
      ],
      "read": [
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "DescribeLoadBalancerAttributes" }
      ],
      "update": [
        { "service": "ELB", "action": "DeleteLoadBalancerListeners" },
        { "service": "ELB", "action": "CreateLoadBalancerListeners" },
        { "service": "ELB", "action": "CreateLoadBalancerListeners" },
        { "service": "ELB", "action": "RegisterInstancesWithLoadBalancer" },
        { "service": "ELB", "action": "DeregisterInstancesFromLoadBalancer" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELB", "action": "ConfigureHealthCheck" },
        { "service": "ELB", "action": "ApplySecurityGroupsToLoadBalancer" },
        { "service": "ELB", "action": "EnableAvailabilityZonesForLoadBalancer" },
        { "service": "ELB", "action": "DisableAvailabilityZonesForLoadBalancer" },
        { "service": "ELB", "action": "DetachLoadBalancerFromSubnets" },
        { "service": "ELB", "action": "AttachLoadBalancerToSubnets" },
        { "service": "ELB", "action": "AttachLoadBalancerToSubnets" },
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "DescribeLoadBalancerAttributes" }
      ],
      "delete": [{ "service": "ELB", "action": "DeleteLoadBalancer" }]
    },
    "lb_cookie_stickiness_policy": {
      "create": [
        { "service": "ELB", "action": "CreateLBCookieStickinessPolicy" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "update": [],
      "delete": [
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" }
      ]
    },
    "lb_ssl_negotiation_policy": {
      "create": [
        { "service": "ELB", "action": "CreateLoadBalancerPolicy" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "update": [],
      "delete": [
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" }
      ]
    },
    "load_balancer_backend_server_policy": {
      "create": [
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [{ "service": "ELB", "action": "DescribeLoadBalancers" }],
      "update": [],
      "delete": [{ "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" }]
    },
    "load_balancer_listener_policy": {
      "create": [
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [{ "service": "ELB", "action": "DescribeLoadBalancers" }],
      "update": [],
      "delete": [{ "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" }]
    },
    "load_balancer_policy": {
      "create": [
        { "service": "ELB", "action": "CreateLoadBalancerPolicy" },
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" }
      ],
      "read": [{ "service": "ELB", "action": "DescribeLoadBalancerPolicies" }],
      "update": [
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" },
        { "service": "ELB", "action": "CreateLoadBalancerPolicy" },
        { "service": "ELB", "action": "DescribeLoadBalancerPolicies" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" }
      ],
      "delete": [
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesOfListener" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" }
      ]
    },
    "proxy_protocol_policy": {
      "create": [
        { "service": "ELB", "action": "CreateLoadBalancerPolicy" },
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "read": [{ "service": "ELB", "action": "DescribeLoadBalancers" }],
      "update": [
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "DescribeLoadBalancers" }
      ],
      "delete": [
        { "service": "ELB", "action": "DescribeLoadBalancers" },
        { "service": "ELB", "action": "SetLoadBalancerPoliciesForBackendServer" },
        { "service": "ELB", "action": "DeleteLoadBalancerPolicy" }
      ]
    }
  },
  "elbv2": {
    "alb": {
      "create": [
        { "service": "ELBV2", "action": "CreateLoadBalancer" },
        { "service": "ELBV2", "action": "CreateLoadBalancer" },
        { "service": "ELBV2", "action": "DescribeLoadBalancers" },
        { "service": "ELBV2", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELBV2", "action": "SetSecurityGroups" },
        { "service": "ELBV2", "action": "SetSubnets" },
        { "service": "ELBV2", "action": "SetIpAddressType" },
        { "service": "ELBV2", "action": "DescribeLoadBalancerAttributes" }
      ],
      "read": [
        { "service": "ELBV2", "action": "DescribeLoadBalancers" },
        { "service": "ELBV2", "action": "DescribeLoadBalancerAttributes" }
      ],
      "update": [
        { "service": "ELBV2", "action": "ModifyLoadBalancerAttributes" },
        { "service": "ELBV2", "action": "SetSecurityGroups" },
        { "service": "ELBV2", "action": "SetSubnets" },
        { "service": "ELBV2", "action": "SetIpAddressType" },
        { "service": "ELBV2", "action": "DescribeLoadBalancers" },
        { "service": "ELBV2", "action": "DescribeLoadBalancerAttributes" }
      ],
      "delete": [{ "service": "ELBV2", "action": "DeleteLoadBalancer" }]
    },
    "alb_listener": {
      "create": [
        { "service": "ELBV2", "action": "CreateListener" },
        { "service": "ELBV2", "action": "CreateListener" },
        { "service": "ELBV2", "action": "DescribeListeners" }
      ],
      "read": [{ "service": "ELBV2", "action": "DescribeListeners" }],
      "update": [
        { "service": "ELBV2", "action": "ModifyListener" },
        { "service": "ELBV2", "action": "ModifyListener" },
        { "service": "ELBV2", "action": "DescribeListeners" }
      ],
      "delete": [{ "service": "ELBV2", "action": "DeleteListener" }]
    },
    "alb_listener_certificate": {
      "create": [
        { "service": "ELBV2", "action": "AddListenerCertificates" },
        { "service": "ELBV2", "action": "AddListenerCertificates" },
        { "service": "ELBV2", "action": "DescribeListenerCertificates" }
      ],
      "read": [{ "service": "ELBV2", "action": "DescribeListenerCertificates" }],
      "update": [],
      "delete": [{ "service": "ELBV2", "action": "RemoveListenerCertificates" }]
    },
    "alb_listener_rule": {
      "create": [
        { "service": "ELBV2", "action": "CreateRule" },
        { "service": "ELBV2", "action": "DescribeRules" },
        { "service": "ELBV2", "action": "CreateRule" },
        { "service": "ELBV2", "action": "CreateRule" },
        { "service": "ELBV2", "action": "DescribeRules" },
        { "service": "ELBV2", "action": "DescribeRules" }
      ],
      "read": [
        { "service": "ELBV2", "action": "DescribeRules" },
        { "service": "ELBV2", "action": "DescribeRules" }
      ],
      "update": [
        { "service": "ELBV2", "action": "SetRulePriorities" },
        { "service": "ELBV2", "action": "ModifyRule" },
        { "service": "ELBV2", "action": "DescribeRules" },
        { "service": "ELBV2", "action": "DescribeRules" }
      ],
      "delete": [{ "service": "ELBV2", "action": "DeleteRule" }]
    },
    "alb_target_group": {
      "create": [
        { "service": "ELBV2", "action": "DescribeTargetGroups" },
        { "service": "ELBV2", "action": "CreateTargetGroup" },
        { "service": "ELBV2", "action": "CreateTargetGroup" },
        { "service": "ELBV2", "action": "CreateTargetGroup" },
        { "service": "ELBV2", "action": "ModifyTargetGroupAttributes" },
        { "service": "ELBV2", "action": "DescribeTargetGroupAttributes" }
      ],
      "read": [
        { "service": "ELBV2", "action": "DescribeTargetGroups" },
        { "service": "ELBV2", "action": "DescribeTargetGroupAttributes" }
      ],
      "update": [
        { "service": "ELBV2", "action": "ModifyTargetGroup" },
        { "service": "ELBV2", "action": "ModifyTargetGroupAttributes" },
        { "service": "ELBV2", "action": "DescribeTargetGroups" },
        { "service": "ELBV2", "action": "DescribeTargetGroupAttributes" }
      ],
      "delete": [
        { "service": "ELBV2", "action": "DeleteTargetGroup" },
        { "service": "ELBV2", "action": "DeleteTargetGroup" }
      ]
    },
    "alb_target_group_attachment": {
      "create": [
        { "service": "ELBV2", "action": "RegisterTargets" },
        { "service": "ELBV2", "action": "RegisterTargets" }
      ],
      "read": [{ "service": "ELBV2", "action": "DescribeTargetHealth" }],
      "update": [],
      "delete": [{ "service": "ELBV2", "action": "DeregisterTargets" }]
    },
    "lb": { "create": [], "read": [], "update": [], "delete": [] },
    "lb_listener": { "create": [], "read": [], "update": [], "delete": [] },
    "lb_listener_certificate": { "create": [], "read": [], "update": [], "delete": [] },
    "lb_listener_rule": { "create": [], "read": [], "update": [], "delete": [] },
    "lb_target_group": { "create": [], "read": [], "update": [], "delete": [] },
    "lb_target_group_attachment": { "create": [], "read": [], "update": [], "delete": [] }
  },
  "emr": {
    "block_public_access_configuration": {
      "create": [
        { "service": "EMR", "action": "PutBlockPublicAccessConfiguration" },
        { "service": "EMR", "action": "GetBlockPublicAccessConfiguration" }
      ],
      "read": [{ "service": "EMR", "action": "GetBlockPublicAccessConfiguration" }],
      "update": [],
      "delete": [{ "service": "EMR", "action": "PutBlockPublicAccessConfiguration" }]
    },
    "cluster": {
      "create": [
        { "service": "EMR", "action": "RunJobFlow" },
        { "service": "EMR", "action": "RunJobFlow" },
        { "service": "EMR", "action": "DescribeCluster" },
        { "service": "EMR", "action": "SetTerminationProtection" },
        { "service": "EMR", "action": "ListInstanceGroups" },
        { "service": "EMR", "action": "ListInstanceFleets" },
        { "service": "EMR", "action": "ListBootstrapActions" },
        { "service": "EMR", "action": "ListSteps" },
        { "service": "EMR", "action": "GetAutoTerminationPolicy" }
      ],
      "read": [
        { "service": "EMR", "action": "DescribeCluster" },
        { "service": "EMR", "action": "ListInstanceGroups" },
        { "service": "EMR", "action": "ListInstanceFleets" },
        { "service": "EMR", "action": "ListBootstrapActions" },
        { "service": "EMR", "action": "ListSteps" },
        { "service": "EMR", "action": "GetAutoTerminationPolicy" }
      ],
      "update": [
        { "service": "EMR", "action": "SetVisibleToAllUsers" },
        { "service": "EMR", "action": "PutAutoTerminationPolicy" },
        { "service": "EMR", "action": "RemoveAutoTerminationPolicy" },
        { "service": "EMR", "action": "SetTerminationProtection" },
        { "service": "EMR", "action": "PutAutoScalingPolicy" },
        { "service": "EMR", "action": "RemoveAutoScalingPolicy" },
        { "service": "EMR", "action": "ListInstanceGroups" },
        { "service": "EMR", "action": "ModifyInstanceGroups" },
        { "service": "EMR", "action": "ListInstanceGroups" },
        { "service": "EMR", "action": "PutAutoScalingPolicy" },
        { "service": "EMR", "action": "ModifyCluster" },
        { "service": "EMR", "action": "DescribeCluster" },
        { "service": "EMR", "action": "ListInstanceFleets" },
        { "service": "EMR", "action": "ListBootstrapActions" },
        { "service": "EMR", "action": "ListSteps" },
        { "service": "EMR", "action": "GetAutoTerminationPolicy" }
      ],
      "delete": [
        { "service": "EMR", "action": "TerminateJobFlows" },
        { "service": "EMR", "action": "DescribeCluster" }
      ]
    },
    "instance_fleet": {
      "create": [
        { "service": "EMR", "action": "AddInstanceFleet" },
        { "service": "EMR", "action": "ListInstanceFleets" }
      ],
      "read": [{ "service": "EMR", "action": "ListInstanceFleets" }],
      "update": [
        { "service": "EMR", "action": "ModifyInstanceFleet" },
        { "service": "EMR", "action": "ListInstanceFleets" }
      ],
      "delete": [{ "service": "EMR", "action": "ModifyInstanceFleet" }]
    },
    "instance_group": {
      "create": [
        { "service": "EMR", "action": "AddInstanceGroups" },
        { "service": "EMR", "action": "ListInstanceGroups" }
      ],
      "read": [{ "service": "EMR", "action": "ListInstanceGroups" }],
      "update": [
        { "service": "EMR", "action": "ModifyInstanceGroups" },
        { "service": "EMR", "action": "ListInstanceGroups" },
        { "service": "EMR", "action": "PutAutoScalingPolicy" }
      ],
      "delete": [{ "service": "EMR", "action": "ModifyInstanceGroups" }]
    },
    "managed_scaling_policy": {
      "create": [{ "service": "EMR", "action": "PutManagedScalingPolicy" }],
      "read": [{ "service": "EMR", "action": "GetManagedScalingPolicy" }],
      "update": [],
      "delete": [{ "service": "EMR", "action": "RemoveManagedScalingPolicy" }]
    },
    "security_configuration": {
      "create": [
        { "service": "EMR", "action": "CreateSecurityConfiguration" },
        { "service": "EMR", "action": "DescribeSecurityConfiguration" }
      ],
      "read": [{ "service": "EMR", "action": "DescribeSecurityConfiguration" }],
      "update": [],
      "delete": [{ "service": "EMR", "action": "DeleteSecurityConfiguration" }]
    },
    "studio": {
      "create": [
        { "service": "EMR", "action": "CreateStudio" },
        { "service": "EMR", "action": "CreateStudio" },
        { "service": "EMR", "action": "DescribeStudio" }
      ],
      "read": [{ "service": "EMR", "action": "DescribeStudio" }],
      "update": [
        { "service": "EMR", "action": "UpdateStudio" },
        { "service": "EMR", "action": "DescribeStudio" }
      ],
      "delete": [{ "service": "EMR", "action": "DeleteStudio" }]
    },
    "studio_session_mapping": {
      "create": [
        { "service": "EMR", "action": "CreateStudioSessionMapping" },
        { "service": "EMR", "action": "GetStudioSessionMapping" }
      ],
      "read": [{ "service": "EMR", "action": "GetStudioSessionMapping" }],
      "update": [
        { "service": "EMR", "action": "UpdateStudioSessionMapping" },
        { "service": "EMR", "action": "GetStudioSessionMapping" }
      ],
      "delete": [{ "service": "EMR", "action": "DeleteStudioSessionMapping" }]
    }
  },
  "emrcontainers": {
    "virtual_cluster": {
      "create": [
        { "service": "EMRContainers", "action": "CreateVirtualCluster" },
        { "service": "EMRContainers", "action": "DescribeVirtualCluster" }
      ],
      "read": [{ "service": "EMRContainers", "action": "DescribeVirtualCluster" }],
      "update": [],
      "delete": [
        { "service": "EMRContainers", "action": "DeleteVirtualCluster" },
        { "service": "EMRContainers", "action": "DescribeVirtualCluster" }
      ]
    }
  },
  "emrserverless": {
    "application": {
      "create": [
        { "service": "EMRServerless", "action": "CreateApplication" },
        { "service": "EMRServerless", "action": "GetApplication" }
      ],
      "read": [{ "service": "EMRServerless", "action": "GetApplication" }],
      "update": [
        { "service": "EMRServerless", "action": "UpdateApplication" },
        { "service": "EMRServerless", "action": "GetApplication" }
      ],
      "delete": [
        { "service": "EMRServerless", "action": "DeleteApplication" },
        { "service": "EMRServerless", "action": "GetApplication" }
      ]
    }
  },
  "events": {
    "cloudwatch_event_api_destination": {
      "create": [
        { "service": "Events", "action": "CreateApiDestination" },
        { "service": "Events", "action": "DescribeApiDestination" }
      ],
      "read": [{ "service": "Events", "action": "DescribeApiDestination" }],
      "update": [
        { "service": "Events", "action": "UpdateApiDestination" },
        { "service": "Events", "action": "DescribeApiDestination" }
      ],
      "delete": [{ "service": "Events", "action": "DeleteApiDestination" }]
    },
    "cloudwatch_event_archive": {
      "create": [
        { "service": "Events", "action": "CreateArchive" },
        { "service": "Events", "action": "DescribeArchive" }
      ],
      "read": [{ "service": "Events", "action": "DescribeArchive" }],
      "update": [
        { "service": "Events", "action": "UpdateArchive" },
        { "service": "Events", "action": "DescribeArchive" }
      ],
      "delete": [{ "service": "Events", "action": "DeleteArchive" }]
    },
    "cloudwatch_event_bus": {
      "create": [
        { "service": "Events", "action": "CreateEventBus" },
        { "service": "Events", "action": "CreateEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "read": [{ "service": "Events", "action": "DescribeEventBus" }],
      "update": [],
      "delete": [{ "service": "Events", "action": "DeleteEventBus" }]
    },
    "cloudwatch_event_bus_policy": {
      "create": [
        { "service": "Events", "action": "PutPermission" },
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "read": [
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "update": [
        { "service": "Events", "action": "PutPermission" },
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "delete": [{ "service": "Events", "action": "RemovePermission" }]
    },
    "cloudwatch_event_connection": { "create": [], "read": [], "update": [], "delete": [] },
    "cloudwatch_event_permission": {
      "create": [
        { "service": "Events", "action": "PutPermission" },
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "read": [
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "update": [
        { "service": "Events", "action": "PutPermission" },
        { "service": "Events", "action": "DescribeEventBus" },
        { "service": "Events", "action": "DescribeEventBus" }
      ],
      "delete": [{ "service": "Events", "action": "RemovePermission" }]
    },
    "cloudwatch_event_rule": {
      "create": [
        { "service": "Events", "action": "PutRule" },
        { "service": "Events", "action": "PutRule" },
        { "service": "Events", "action": "DescribeRule" }
      ],
      "read": [{ "service": "Events", "action": "DescribeRule" }],
      "update": [
        { "service": "Events", "action": "PutRule" },
        { "service": "Events", "action": "PutRule" },
        { "service": "Events", "action": "DescribeRule" }
      ],
      "delete": [
        { "service": "Events", "action": "DeleteRule" },
        { "service": "Events", "action": "DeleteRule" }
      ]
    },
    "cloudwatch_event_target": {
      "create": [
        { "service": "Events", "action": "PutTargets" },
        { "service": "Events", "action": "ListTargetsByRule" }
      ],
      "read": [{ "service": "Events", "action": "ListTargetsByRule" }],
      "update": [
        { "service": "Events", "action": "PutTargets" },
        { "service": "Events", "action": "ListTargetsByRule" }
      ],
      "delete": [{ "service": "Events", "action": "RemoveTargets" }]
    }
  },
  "evidently": {
    "feature": {
      "create": [
        { "service": "Evidently", "action": "CreateFeature" },
        { "service": "Evidently", "action": "GetFeature" }
      ],
      "read": [{ "service": "Evidently", "action": "GetFeature" }],
      "update": [
        { "service": "Evidently", "action": "UpdateFeature" },
        { "service": "Evidently", "action": "GetFeature" }
      ],
      "delete": [
        { "service": "Evidently", "action": "DeleteFeature" },
        { "service": "Evidently", "action": "GetFeature" }
      ]
    },
    "launch": {
      "create": [
        { "service": "Evidently", "action": "CreateLaunch" },
        { "service": "Evidently", "action": "GetLaunch" }
      ],
      "read": [{ "service": "Evidently", "action": "GetLaunch" }],
      "update": [
        { "service": "Evidently", "action": "UpdateLaunch" },
        { "service": "Evidently", "action": "GetLaunch" }
      ],
      "delete": [
        { "service": "Evidently", "action": "DeleteLaunch" },
        { "service": "Evidently", "action": "GetLaunch" }
      ]
    },
    "project": {
      "create": [
        { "service": "Evidently", "action": "CreateProject" },
        { "service": "Evidently", "action": "GetProject" }
      ],
      "read": [{ "service": "Evidently", "action": "GetProject" }],
      "update": [
        { "service": "Evidently", "action": "UpdateProject" },
        { "service": "Evidently", "action": "GetProject" },
        { "service": "Evidently", "action": "UpdateProjectDataDelivery" }
      ],
      "delete": [
        { "service": "Evidently", "action": "DeleteProject" },
        { "service": "Evidently", "action": "GetProject" }
      ]
    },
    "segment": {
      "create": [
        { "service": "Evidently", "action": "CreateSegment" },
        { "service": "Evidently", "action": "GetSegment" }
      ],
      "read": [{ "service": "Evidently", "action": "GetSegment" }],
      "update": [],
      "delete": [{ "service": "Evidently", "action": "DeleteSegment" }]
    }
  },
  "firehose": {
    "kinesis_delivery_stream": {
      "create": [
        { "service": "Firehose", "action": "CreateDeliveryStream" },
        { "service": "Firehose", "action": "CreateDeliveryStream" },
        { "service": "Firehose", "action": "DescribeDeliveryStream" },
        { "service": "Firehose", "action": "StartDeliveryStreamEncryption" }
      ],
      "read": [{ "service": "Firehose", "action": "DescribeDeliveryStream" }],
      "update": [
        { "service": "Firehose", "action": "UpdateDestination" },
        { "service": "Firehose", "action": "UpdateDestination" },
        { "service": "Firehose", "action": "StopDeliveryStreamEncryption" },
        { "service": "Firehose", "action": "DescribeDeliveryStream" },
        { "service": "Firehose", "action": "StartDeliveryStreamEncryption" }
      ],
      "delete": [
        { "service": "Firehose", "action": "DeleteDeliveryStream" },
        { "service": "Firehose", "action": "DescribeDeliveryStream" }
      ]
    }
  },
  "fis": {
    "experiment_template": {
      "create": [
        { "service": "FISClient", "action": "CreateExperimentTemplate" },
        { "service": "FISClient", "action": "GetExperimentTemplate" }
      ],
      "read": [{ "service": "FISClient", "action": "GetExperimentTemplate" }],
      "update": [
        { "service": "FISClient", "action": "UpdateExperimentTemplate" },
        { "service": "FISClient", "action": "GetExperimentTemplate" }
      ],
      "delete": [{ "service": "FISClient", "action": "DeleteExperimentTemplate" }]
    }
  },
  "fms": {
    "admin_account": {
      "create": [
        { "service": "FMS", "action": "GetAdminAccount" },
        { "service": "FMS", "action": "AssociateAdminAccount" },
        { "service": "FMS", "action": "GetAdminAccount" },
        { "service": "FMS", "action": "GetAdminAccount" }
      ],
      "read": [{ "service": "FMS", "action": "GetAdminAccount" }],
      "update": [],
      "delete": [
        { "service": "FMS", "action": "DisassociateAdminAccount" },
        { "service": "FMS", "action": "GetAdminAccount" }
      ]
    },
    "policy": {
      "create": [
        { "service": "FMS", "action": "PutPolicy" },
        { "service": "FMS", "action": "GetPolicy" }
      ],
      "read": [{ "service": "FMS", "action": "GetPolicy" }],
      "update": [
        { "service": "FMS", "action": "PutPolicy" },
        { "service": "FMS", "action": "GetPolicy" }
      ],
      "delete": [{ "service": "FMS", "action": "DeletePolicy" }]
    }
  },
  "fsx": {
    "backup": {
      "create": [
        { "service": "FSx", "action": "CreateBackup" },
        { "service": "FSx", "action": "DescribeBackups" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeBackups" }],
      "update": [],
      "delete": [
        { "service": "FSx", "action": "DeleteBackup" },
        { "service": "FSx", "action": "DescribeBackups" }
      ]
    },
    "data_repository_association": {
      "create": [
        { "service": "FSx", "action": "CreateDataRepositoryAssociation" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeDataRepositoryAssociations" }],
      "update": [
        { "service": "FSx", "action": "UpdateDataRepositoryAssociation" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteDataRepositoryAssociation" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ]
    },
    "file_cache": {
      "create": [
        { "service": "FSx", "action": "CreateFileCache" },
        { "service": "FSx", "action": "DescribeFileCaches" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ],
      "read": [
        { "service": "FSx", "action": "DescribeFileCaches" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ],
      "update": [
        { "service": "FSx", "action": "UpdateFileCache" },
        { "service": "FSx", "action": "DescribeFileCaches" },
        { "service": "FSx", "action": "DescribeDataRepositoryAssociations" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteFileCache" },
        { "service": "FSx", "action": "DescribeFileCaches" }
      ]
    },
    "lustre_file_system": {
      "create": [
        { "service": "FSx", "action": "CreateFileSystemFromBackup" },
        { "service": "FSx", "action": "CreateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeFileSystems" }],
      "update": [
        { "service": "FSx", "action": "UpdateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ]
    },
    "ontap_file_system": {
      "create": [
        { "service": "FSx", "action": "CreateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeFileSystems" }],
      "update": [
        { "service": "FSx", "action": "UpdateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ]
    },
    "ontap_storage_virtual_machine": {
      "create": [
        { "service": "FSx", "action": "CreateStorageVirtualMachine" },
        { "service": "FSx", "action": "DescribeStorageVirtualMachines" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeStorageVirtualMachines" }],
      "update": [
        { "service": "FSx", "action": "UpdateStorageVirtualMachine" },
        { "service": "FSx", "action": "DescribeStorageVirtualMachines" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteStorageVirtualMachine" },
        { "service": "FSx", "action": "DescribeStorageVirtualMachines" }
      ]
    },
    "ontap_volume": {
      "create": [
        { "service": "FSx", "action": "CreateVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeVolumes" }],
      "update": [
        { "service": "FSx", "action": "UpdateVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ]
    },
    "openzfs_file_system": {
      "create": [
        { "service": "FSx", "action": "CreateFileSystemFromBackup" },
        { "service": "FSx", "action": "CreateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "read": [
        { "service": "FSx", "action": "DescribeFileSystems" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "update": [
        { "service": "FSx", "action": "UpdateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" },
        { "service": "FSx", "action": "UpdateVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ]
    },
    "openzfs_snapshot": {
      "create": [
        { "service": "FSx", "action": "CreateSnapshot" },
        { "service": "FSx", "action": "DescribeSnapshots" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeSnapshots" }],
      "update": [
        { "service": "FSx", "action": "UpdateSnapshot" },
        { "service": "FSx", "action": "DescribeSnapshots" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteSnapshot" },
        { "service": "FSx", "action": "DescribeSnapshots" }
      ]
    },
    "openzfs_volume": {
      "create": [
        { "service": "FSx", "action": "CreateVolume" },
        { "service": "FSx", "action": "CreateVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeVolumes" }],
      "update": [
        { "service": "FSx", "action": "UpdateVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteVolume" },
        { "service": "FSx", "action": "DescribeVolumes" }
      ]
    },
    "windows_file_system": {
      "create": [
        { "service": "FSx", "action": "CreateFileSystemFromBackup" },
        { "service": "FSx", "action": "CreateFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ],
      "read": [{ "service": "FSx", "action": "DescribeFileSystems" }],
      "update": [
        { "service": "FSx", "action": "AssociateFileSystemAliases" },
        { "service": "FSx", "action": "DescribeFileSystems" },
        { "service": "FSx", "action": "DisassociateFileSystemAliases" },
        { "service": "FSx", "action": "UpdateFileSystem" }
      ],
      "delete": [
        { "service": "FSx", "action": "DeleteFileSystem" },
        { "service": "FSx", "action": "DescribeFileSystems" }
      ]
    }
  },
  "gamelift": {
    "alias": {
      "create": [
        { "service": "GameLift", "action": "CreateAlias" },
        { "service": "GameLift", "action": "DescribeAlias" }
      ],
      "read": [{ "service": "GameLift", "action": "DescribeAlias" }],
      "update": [
        { "service": "GameLift", "action": "UpdateAlias" },
        { "service": "GameLift", "action": "DescribeAlias" }
      ],
      "delete": [{ "service": "GameLift", "action": "DeleteAlias" }]
    },
    "build": {
      "create": [
        { "service": "GameLift", "action": "CreateBuild" },
        { "service": "GameLift", "action": "CreateBuild" },
        { "service": "GameLift", "action": "DescribeBuild" }
      ],
      "read": [{ "service": "GameLift", "action": "DescribeBuild" }],
      "update": [
        { "service": "GameLift", "action": "UpdateBuild" },
        { "service": "GameLift", "action": "DescribeBuild" }
      ],
      "delete": [{ "service": "GameLift", "action": "DeleteBuild" }]
    },
    "fleet": {
      "create": [
        { "service": "GameLift", "action": "CreateFleet" },
        { "service": "GameLift", "action": "CreateFleet" },
        { "service": "GameLift", "action": "DescribeFleetAttributes" },
        { "service": "GameLift", "action": "DescribeFleetPortSettings" }
      ],
      "read": [
        { "service": "GameLift", "action": "DescribeFleetAttributes" },
        { "service": "GameLift", "action": "DescribeFleetPortSettings" }
      ],
      "update": [
        { "service": "GameLift", "action": "UpdateFleetAttributes" },
        { "service": "GameLift", "action": "UpdateFleetPortSettings" },
        { "service": "GameLift", "action": "UpdateRuntimeConfiguration" },
        { "service": "GameLift", "action": "DescribeFleetAttributes" },
        { "service": "GameLift", "action": "DescribeFleetPortSettings" }
      ],
      "delete": [
        { "service": "GameLift", "action": "DeleteFleet" },
        { "service": "GameLift", "action": "DeleteFleet" },
        { "service": "GameLift", "action": "DescribeFleetAttributes" },
        { "service": "GameLift", "action": "DescribeFleetEvents" }
      ]
    },
    "game_server_group": {
      "create": [
        { "service": "GameLift", "action": "CreateGameServerGroup" },
        { "service": "GameLift", "action": "CreateGameServerGroup" },
        { "service": "GameLift", "action": "DescribeGameServerGroup" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "DescribePolicies" }
      ],
      "read": [
        { "service": "GameLift", "action": "DescribeGameServerGroup" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "DescribePolicies" }
      ],
      "update": [
        { "service": "GameLift", "action": "UpdateGameServerGroup" },
        { "service": "GameLift", "action": "DescribeGameServerGroup" },
        { "service": "AutoScaling", "action": "DescribeAutoScalingGroups" },
        { "service": "AutoScaling", "action": "DescribePolicies" }
      ],
      "delete": [
        { "service": "GameLift", "action": "DeleteGameServerGroup" },
        { "service": "GameLift", "action": "DeleteGameServerGroup" },
        { "service": "GameLift", "action": "DescribeGameServerGroup" }
      ]
    },
    "game_session_queue": {
      "create": [
        { "service": "GameLift", "action": "CreateGameSessionQueue" },
        { "service": "GameLift", "action": "DescribeGameSessionQueues" }
      ],
      "read": [{ "service": "GameLift", "action": "DescribeGameSessionQueues" }],
      "update": [
        { "service": "GameLift", "action": "UpdateGameSessionQueue" },
        { "service": "GameLift", "action": "DescribeGameSessionQueues" }
      ],
      "delete": [{ "service": "GameLift", "action": "DeleteGameSessionQueue" }]
    },
    "script": {
      "create": [
        { "service": "GameLift", "action": "CreateScript" },
        { "service": "GameLift", "action": "CreateScript" },
        { "service": "GameLift", "action": "DescribeScript" }
      ],
      "read": [{ "service": "GameLift", "action": "DescribeScript" }],
      "update": [
        { "service": "GameLift", "action": "UpdateScript" },
        { "service": "GameLift", "action": "DescribeScript" }
      ],
      "delete": [{ "service": "GameLift", "action": "DeleteScript" }]
    }
  },
  "glacier": {
    "vault": {
      "create": [
        { "service": "Glacier", "action": "CreateVault" },
        { "service": "Glacier", "action": "SetVaultAccessPolicy" },
        { "service": "Glacier", "action": "DeleteVaultAccessPolicy" },
        { "service": "Glacier", "action": "SetVaultNotifications" },
        { "service": "Glacier", "action": "DeleteVaultNotifications" },
        { "service": "Glacier", "action": "DescribeVault" },
        { "service": "Glacier", "action": "GetVaultAccessPolicy" },
        { "service": "Glacier", "action": "GetVaultNotifications" }
      ],
      "read": [
        { "service": "Glacier", "action": "DescribeVault" },
        { "service": "Glacier", "action": "GetVaultAccessPolicy" },
        { "service": "Glacier", "action": "GetVaultNotifications" }
      ],
      "update": [
        { "service": "Glacier", "action": "SetVaultAccessPolicy" },
        { "service": "Glacier", "action": "DeleteVaultAccessPolicy" },
        { "service": "Glacier", "action": "SetVaultNotifications" },
        { "service": "Glacier", "action": "DeleteVaultNotifications" },
        { "service": "Glacier", "action": "DescribeVault" },
        { "service": "Glacier", "action": "GetVaultAccessPolicy" },
        { "service": "Glacier", "action": "GetVaultNotifications" }
      ],
      "delete": [{ "service": "Glacier", "action": "DeleteVault" }]
    },
    "vault_lock": {
      "create": [
        { "service": "Glacier", "action": "InitiateVaultLock" },
        { "service": "Glacier", "action": "GetVaultLock" },
        { "service": "Glacier", "action": "CompleteVaultLock" },
        { "service": "Glacier", "action": "GetVaultLock" }
      ],
      "read": [{ "service": "Glacier", "action": "GetVaultLock" }],
      "update": [],
      "delete": [{ "service": "Glacier", "action": "AbortVaultLock" }]
    }
  },
  "globalaccelerator": {
    "accelerator": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "UpdateAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "DescribeAcceleratorAttributes" }
      ],
      "read": [
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeAcceleratorAttributes" }
      ],
      "update": [
        { "service": "GlobalAccelerator", "action": "UpdateAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "UpdateAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "UpdateAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "DescribeAcceleratorAttributes" }
      ],
      "delete": [
        { "service": "GlobalAccelerator", "action": "UpdateAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DeleteAccelerator" }
      ]
    },
    "custom_routing_accelerator": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "UpdateAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAcceleratorAttributes" }
      ],
      "read": [
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAcceleratorAttributes" }
      ],
      "update": [
        { "service": "GlobalAccelerator", "action": "UpdateCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "UpdateCustomRoutingAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "UpdateCustomRoutingAcceleratorAttributes" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAcceleratorAttributes" }
      ],
      "delete": [
        { "service": "GlobalAccelerator", "action": "UpdateCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DeleteCustomRoutingAccelerator" }
      ]
    },
    "custom_routing_endpoint_group": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateCustomRoutingEndpointGroup" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "AddCustomRoutingEndpoints" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingEndpointGroup" }
      ],
      "read": [{ "service": "GlobalAccelerator", "action": "DescribeCustomRoutingEndpointGroup" }],
      "update": [],
      "delete": [
        { "service": "GlobalAccelerator", "action": "DeleteCustomRoutingEndpointGroup" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" }
      ]
    },
    "custom_routing_listener": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateCustomRoutingListener" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingListener" }
      ],
      "read": [{ "service": "GlobalAccelerator", "action": "DescribeCustomRoutingListener" }],
      "update": [
        { "service": "GlobalAccelerator", "action": "UpdateCustomRoutingListener" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingListener" }
      ],
      "delete": [
        { "service": "GlobalAccelerator", "action": "DeleteCustomRoutingListener" },
        { "service": "GlobalAccelerator", "action": "DescribeCustomRoutingAccelerator" }
      ]
    },
    "endpoint_group": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateEndpointGroup" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeEndpointGroup" }
      ],
      "read": [{ "service": "GlobalAccelerator", "action": "DescribeEndpointGroup" }],
      "update": [
        { "service": "GlobalAccelerator", "action": "UpdateEndpointGroup" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeEndpointGroup" }
      ],
      "delete": [
        { "service": "GlobalAccelerator", "action": "DeleteEndpointGroup" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" }
      ]
    },
    "listener": {
      "create": [
        { "service": "GlobalAccelerator", "action": "CreateListener" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeListener" }
      ],
      "read": [{ "service": "GlobalAccelerator", "action": "DescribeListener" }],
      "update": [
        { "service": "GlobalAccelerator", "action": "UpdateListener" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" },
        { "service": "GlobalAccelerator", "action": "DescribeListener" }
      ],
      "delete": [
        { "service": "GlobalAccelerator", "action": "DeleteListener" },
        { "service": "GlobalAccelerator", "action": "DescribeAccelerator" }
      ]
    }
  },
  "glue": {
    "catalog_database": {
      "create": [
        { "service": "Glue", "action": "CreateDatabase" },
        { "service": "Glue", "action": "GetDatabase" }
      ],
      "read": [{ "service": "Glue", "action": "GetDatabase" }],
      "update": [
        { "service": "Glue", "action": "UpdateDatabase" },
        { "service": "Glue", "action": "GetDatabase" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteDatabase" }]
    },
    "catalog_table": {
      "create": [
        { "service": "Glue", "action": "CreateTable" },
        { "service": "Glue", "action": "GetTable" },
        { "service": "Glue", "action": "GetPartitionIndexes" }
      ],
      "read": [
        { "service": "Glue", "action": "GetTable" },
        { "service": "Glue", "action": "GetPartitionIndexes" }
      ],
      "update": [
        { "service": "Glue", "action": "UpdateTable" },
        { "service": "Glue", "action": "GetTable" },
        { "service": "Glue", "action": "GetPartitionIndexes" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteTable" }]
    },
    "classifier": {
      "create": [
        { "service": "Glue", "action": "CreateClassifier" },
        { "service": "Glue", "action": "GetClassifier" }
      ],
      "read": [{ "service": "Glue", "action": "GetClassifier" }],
      "update": [{ "service": "Glue", "action": "UpdateClassifier" }],
      "delete": [{ "service": "Glue", "action": "DeleteClassifier" }]
    },
    "connection": {
      "create": [
        { "service": "Glue", "action": "CreateConnection" },
        { "service": "Glue", "action": "GetConnection" }
      ],
      "read": [{ "service": "Glue", "action": "GetConnection" }],
      "update": [{ "service": "Glue", "action": "UpdateConnection" }],
      "delete": [{ "service": "Glue", "action": "DeleteConnection" }]
    },
    "crawler": {
      "create": [
        { "service": "Glue", "action": "CreateCrawler" },
        { "service": "Glue", "action": "CreateCrawler" },
        { "service": "Glue", "action": "GetCrawler" }
      ],
      "read": [{ "service": "Glue", "action": "GetCrawler" }],
      "update": [
        { "service": "Glue", "action": "UpdateCrawler" },
        { "service": "Glue", "action": "UpdateCrawler" },
        { "service": "Glue", "action": "GetCrawler" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteCrawler" }]
    },
    "data_catalog_encryption_settings": {
      "create": [
        { "service": "Glue", "action": "PutDataCatalogEncryptionSettings" },
        { "service": "Glue", "action": "GetDataCatalogEncryptionSettings" }
      ],
      "read": [{ "service": "Glue", "action": "GetDataCatalogEncryptionSettings" }],
      "update": [],
      "delete": [{ "service": "Glue", "action": "PutDataCatalogEncryptionSettings" }]
    },
    "dev_endpoint": {
      "create": [
        { "service": "Glue", "action": "CreateDevEndpoint" },
        { "service": "Glue", "action": "CreateDevEndpoint" },
        { "service": "Glue", "action": "GetDevEndpoint" }
      ],
      "read": [{ "service": "Glue", "action": "GetDevEndpoint" }],
      "update": [
        { "service": "Glue", "action": "UpdateDevEndpoint" },
        { "service": "Glue", "action": "UpdateDevEndpoint" },
        { "service": "Glue", "action": "GetDevEndpoint" }
      ],
      "delete": [
        { "service": "Glue", "action": "DeleteDevEndpoint" },
        { "service": "Glue", "action": "GetDevEndpoint" }
      ]
    },
    "job": {
      "create": [
        { "service": "Glue", "action": "CreateJob" },
        { "service": "Glue", "action": "GetJob" }
      ],
      "read": [{ "service": "Glue", "action": "GetJob" }],
      "update": [
        { "service": "Glue", "action": "UpdateJob" },
        { "service": "Glue", "action": "GetJob" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteJob" }]
    },
    "ml_transform": {
      "create": [
        { "service": "Glue", "action": "CreateMLTransform" },
        { "service": "Glue", "action": "GetMLTransform" }
      ],
      "read": [{ "service": "Glue", "action": "GetMLTransform" }],
      "update": [
        { "service": "Glue", "action": "UpdateMLTransform" },
        { "service": "Glue", "action": "GetMLTransform" }
      ],
      "delete": [
        { "service": "Glue", "action": "DeleteMLTransform" },
        { "service": "Glue", "action": "GetMLTransform" }
      ]
    },
    "partition": {
      "create": [
        { "service": "Glue", "action": "CreatePartition" },
        { "service": "Glue", "action": "GetPartition" }
      ],
      "read": [{ "service": "Glue", "action": "GetPartition" }],
      "update": [
        { "service": "Glue", "action": "UpdatePartition" },
        { "service": "Glue", "action": "GetPartition" }
      ],
      "delete": [{ "service": "Glue", "action": "DeletePartition" }]
    },
    "partition_index": {
      "create": [
        { "service": "Glue", "action": "CreatePartitionIndex" },
        { "service": "Glue", "action": "GetPartitionIndexes" }
      ],
      "read": [{ "service": "Glue", "action": "GetPartitionIndexes" }],
      "update": [],
      "delete": [
        { "service": "Glue", "action": "DeletePartitionIndex" },
        { "service": "Glue", "action": "GetPartitionIndexes" }
      ]
    },
    "registry": {
      "create": [
        { "service": "Glue", "action": "CreateRegistry" },
        { "service": "Glue", "action": "GetRegistry" }
      ],
      "read": [{ "service": "Glue", "action": "GetRegistry" }],
      "update": [
        { "service": "Glue", "action": "UpdateRegistry" },
        { "service": "Glue", "action": "GetRegistry" }
      ],
      "delete": [
        { "service": "Glue", "action": "DeleteRegistry" },
        { "service": "Glue", "action": "GetRegistry" }
      ]
    },
    "resource_policy": {
      "create": [],
      "read": [{ "service": "Glue", "action": "GetResourcePolicy" }],
      "update": [],
      "delete": [{ "service": "Glue", "action": "DeleteResourcePolicy" }]
    },
    "schema": {
      "create": [
        { "service": "Glue", "action": "CreateSchema" },
        { "service": "Glue", "action": "GetSchema" },
        { "service": "Glue", "action": "GetSchemaVersion" }
      ],
      "read": [
        { "service": "Glue", "action": "GetSchema" },
        { "service": "Glue", "action": "GetSchemaVersion" }
      ],
      "update": [
        { "service": "Glue", "action": "UpdateSchema" },
        { "service": "Glue", "action": "GetSchema" },
        { "service": "Glue", "action": "RegisterSchemaVersion" },
        { "service": "Glue", "action": "GetSchemaVersion" }
      ],
      "delete": [
        { "service": "Glue", "action": "DeleteSchema" },
        { "service": "Glue", "action": "GetSchema" }
      ]
    },
    "security_configuration": {
      "create": [
        { "service": "Glue", "action": "CreateSecurityConfiguration" },
        { "service": "Glue", "action": "GetSecurityConfiguration" }
      ],
      "read": [{ "service": "Glue", "action": "GetSecurityConfiguration" }],
      "update": [],
      "delete": [{ "service": "Glue", "action": "DeleteSecurityConfiguration" }]
    },
    "trigger": {
      "create": [
        { "service": "Glue", "action": "CreateTrigger" },
        { "service": "Glue", "action": "CreateTrigger" },
        { "service": "Glue", "action": "GetTrigger" },
        { "service": "Glue", "action": "StartTrigger" },
        { "service": "Glue", "action": "GetTrigger" }
      ],
      "read": [{ "service": "Glue", "action": "GetTrigger" }],
      "update": [
        { "service": "Glue", "action": "UpdateTrigger" },
        { "service": "Glue", "action": "GetTrigger" },
        { "service": "Glue", "action": "StartTrigger" },
        { "service": "Glue", "action": "StopTrigger" }
      ],
      "delete": [
        { "service": "Glue", "action": "DeleteTrigger" },
        { "service": "Glue", "action": "GetTrigger" }
      ]
    },
    "user_defined_function": {
      "create": [
        { "service": "Glue", "action": "CreateUserDefinedFunction" },
        { "service": "Glue", "action": "GetUserDefinedFunction" }
      ],
      "read": [{ "service": "Glue", "action": "GetUserDefinedFunction" }],
      "update": [
        { "service": "Glue", "action": "UpdateUserDefinedFunction" },
        { "service": "Glue", "action": "GetUserDefinedFunction" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteUserDefinedFunction" }]
    },
    "workflow": {
      "create": [
        { "service": "Glue", "action": "CreateWorkflow" },
        { "service": "Glue", "action": "GetWorkflow" }
      ],
      "read": [{ "service": "Glue", "action": "GetWorkflow" }],
      "update": [
        { "service": "Glue", "action": "UpdateWorkflow" },
        { "service": "Glue", "action": "GetWorkflow" }
      ],
      "delete": [{ "service": "Glue", "action": "DeleteWorkflow" }]
    }
  },
  "grafana": {
    "license_association": {
      "create": [
        { "service": "Grafana", "action": "AssociateLicense" },
        { "service": "Grafana", "action": "DescribeWorkspace" }
      ],
      "read": [{ "service": "Grafana", "action": "DescribeWorkspace" }],
      "update": [],
      "delete": [
        { "service": "Grafana", "action": "DisassociateLicense" },
        { "service": "Grafana", "action": "DescribeWorkspace" }
      ]
    },
    "role_association": {
      "create": [
        { "service": "Grafana", "action": "UpdatePermissions" },
        { "service": "Grafana", "action": "ListPermissions" }
      ],
      "read": [{ "service": "Grafana", "action": "ListPermissions" }],
      "update": [],
      "delete": [{ "service": "Grafana", "action": "UpdatePermissions" }]
    },
    "workspace": {
      "create": [
        { "service": "Grafana", "action": "CreateWorkspace" },
        { "service": "Grafana", "action": "DescribeWorkspace" },
        { "service": "Grafana", "action": "DescribeWorkspaceConfiguration" }
      ],
      "read": [
        { "service": "Grafana", "action": "DescribeWorkspace" },
        { "service": "Grafana", "action": "DescribeWorkspaceConfiguration" }
      ],
      "update": [
        { "service": "Grafana", "action": "UpdateWorkspace" },
        { "service": "Grafana", "action": "DescribeWorkspace" },
        { "service": "Grafana", "action": "UpdateWorkspaceConfiguration" },
        { "service": "Grafana", "action": "DescribeWorkspaceConfiguration" }
      ],
      "delete": [
        { "service": "Grafana", "action": "DeleteWorkspace" },
        { "service": "Grafana", "action": "DescribeWorkspace" }
      ]
    },
    "workspace_api_key": {
      "create": [{ "service": "Grafana", "action": "CreateWorkspaceApiKey" }],
      "read": [],
      "update": [],
      "delete": [{ "service": "Grafana", "action": "DeleteWorkspaceApiKey" }]
    },
    "workspace_saml_configuration": {
      "create": [
        { "service": "Grafana", "action": "DescribeWorkspace" },
        { "service": "Grafana", "action": "UpdateWorkspaceAuthentication" },
        { "service": "Grafana", "action": "DescribeWorkspaceAuthentication" }
      ],
      "read": [{ "service": "Grafana", "action": "DescribeWorkspaceAuthentication" }],
      "update": [],
      "delete": []
    }
  },
  "guardduty": {
    "detector": {
      "create": [
        { "service": "GuardDuty", "action": "CreateDetector" },
        { "service": "GuardDuty", "action": "GetDetector" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetDetector" }],
      "update": [
        { "service": "GuardDuty", "action": "UpdateDetector" },
        { "service": "GuardDuty", "action": "GetDetector" }
      ],
      "delete": [
        { "service": "GuardDuty", "action": "DeleteDetector" },
        { "service": "GuardDuty", "action": "DeleteDetector" }
      ]
    },
    "filter": {
      "create": [
        { "service": "GuardDuty", "action": "CreateFilter" },
        { "service": "GuardDuty", "action": "GetFilter" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetFilter" }],
      "update": [
        { "service": "GuardDuty", "action": "UpdateFilter" },
        { "service": "GuardDuty", "action": "GetFilter" }
      ],
      "delete": [{ "service": "GuardDuty", "action": "DeleteFilter" }]
    },
    "invite_accepter": {
      "create": [
        { "service": "GuardDuty", "action": "ListInvitations" },
        { "service": "GuardDuty", "action": "ListInvitations" },
        { "service": "GuardDuty", "action": "AcceptInvitation" },
        { "service": "GuardDuty", "action": "GetMasterAccount" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetMasterAccount" }],
      "update": [],
      "delete": [{ "service": "GuardDuty", "action": "DisassociateFromMasterAccount" }]
    },
    "ipset": {
      "create": [
        { "service": "GuardDuty", "action": "CreateIPSet" },
        { "service": "GuardDuty", "action": "GetIPSet" },
        { "service": "GuardDuty", "action": "GetIPSet" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetIPSet" }],
      "update": [
        { "service": "GuardDuty", "action": "UpdateIPSet" },
        { "service": "GuardDuty", "action": "GetIPSet" }
      ],
      "delete": [
        { "service": "GuardDuty", "action": "DeleteIPSet" },
        { "service": "GuardDuty", "action": "GetIPSet" }
      ]
    },
    "member": {
      "create": [
        { "service": "GuardDuty", "action": "CreateMembers" },
        { "service": "GuardDuty", "action": "GetMembers" },
        { "service": "GuardDuty", "action": "InviteMembers" },
        { "service": "GuardDuty", "action": "GetMembers" },
        { "service": "GuardDuty", "action": "GetMembers" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetMembers" }],
      "update": [
        { "service": "GuardDuty", "action": "InviteMembers" },
        { "service": "GuardDuty", "action": "GetMembers" },
        { "service": "GuardDuty", "action": "GetMembers" },
        { "service": "GuardDuty", "action": "DisassociateMembers" },
        { "service": "GuardDuty", "action": "GetMembers" }
      ],
      "delete": [{ "service": "GuardDuty", "action": "DeleteMembers" }]
    },
    "organization_admin_account": {
      "create": [
        { "service": "GuardDuty", "action": "EnableOrganizationAdminAccount" },
        { "service": "GuardDuty", "action": "ListOrganizationAdminAccounts" },
        { "service": "GuardDuty", "action": "ListOrganizationAdminAccounts" }
      ],
      "read": [{ "service": "GuardDuty", "action": "ListOrganizationAdminAccounts" }],
      "update": [],
      "delete": [
        { "service": "GuardDuty", "action": "DisableOrganizationAdminAccount" },
        { "service": "GuardDuty", "action": "ListOrganizationAdminAccounts" }
      ]
    },
    "organization_configuration": {
      "create": [
        { "service": "GuardDuty", "action": "UpdateOrganizationConfiguration" },
        { "service": "GuardDuty", "action": "DescribeOrganizationConfiguration" }
      ],
      "read": [{ "service": "GuardDuty", "action": "DescribeOrganizationConfiguration" }],
      "update": [],
      "delete": []
    },
    "publishing_destination": {
      "create": [
        { "service": "GuardDuty", "action": "CreatePublishingDestination" },
        { "service": "GuardDuty", "action": "DescribePublishingDestination" },
        { "service": "GuardDuty", "action": "DescribePublishingDestination" }
      ],
      "read": [{ "service": "GuardDuty", "action": "DescribePublishingDestination" }],
      "update": [
        { "service": "GuardDuty", "action": "UpdatePublishingDestination" },
        { "service": "GuardDuty", "action": "DescribePublishingDestination" }
      ],
      "delete": [{ "service": "GuardDuty", "action": "DeletePublishingDestination" }]
    },
    "threatintelset": {
      "create": [
        { "service": "GuardDuty", "action": "CreateThreatIntelSet" },
        { "service": "GuardDuty", "action": "GetThreatIntelSet" },
        { "service": "GuardDuty", "action": "GetThreatIntelSet" }
      ],
      "read": [{ "service": "GuardDuty", "action": "GetThreatIntelSet" }],
      "update": [
        { "service": "GuardDuty", "action": "UpdateThreatIntelSet" },
        { "service": "GuardDuty", "action": "GetThreatIntelSet" }
      ],
      "delete": [
        { "service": "GuardDuty", "action": "DeleteThreatIntelSet" },
        { "service": "GuardDuty", "action": "GetThreatIntelSet" }
      ]
    }
  },
  "iam": {
    "access_key": {
      "create": [
        { "service": "IAM", "action": "CreateAccessKey" },
        { "service": "IAM", "action": "UpdateAccessKey" }
      ],
      "read": [{ "service": "IAM", "action": "ListAccessKeys" }],
      "update": [
        { "service": "IAM", "action": "UpdateAccessKey" },
        { "service": "IAM", "action": "ListAccessKeys" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteAccessKey" }]
    },
    "account_alias": {
      "create": [{ "service": "IAM", "action": "CreateAccountAlias" }],
      "read": [{ "service": "IAM", "action": "ListAccountAliases" }],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DeleteAccountAlias" }]
    },
    "account_password_policy": {
      "create": [
        { "service": "IAM", "action": "UpdateAccountPasswordPolicy" },
        { "service": "IAM", "action": "GetAccountPasswordPolicy" }
      ],
      "read": [{ "service": "IAM", "action": "GetAccountPasswordPolicy" }],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DeleteAccountPasswordPolicy" }]
    },
    "group": {
      "create": [
        { "service": "IAM", "action": "CreateGroup" },
        { "service": "IAM", "action": "GetGroup" }
      ],
      "read": [{ "service": "IAM", "action": "GetGroup" }],
      "update": [
        { "service": "IAM", "action": "UpdateGroup" },
        { "service": "IAM", "action": "GetGroup" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteGroup" }]
    },
    "group_membership": {
      "create": [
        { "service": "IAM", "action": "AddUserToGroup" },
        { "service": "IAM", "action": "GetGroup" },
        { "service": "IAM", "action": "GetGroup" }
      ],
      "read": [
        { "service": "IAM", "action": "GetGroup" },
        { "service": "IAM", "action": "GetGroup" }
      ],
      "update": [
        { "service": "IAM", "action": "RemoveUserFromGroup" },
        { "service": "IAM", "action": "AddUserToGroup" },
        { "service": "IAM", "action": "GetGroup" },
        { "service": "IAM", "action": "GetGroup" }
      ],
      "delete": [{ "service": "IAM", "action": "RemoveUserFromGroup" }]
    },
    "group_policy": {
      "create": [{ "service": "IAM", "action": "PutGroupPolicy" }],
      "read": [
        { "service": "IAM", "action": "GetGroupPolicy" },
        { "service": "IAM", "action": "GetGroupPolicy" }
      ],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DeleteGroupPolicy" }]
    },
    "group_policy_attachment": {
      "create": [
        { "service": "IAM", "action": "AttachGroupPolicy" },
        { "service": "IAM", "action": "ListAttachedGroupPolicies" }
      ],
      "read": [{ "service": "IAM", "action": "ListAttachedGroupPolicies" }],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DetachGroupPolicy" }]
    },
    "instance_profile": {
      "create": [
        { "service": "IAM", "action": "CreateInstanceProfile" },
        { "service": "IAM", "action": "CreateInstanceProfile" },
        { "service": "IAM", "action": "WaitUntilInstanceProfileExists" },
        { "service": "IAM", "action": "UntagInstanceProfile" },
        { "service": "IAM", "action": "TagInstanceProfile" },
        { "service": "IAM", "action": "RemoveRoleFromInstanceProfile" },
        { "service": "IAM", "action": "AddRoleToInstanceProfile" },
        { "service": "IAM", "action": "AddRoleToInstanceProfile" },
        { "service": "IAM", "action": "GetInstanceProfile" },
        { "service": "IAM", "action": "GetRole" }
      ],
      "read": [
        { "service": "IAM", "action": "GetInstanceProfile" },
        { "service": "IAM", "action": "GetRole" },
        { "service": "IAM", "action": "RemoveRoleFromInstanceProfile" }
      ],
      "update": [
        { "service": "IAM", "action": "RemoveRoleFromInstanceProfile" },
        { "service": "IAM", "action": "AddRoleToInstanceProfile" },
        { "service": "IAM", "action": "AddRoleToInstanceProfile" },
        { "service": "IAM", "action": "UntagInstanceProfile" },
        { "service": "IAM", "action": "TagInstanceProfile" },
        { "service": "IAM", "action": "GetInstanceProfile" },
        { "service": "IAM", "action": "GetRole" }
      ],
      "delete": [
        { "service": "IAM", "action": "RemoveRoleFromInstanceProfile" },
        { "service": "IAM", "action": "DeleteInstanceProfile" }
      ]
    },
    "openid_connect_provider": {
      "create": [
        { "service": "IAM", "action": "CreateOpenIDConnectProvider" },
        { "service": "IAM", "action": "CreateOpenIDConnectProvider" },
        { "service": "IAM", "action": "UntagOpenIDConnectProvider" },
        { "service": "IAM", "action": "TagOpenIDConnectProvider" },
        { "service": "IAM", "action": "GetOpenIDConnectProvider" }
      ],
      "read": [{ "service": "IAM", "action": "GetOpenIDConnectProvider" }],
      "update": [
        { "service": "IAM", "action": "UpdateOpenIDConnectProviderThumbprint" },
        { "service": "IAM", "action": "UntagOpenIDConnectProvider" },
        { "service": "IAM", "action": "TagOpenIDConnectProvider" },
        { "service": "IAM", "action": "GetOpenIDConnectProvider" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteOpenIDConnectProvider" }]
    },
    "policy": {
      "create": [
        { "service": "IAM", "action": "CreatePolicy" },
        { "service": "IAM", "action": "CreatePolicy" },
        { "service": "IAM", "action": "UntagPolicy" },
        { "service": "IAM", "action": "TagPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicyVersion" },
        { "service": "IAM", "action": "GetPolicyVersion" }
      ],
      "read": [
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicyVersion" },
        { "service": "IAM", "action": "GetPolicyVersion" }
      ],
      "update": [
        { "service": "IAM", "action": "ListPolicyVersions" },
        { "service": "IAM", "action": "DeletePolicyVersion" },
        { "service": "IAM", "action": "CreatePolicyVersion" },
        { "service": "IAM", "action": "UntagPolicy" },
        { "service": "IAM", "action": "TagPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "GetPolicyVersion" },
        { "service": "IAM", "action": "GetPolicyVersion" }
      ],
      "delete": [
        { "service": "IAM", "action": "ListPolicyVersions" },
        { "service": "IAM", "action": "DeletePolicyVersion" },
        { "service": "IAM", "action": "DeletePolicy" }
      ]
    },
    "policy_attachment": {
      "create": [
        { "service": "IAM", "action": "AttachUserPolicy" },
        { "service": "IAM", "action": "AttachRolePolicy" },
        { "service": "IAM", "action": "AttachGroupPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "ListEntitiesForPolicy" }
      ],
      "read": [
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "ListEntitiesForPolicy" }
      ],
      "update": [
        { "service": "IAM", "action": "DetachUserPolicy" },
        { "service": "IAM", "action": "AttachUserPolicy" },
        { "service": "IAM", "action": "DetachRolePolicy" },
        { "service": "IAM", "action": "AttachRolePolicy" },
        { "service": "IAM", "action": "DetachGroupPolicy" },
        { "service": "IAM", "action": "AttachGroupPolicy" },
        { "service": "IAM", "action": "GetPolicy" },
        { "service": "IAM", "action": "ListEntitiesForPolicy" }
      ],
      "delete": [
        { "service": "IAM", "action": "DetachUserPolicy" },
        { "service": "IAM", "action": "DetachRolePolicy" },
        { "service": "IAM", "action": "DetachGroupPolicy" }
      ]
    },
    "role": {
      "create": [
        { "service": "IAM", "action": "CreateRole" },
        { "service": "IAM", "action": "PutRolePolicy" },
        { "service": "IAM", "action": "AttachRolePolicy" },
        { "service": "IAM", "action": "UntagRole" },
        { "service": "IAM", "action": "TagRole" },
        { "service": "IAM", "action": "GetRole" },
        { "service": "IAM", "action": "ListRolePolicies" },
        { "service": "IAM", "action": "GetRolePolicy" },
        { "service": "IAM", "action": "ListAttachedRolePolicies" }
      ],
      "read": [
        { "service": "IAM", "action": "GetRole" },
        { "service": "IAM", "action": "ListRolePolicies" },
        { "service": "IAM", "action": "GetRolePolicy" },
        { "service": "IAM", "action": "ListAttachedRolePolicies" }
      ],
      "update": [
        { "service": "IAM", "action": "UpdateAssumeRolePolicy" },
        { "service": "IAM", "action": "UpdateRoleDescription" },
        { "service": "IAM", "action": "UpdateRole" },
        { "service": "IAM", "action": "PutRolePermissionsBoundary" },
        { "service": "IAM", "action": "DeleteRolePermissionsBoundary" },
        { "service": "IAM", "action": "DeleteRolePolicy" },
        { "service": "IAM", "action": "PutRolePolicy" },
        { "service": "IAM", "action": "DetachRolePolicy" },
        { "service": "IAM", "action": "AttachRolePolicy" },
        { "service": "IAM", "action": "UntagRole" },
        { "service": "IAM", "action": "TagRole" },
        { "service": "IAM", "action": "GetRole" },
        { "service": "IAM", "action": "ListRolePolicies" },
        { "service": "IAM", "action": "GetRolePolicy" },
        { "service": "IAM", "action": "ListAttachedRolePolicies" }
      ],
      "delete": [
        { "service": "IAM", "action": "ListInstanceProfilesForRole" },
        { "service": "IAM", "action": "RemoveRoleFromInstanceProfile" },
        { "service": "IAM", "action": "ListAttachedRolePolicies" },
        { "service": "IAM", "action": "DetachRolePolicy" },
        { "service": "IAM", "action": "ListRolePolicies" },
        { "service": "IAM", "action": "DeleteRolePolicy" },
        { "service": "IAM", "action": "DeleteRole" },
        { "service": "IAM", "action": "DeleteRole" }
      ]
    },
    "role_policy": {
      "create": [
        { "service": "IAM", "action": "PutRolePolicy" },
        { "service": "IAM", "action": "GetRolePolicy" },
        { "service": "IAM", "action": "GetRolePolicy" }
      ],
      "read": [
        { "service": "IAM", "action": "GetRolePolicy" },
        { "service": "IAM", "action": "GetRolePolicy" }
      ],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DeleteRolePolicy" }]
    },
    "role_policy_attachment": {
      "create": [
        { "service": "IAM", "action": "AttachRolePolicy" },
        { "service": "IAM", "action": "ListAttachedRolePolicies" }
      ],
      "read": [{ "service": "IAM", "action": "ListAttachedRolePolicies" }],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DetachRolePolicy" }]
    },
    "saml_provider": {
      "create": [
        { "service": "IAM", "action": "CreateSAMLProvider" },
        { "service": "IAM", "action": "CreateSAMLProvider" },
        { "service": "IAM", "action": "UntagSAMLProvider" },
        { "service": "IAM", "action": "TagSAMLProvider" },
        { "service": "IAM", "action": "GetSAMLProvider" }
      ],
      "read": [{ "service": "IAM", "action": "GetSAMLProvider" }],
      "update": [
        { "service": "IAM", "action": "UpdateSAMLProvider" },
        { "service": "IAM", "action": "UntagSAMLProvider" },
        { "service": "IAM", "action": "TagSAMLProvider" },
        { "service": "IAM", "action": "GetSAMLProvider" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteSAMLProvider" }]
    },
    "server_certificate": {
      "create": [
        { "service": "IAM", "action": "UploadServerCertificate" },
        { "service": "IAM", "action": "UploadServerCertificate" },
        { "service": "IAM", "action": "UntagServerCertificate" },
        { "service": "IAM", "action": "TagServerCertificate" },
        { "service": "IAM", "action": "GetServerCertificate" }
      ],
      "read": [{ "service": "IAM", "action": "GetServerCertificate" }],
      "update": [
        { "service": "IAM", "action": "UntagServerCertificate" },
        { "service": "IAM", "action": "TagServerCertificate" },
        { "service": "IAM", "action": "GetServerCertificate" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteServerCertificate" }]
    },
    "service_linked_role": {
      "create": [
        { "service": "IAM", "action": "CreateServiceLinkedRole" },
        { "service": "IAM", "action": "UntagRole" },
        { "service": "IAM", "action": "TagRole" },
        { "service": "IAM", "action": "GetRole" }
      ],
      "read": [{ "service": "IAM", "action": "GetRole" }],
      "update": [
        { "service": "IAM", "action": "UpdateRole" },
        { "service": "IAM", "action": "UntagRole" },
        { "service": "IAM", "action": "TagRole" },
        { "service": "IAM", "action": "GetRole" }
      ],
      "delete": [
        { "service": "IAM", "action": "DeleteServiceLinkedRole" },
        { "service": "IAM", "action": "GetServiceLinkedRoleDeletionStatus" }
      ]
    },
    "service_specific_credential": {
      "create": [
        { "service": "IAM", "action": "CreateServiceSpecificCredential" },
        { "service": "IAM", "action": "UpdateServiceSpecificCredential" },
        { "service": "IAM", "action": "ListServiceSpecificCredentials" }
      ],
      "read": [{ "service": "IAM", "action": "ListServiceSpecificCredentials" }],
      "update": [
        { "service": "IAM", "action": "UpdateServiceSpecificCredential" },
        { "service": "IAM", "action": "ListServiceSpecificCredentials" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteServiceSpecificCredential" }]
    },
    "signing_certificate": {
      "create": [
        { "service": "IAM", "action": "UploadSigningCertificate" },
        { "service": "IAM", "action": "UpdateSigningCertificate" },
        { "service": "IAM", "action": "ListSigningCertificates" }
      ],
      "read": [{ "service": "IAM", "action": "ListSigningCertificates" }],
      "update": [
        { "service": "IAM", "action": "UpdateSigningCertificate" },
        { "service": "IAM", "action": "ListSigningCertificates" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteSigningCertificate" }]
    },
    "user": {
      "create": [
        { "service": "IAM", "action": "CreateUser" },
        { "service": "IAM", "action": "CreateUser" },
        { "service": "IAM", "action": "UntagUser" },
        { "service": "IAM", "action": "TagUser" },
        { "service": "IAM", "action": "GetUser" },
        { "service": "IAM", "action": "GetUser" }
      ],
      "read": [
        { "service": "IAM", "action": "GetUser" },
        { "service": "IAM", "action": "GetUser" }
      ],
      "update": [
        { "service": "IAM", "action": "UpdateUser" },
        { "service": "IAM", "action": "PutUserPermissionsBoundary" },
        { "service": "IAM", "action": "DeleteUserPermissionsBoundary" },
        { "service": "IAM", "action": "UntagUser" },
        { "service": "IAM", "action": "TagUser" },
        { "service": "IAM", "action": "GetUser" },
        { "service": "IAM", "action": "GetUser" }
      ],
      "delete": [
        { "service": "IAM", "action": "ListGroupsForUser" },
        { "service": "IAM", "action": "RemoveUserFromGroup" },
        { "service": "IAM", "action": "ListAccessKeys" },
        { "service": "IAM", "action": "DeleteAccessKey" },
        { "service": "IAM", "action": "ListSSHPublicKeys" },
        { "service": "IAM", "action": "DeleteSSHPublicKey" },
        { "service": "IAM", "action": "ListVirtualMFADevices" },
        { "service": "IAM", "action": "DeactivateMFADevice" },
        { "service": "IAM", "action": "DeleteVirtualMFADevice" },
        { "service": "IAM", "action": "ListMFADevices" },
        { "service": "IAM", "action": "DeactivateMFADevice" },
        { "service": "IAM", "action": "DeleteLoginProfile" },
        { "service": "IAM", "action": "DeleteLoginProfile" },
        { "service": "IAM", "action": "ListSigningCertificates" },
        { "service": "IAM", "action": "DeleteSigningCertificate" },
        { "service": "IAM", "action": "ListServiceSpecificCredentials" },
        { "service": "IAM", "action": "DeleteServiceSpecificCredential" },
        { "service": "IAM", "action": "DeleteUser" }
      ]
    },
    "user_group_membership": {
      "create": [
        { "service": "IAM", "action": "AddUserToGroup" },
        { "service": "IAM", "action": "ListGroupsForUser" },
        { "service": "IAM", "action": "ListGroupsForUser" }
      ],
      "read": [
        { "service": "IAM", "action": "ListGroupsForUser" },
        { "service": "IAM", "action": "ListGroupsForUser" }
      ],
      "update": [
        { "service": "IAM", "action": "RemoveUserFromGroup" },
        { "service": "IAM", "action": "AddUserToGroup" },
        { "service": "IAM", "action": "ListGroupsForUser" },
        { "service": "IAM", "action": "ListGroupsForUser" }
      ],
      "delete": [{ "service": "IAM", "action": "RemoveUserFromGroup" }]
    },
    "user_login_profile": {
      "create": [{ "service": "IAM", "action": "CreateLoginProfile" }],
      "read": [
        { "service": "IAM", "action": "GetLoginProfile" },
        { "service": "IAM", "action": "GetLoginProfile" }
      ],
      "update": [],
      "delete": [
        { "service": "IAM", "action": "DeleteLoginProfile" },
        { "service": "IAM", "action": "DeleteLoginProfile" }
      ]
    },
    "user_policy": {
      "create": [{ "service": "IAM", "action": "PutUserPolicy" }],
      "read": [
        { "service": "IAM", "action": "GetUserPolicy" },
        { "service": "IAM", "action": "GetUserPolicy" }
      ],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DeleteUserPolicy" }]
    },
    "user_policy_attachment": {
      "create": [
        { "service": "IAM", "action": "AttachUserPolicy" },
        { "service": "IAM", "action": "ListAttachedUserPolicies" }
      ],
      "read": [{ "service": "IAM", "action": "ListAttachedUserPolicies" }],
      "update": [],
      "delete": [{ "service": "IAM", "action": "DetachUserPolicy" }]
    },
    "user_ssh_key": {
      "create": [
        { "service": "IAM", "action": "UploadSSHPublicKey" },
        { "service": "IAM", "action": "GetSSHPublicKey" },
        { "service": "IAM", "action": "UpdateSSHPublicKey" }
      ],
      "read": [{ "service": "IAM", "action": "GetSSHPublicKey" }],
      "update": [
        { "service": "IAM", "action": "UpdateSSHPublicKey" },
        { "service": "IAM", "action": "GetSSHPublicKey" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteSSHPublicKey" }]
    },
    "virtual_mfa_device": {
      "create": [
        { "service": "IAM", "action": "CreateVirtualMFADevice" },
        { "service": "IAM", "action": "CreateVirtualMFADevice" },
        { "service": "IAM", "action": "UntagMFADevice" },
        { "service": "IAM", "action": "TagMFADevice" },
        { "service": "IAM", "action": "ListVirtualMFADevices" },
        { "service": "IAM", "action": "ListMFADeviceTags" }
      ],
      "read": [
        { "service": "IAM", "action": "ListVirtualMFADevices" },
        { "service": "IAM", "action": "ListMFADeviceTags" }
      ],
      "update": [
        { "service": "IAM", "action": "UntagMFADevice" },
        { "service": "IAM", "action": "TagMFADevice" },
        { "service": "IAM", "action": "ListVirtualMFADevices" },
        { "service": "IAM", "action": "ListMFADeviceTags" }
      ],
      "delete": [{ "service": "IAM", "action": "DeleteVirtualMFADevice" }]
    }
  },
  "identitystore": {
    "group": {
      "create": [
        { "service": "IdentityStoreClient", "action": "CreateGroup" },
        { "service": "IdentityStoreClient", "action": "DescribeGroup" }
      ],
      "read": [{ "service": "IdentityStoreClient", "action": "DescribeGroup" }],
      "update": [
        { "service": "IdentityStoreClient", "action": "UpdateGroup" },
        { "service": "IdentityStoreClient", "action": "DescribeGroup" }
      ],
      "delete": [{ "service": "IdentityStoreClient", "action": "DeleteGroup" }]
    },
    "group_membership": {
      "create": [
        { "service": "IdentityStoreClient", "action": "CreateGroupMembership" },
        { "service": "IdentityStoreClient", "action": "DescribeGroupMembership" }
      ],
      "read": [{ "service": "IdentityStoreClient", "action": "DescribeGroupMembership" }],
      "update": [],
      "delete": [{ "service": "IdentityStoreClient", "action": "DeleteGroupMembership" }]
    },
    "user": {
      "create": [
        { "service": "IdentityStoreClient", "action": "CreateUser" },
        { "service": "IdentityStoreClient", "action": "DescribeUser" }
      ],
      "read": [{ "service": "IdentityStoreClient", "action": "DescribeUser" }],
      "update": [
        { "service": "IdentityStoreClient", "action": "UpdateUser" },
        { "service": "IdentityStoreClient", "action": "DescribeUser" }
      ],
      "delete": [{ "service": "IdentityStoreClient", "action": "DeleteUser" }]
    }
  },
  "imagebuilder": {
    "component": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateComponent" },
        { "service": "ImageBuilder", "action": "GetComponent" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetComponent" }],
      "update": [],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteComponent" }]
    },
    "container_recipe": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateContainerRecipe" },
        { "service": "ImageBuilder", "action": "GetContainerRecipe" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetContainerRecipe" }],
      "update": [],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteContainerRecipe" }]
    },
    "distribution_configuration": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateDistributionConfiguration" },
        { "service": "ImageBuilder", "action": "GetDistributionConfiguration" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetDistributionConfiguration" }],
      "update": [
        { "service": "ImageBuilder", "action": "UpdateDistributionConfiguration" },
        { "service": "ImageBuilder", "action": "GetDistributionConfiguration" }
      ],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteDistributionConfiguration" }]
    },
    "image": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateImage" },
        { "service": "ImageBuilder", "action": "GetImage" },
        { "service": "ImageBuilder", "action": "GetImage" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetImage" }],
      "update": [],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteImage" }]
    },
    "image_pipeline": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateImagePipeline" },
        { "service": "ImageBuilder", "action": "GetImagePipeline" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetImagePipeline" }],
      "update": [
        { "service": "ImageBuilder", "action": "UpdateImagePipeline" },
        { "service": "ImageBuilder", "action": "GetImagePipeline" }
      ],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteImagePipeline" }]
    },
    "image_recipe": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateImageRecipe" },
        { "service": "ImageBuilder", "action": "GetImageRecipe" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetImageRecipe" }],
      "update": [],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteImageRecipe" }]
    },
    "infrastructure_configuration": {
      "create": [
        { "service": "ImageBuilder", "action": "CreateInfrastructureConfiguration" },
        { "service": "ImageBuilder", "action": "CreateInfrastructureConfiguration" },
        { "service": "ImageBuilder", "action": "GetInfrastructureConfiguration" }
      ],
      "read": [{ "service": "ImageBuilder", "action": "GetInfrastructureConfiguration" }],
      "update": [
        { "service": "ImageBuilder", "action": "UpdateInfrastructureConfiguration" },
        { "service": "ImageBuilder", "action": "UpdateInfrastructureConfiguration" },
        { "service": "ImageBuilder", "action": "GetInfrastructureConfiguration" }
      ],
      "delete": [{ "service": "ImageBuilder", "action": "DeleteInfrastructureConfiguration" }]
    }
  },
  "inspector": {
    "assessment_target": {
      "create": [
        { "service": "Inspector", "action": "CreateAssessmentTarget" },
        { "service": "Inspector", "action": "DescribeAssessmentTargets" }
      ],
      "read": [{ "service": "Inspector", "action": "DescribeAssessmentTargets" }],
      "update": [
        { "service": "Inspector", "action": "UpdateAssessmentTarget" },
        { "service": "Inspector", "action": "DescribeAssessmentTargets" }
      ],
      "delete": [
        { "service": "Inspector", "action": "DeleteAssessmentTarget" },
        { "service": "Inspector", "action": "DeleteAssessmentTarget" }
      ]
    },
    "assessment_template": {
      "create": [
        { "service": "Inspector", "action": "CreateAssessmentTemplate" },
        { "service": "Inspector", "action": "SetTagsForResource" },
        { "service": "Inspector", "action": "SetTagsForResource" },
        { "service": "Inspector", "action": "SubscribeToEvent" },
        { "service": "Inspector", "action": "DescribeAssessmentTemplates" },
        { "service": "Inspector", "action": "ListEventSubscriptions" }
      ],
      "read": [
        { "service": "Inspector", "action": "DescribeAssessmentTemplates" },
        { "service": "Inspector", "action": "ListEventSubscriptions" }
      ],
      "update": [
        { "service": "Inspector", "action": "SubscribeToEvent" },
        { "service": "Inspector", "action": "UnsubscribeFromEvent" },
        { "service": "Inspector", "action": "DescribeAssessmentTemplates" },
        { "service": "Inspector", "action": "ListEventSubscriptions" }
      ],
      "delete": [{ "service": "Inspector", "action": "DeleteAssessmentTemplate" }]
    },
    "resource_group": {
      "create": [
        { "service": "Inspector", "action": "CreateResourceGroup" },
        { "service": "Inspector", "action": "DescribeResourceGroups" }
      ],
      "read": [{ "service": "Inspector", "action": "DescribeResourceGroups" }],
      "update": [],
      "delete": []
    }
  },
  "inspector2": {
    "delegated_admin_account": {
      "create": [{ "service": "Inspector2Client", "action": "EnableDelegatedAdminAccount" }],
      "read": [],
      "update": [],
      "delete": [{ "service": "Inspector2Client", "action": "DisableDelegatedAdminAccount" }]
    },
    "enabler": {
      "create": [
        { "service": "Inspector2Client", "action": "Enable" },
        { "service": "Inspector2Client", "action": "Disable" }
      ],
      "read": [{ "service": "Inspector2Client", "action": "Disable" }],
      "update": [],
      "delete": [
        { "service": "Inspector2Client", "action": "Disable" },
        { "service": "Inspector2Client", "action": "Disable" }
      ]
    },
    "member_association": {
      "create": [
        { "service": "Inspector2Client", "action": "AssociateMember" },
        { "service": "Inspector2Client", "action": "GetMember" }
      ],
      "read": [{ "service": "Inspector2Client", "action": "GetMember" }],
      "update": [],
      "delete": [{ "service": "Inspector2Client", "action": "DisassociateMember" }]
    },
    "organization_configuration": {
      "create": [],
      "read": [{ "service": "Inspector2Client", "action": "DescribeOrganizationConfiguration" }],
      "update": [
        { "service": "Inspector2Client", "action": "UpdateOrganizationConfiguration" },
        { "service": "Inspector2Client", "action": "DescribeOrganizationConfiguration" },
        { "service": "Inspector2Client", "action": "DescribeOrganizationConfiguration" }
      ],
      "delete": [
        { "service": "Inspector2Client", "action": "UpdateOrganizationConfiguration" },
        { "service": "Inspector2Client", "action": "DescribeOrganizationConfiguration" }
      ]
    }
  },
  "iot": {
    "authorizer": {
      "create": [
        { "service": "IoT", "action": "CreateAuthorizer" },
        { "service": "IoT", "action": "DescribeAuthorizer" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeAuthorizer" }],
      "update": [
        { "service": "IoT", "action": "UpdateAuthorizer" },
        { "service": "IoT", "action": "DescribeAuthorizer" }
      ],
      "delete": [
        { "service": "IoT", "action": "UpdateAuthorizer" },
        { "service": "IoT", "action": "DeleteAuthorizer" }
      ]
    },
    "certificate": {
      "create": [
        { "service": "IoT", "action": "CreateCertificateFromCsr" },
        { "service": "IoT", "action": "RegisterCertificate" },
        { "service": "IoT", "action": "RegisterCertificateWithoutCA" },
        { "service": "IoT", "action": "CreateKeysAndCertificate" },
        { "service": "IoT", "action": "DescribeCertificate" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeCertificate" }],
      "update": [
        { "service": "IoT", "action": "UpdateCertificate" },
        { "service": "IoT", "action": "DescribeCertificate" }
      ],
      "delete": [
        { "service": "IoT", "action": "UpdateCertificate" },
        { "service": "IoT", "action": "DeleteCertificate" }
      ]
    },
    "indexing_configuration": {
      "create": [
        { "service": "IoT", "action": "UpdateIndexingConfiguration" },
        { "service": "IoT", "action": "GetIndexingConfiguration" }
      ],
      "read": [{ "service": "IoT", "action": "GetIndexingConfiguration" }],
      "update": [],
      "delete": []
    },
    "logging_options": {
      "create": [
        { "service": "IoT", "action": "SetV2LoggingOptions" },
        { "service": "IoT", "action": "GetV2LoggingOptions" }
      ],
      "read": [{ "service": "IoT", "action": "GetV2LoggingOptions" }],
      "update": [],
      "delete": []
    },
    "policy": {
      "create": [
        { "service": "IoT", "action": "CreatePolicy" },
        { "service": "IoT", "action": "GetPolicy" }
      ],
      "read": [{ "service": "IoT", "action": "GetPolicy" }],
      "update": [
        { "service": "IoT", "action": "CreatePolicyVersion" },
        { "service": "IoT", "action": "GetPolicy" }
      ],
      "delete": [
        { "service": "IoT", "action": "ListPolicyVersions" },
        { "service": "IoT", "action": "DeletePolicyVersion" },
        { "service": "IoT", "action": "DeletePolicy" }
      ]
    },
    "policy_attachment": {
      "create": [
        { "service": "IoT", "action": "AttachPolicy" },
        { "service": "IoT", "action": "ListAttachedPolicies" }
      ],
      "read": [{ "service": "IoT", "action": "ListAttachedPolicies" }],
      "update": [],
      "delete": [{ "service": "IoT", "action": "DetachPolicy" }]
    },
    "provisioning_template": {
      "create": [
        { "service": "IoT", "action": "CreateProvisioningTemplate" },
        { "service": "IoT", "action": "DescribeProvisioningTemplate" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeProvisioningTemplate" }],
      "update": [
        { "service": "IoT", "action": "CreateProvisioningTemplateVersion" },
        { "service": "IoT", "action": "UpdateProvisioningTemplate" },
        { "service": "IoT", "action": "DescribeProvisioningTemplate" }
      ],
      "delete": [{ "service": "IoT", "action": "DeleteProvisioningTemplate" }]
    },
    "role_alias": {
      "create": [
        { "service": "IoT", "action": "CreateRoleAlias" },
        { "service": "IoT", "action": "DescribeRoleAlias" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeRoleAlias" }],
      "update": [
        { "service": "IoT", "action": "UpdateRoleAlias" },
        { "service": "IoT", "action": "UpdateRoleAlias" },
        { "service": "IoT", "action": "DescribeRoleAlias" }
      ],
      "delete": [{ "service": "IoT", "action": "DeleteRoleAlias" }]
    },
    "thing": {
      "create": [
        { "service": "IoT", "action": "CreateThing" },
        { "service": "IoT", "action": "DescribeThing" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeThing" }],
      "update": [
        { "service": "IoT", "action": "UpdateThing" },
        { "service": "IoT", "action": "DescribeThing" }
      ],
      "delete": [{ "service": "IoT", "action": "DeleteThing" }]
    },
    "thing_group": {
      "create": [
        { "service": "IoT", "action": "CreateThingGroup" },
        { "service": "IoT", "action": "DescribeThingGroup" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeThingGroup" }],
      "update": [
        { "service": "IoT", "action": "UpdateThingGroup" },
        { "service": "IoT", "action": "DescribeThingGroup" }
      ],
      "delete": [{ "service": "IoT", "action": "DeleteThingGroup" }]
    },
    "thing_group_membership": {
      "create": [
        { "service": "IoT", "action": "AddThingToThingGroup" },
        { "service": "IoT", "action": "ListThingGroupsForThing" }
      ],
      "read": [{ "service": "IoT", "action": "ListThingGroupsForThing" }],
      "update": [],
      "delete": [{ "service": "IoT", "action": "RemoveThingFromThingGroup" }]
    },
    "thing_principal_attachment": {
      "create": [
        { "service": "IoT", "action": "AttachThingPrincipal" },
        { "service": "IoT", "action": "ListThingPrincipals" }
      ],
      "read": [{ "service": "IoT", "action": "ListThingPrincipals" }],
      "update": [],
      "delete": [{ "service": "IoT", "action": "DetachThingPrincipal" }]
    },
    "thing_type": {
      "create": [
        { "service": "IoT", "action": "CreateThingType" },
        { "service": "IoT", "action": "DeprecateThingType" },
        { "service": "IoT", "action": "DescribeThingType" }
      ],
      "read": [{ "service": "IoT", "action": "DescribeThingType" }],
      "update": [
        { "service": "IoT", "action": "DeprecateThingType" },
        { "service": "IoT", "action": "DescribeThingType" }
      ],
      "delete": [
        { "service": "IoT", "action": "DeprecateThingType" },
        { "service": "IoT", "action": "DeleteThingType" },
        { "service": "IoT", "action": "DeleteThingType" }
      ]
    },
    "topic_rule": {
      "create": [
        { "service": "IoT", "action": "CreateTopicRule" },
        { "service": "IoT", "action": "ListTopicRules" },
        { "service": "IoT", "action": "GetTopicRule" }
      ],
      "read": [
        { "service": "IoT", "action": "ListTopicRules" },
        { "service": "IoT", "action": "GetTopicRule" }
      ],
      "update": [
        { "service": "IoT", "action": "ReplaceTopicRule" },
        { "service": "IoT", "action": "ListTopicRules" },
        { "service": "IoT", "action": "GetTopicRule" }
      ],
      "delete": [{ "service": "IoT", "action": "DeleteTopicRule" }]
    },
    "topic_rule_destination": {
      "create": [
        { "service": "IoT", "action": "CreateTopicRuleDestination" },
        { "service": "IoT", "action": "ListTopicRuleDestinations" },
        { "service": "IoT", "action": "GetTopicRuleDestination" },
        { "service": "IoT", "action": "UpdateTopicRuleDestination" }
      ],
      "read": [
        { "service": "IoT", "action": "ListTopicRuleDestinations" },
        { "service": "IoT", "action": "GetTopicRuleDestination" }
      ],
      "update": [
        { "service": "IoT", "action": "UpdateTopicRuleDestination" },
        { "service": "IoT", "action": "ListTopicRuleDestinations" },
        { "service": "IoT", "action": "GetTopicRuleDestination" }
      ],
      "delete": [
        { "service": "IoT", "action": "DeleteTopicRuleDestination" },
        { "service": "IoT", "action": "ListTopicRuleDestinations" },
        { "service": "IoT", "action": "GetTopicRuleDestination" }
      ]
    }
  },
  "ivs": {
    "channel": {
      "create": [
        { "service": "IVS", "action": "CreateChannel" },
        { "service": "IVS", "action": "GetChannel" }
      ],
      "read": [{ "service": "IVS", "action": "GetChannel" }],
      "update": [
        { "service": "IVS", "action": "UpdateChannel" },
        { "service": "IVS", "action": "GetChannel" }
      ],
      "delete": [
        { "service": "IVS", "action": "DeleteChannel" },
        { "service": "IVS", "action": "GetChannel" }
      ]
    },
    "playback_key_pair": {
      "create": [
        { "service": "IVS", "action": "ImportPlaybackKeyPair" },
        { "service": "IVS", "action": "GetPlaybackKeyPair" }
      ],
      "read": [{ "service": "IVS", "action": "GetPlaybackKeyPair" }],
      "update": [],
      "delete": [
        { "service": "IVS", "action": "DeletePlaybackKeyPair" },
        { "service": "IVS", "action": "GetPlaybackKeyPair" }
      ]
    },
    "recording_configuration": {
      "create": [
        { "service": "IVS", "action": "CreateRecordingConfiguration" },
        { "service": "IVS", "action": "GetRecordingConfiguration" }
      ],
      "read": [{ "service": "IVS", "action": "GetRecordingConfiguration" }],
      "update": [],
      "delete": [
        { "service": "IVS", "action": "DeleteRecordingConfiguration" },
        { "service": "IVS", "action": "GetRecordingConfiguration" }
      ]
    }
  },
  "ivschat": {
    "logging_configuration": {
      "create": [
        { "service": "IVSChatClient", "action": "CreateLoggingConfiguration" },
        { "service": "IVSChatClient", "action": "GetLoggingConfiguration" }
      ],
      "read": [{ "service": "IVSChatClient", "action": "GetLoggingConfiguration" }],
      "update": [
        { "service": "IVSChatClient", "action": "UpdateLoggingConfiguration" },
        { "service": "IVSChatClient", "action": "GetLoggingConfiguration" }
      ],
      "delete": [
        { "service": "IVSChatClient", "action": "DeleteLoggingConfiguration" },
        { "service": "IVSChatClient", "action": "GetLoggingConfiguration" }
      ]
    },
    "room": {
      "create": [
        { "service": "IVSChatClient", "action": "CreateRoom" },
        { "service": "IVSChatClient", "action": "GetRoom" }
      ],
      "read": [{ "service": "IVSChatClient", "action": "GetRoom" }],
      "update": [
        { "service": "IVSChatClient", "action": "UpdateRoom" },
        { "service": "IVSChatClient", "action": "GetRoom" }
      ],
      "delete": [
        { "service": "IVSChatClient", "action": "DeleteRoom" },
        { "service": "IVSChatClient", "action": "GetRoom" }
      ]
    }
  },
  "kafka": {
    "msk_cluster": {
      "create": [
        { "service": "Kafka", "action": "CreateCluster" },
        { "service": "Kafka", "action": "DescribeClusterV2" },
        { "service": "Kafka", "action": "DescribeCluster" },
        { "service": "Kafka", "action": "GetBootstrapBrokers" }
      ],
      "read": [
        { "service": "Kafka", "action": "DescribeCluster" },
        { "service": "Kafka", "action": "GetBootstrapBrokers" }
      ],
      "update": [
        { "service": "Kafka", "action": "UpdateBrokerType" },
        { "service": "Kafka", "action": "DescribeClusterOperation" },
        { "service": "Kafka", "action": "DescribeCluster" },
        { "service": "Kafka", "action": "UpdateBrokerStorage" },
        { "service": "Kafka", "action": "UpdateConnectivity" },
        { "service": "Kafka", "action": "UpdateBrokerCount" },
        { "service": "Kafka", "action": "UpdateMonitoring" },
        { "service": "Kafka", "action": "UpdateClusterConfiguration" },
        { "service": "Kafka", "action": "UpdateClusterKafkaVersion" },
        { "service": "Kafka", "action": "UpdateSecurity" },
        { "service": "Kafka", "action": "GetBootstrapBrokers" }
      ],
      "delete": [
        { "service": "Kafka", "action": "DeleteCluster" },
        { "service": "Kafka", "action": "DescribeClusterV2" }
      ]
    },
    "msk_configuration": {
      "create": [
        { "service": "Kafka", "action": "CreateConfiguration" },
        { "service": "Kafka", "action": "DescribeConfiguration" },
        { "service": "Kafka", "action": "DescribeConfigurationRevision" }
      ],
      "read": [
        { "service": "Kafka", "action": "DescribeConfiguration" },
        { "service": "Kafka", "action": "DescribeConfigurationRevision" }
      ],
      "update": [
        { "service": "Kafka", "action": "UpdateConfiguration" },
        { "service": "Kafka", "action": "DescribeConfiguration" },
        { "service": "Kafka", "action": "DescribeConfigurationRevision" }
      ],
      "delete": [
        { "service": "Kafka", "action": "DeleteConfiguration" },
        { "service": "Kafka", "action": "DescribeConfiguration" }
      ]
    },
    "msk_scram_secret_association": {
      "create": [
        { "service": "Kafka", "action": "BatchAssociateScramSecret" },
        { "service": "Kafka", "action": "ListScramSecrets" }
      ],
      "read": [{ "service": "Kafka", "action": "ListScramSecrets" }],
      "update": [
        { "service": "Kafka", "action": "BatchAssociateScramSecret" },
        { "service": "Kafka", "action": "BatchDisassociateScramSecret" },
        { "service": "Kafka", "action": "ListScramSecrets" }
      ],
      "delete": [
        { "service": "Kafka", "action": "ListScramSecrets" },
        { "service": "Kafka", "action": "BatchDisassociateScramSecret" }
      ]
    },
    "msk_serverless_cluster": {
      "create": [
        { "service": "Kafka", "action": "CreateClusterV2" },
        { "service": "Kafka", "action": "DescribeClusterV2" }
      ],
      "read": [{ "service": "Kafka", "action": "DescribeClusterV2" }],
      "update": [],
      "delete": []
    }
  },
  "kafkaconnect": {
    "mskconnect_connector": {
      "create": [
        { "service": "KafkaectConn", "action": "CreateConnector" },
        { "service": "KafkaectConn", "action": "DescribeConnector" }
      ],
      "read": [{ "service": "KafkaectConn", "action": "DescribeConnector" }],
      "update": [
        { "service": "KafkaectConn", "action": "UpdateConnector" },
        { "service": "KafkaectConn", "action": "DescribeConnector" }
      ],
      "delete": [
        { "service": "KafkaectConn", "action": "DeleteConnector" },
        { "service": "KafkaectConn", "action": "DescribeConnector" }
      ]
    },
    "mskconnect_custom_plugin": {
      "create": [
        { "service": "KafkaectConn", "action": "CreateCustomPlugin" },
        { "service": "KafkaectConn", "action": "DescribeCustomPlugin" }
      ],
      "read": [{ "service": "KafkaectConn", "action": "DescribeCustomPlugin" }],
      "update": [],
      "delete": [
        { "service": "KafkaectConn", "action": "DeleteCustomPlugin" },
        { "service": "KafkaectConn", "action": "DescribeCustomPlugin" }
      ]
    },
    "mskconnect_worker_configuration": {
      "create": [
        { "service": "KafkaectConn", "action": "CreateWorkerConfiguration" },
        { "service": "KafkaectConn", "action": "DescribeWorkerConfiguration" }
      ],
      "read": [{ "service": "KafkaectConn", "action": "DescribeWorkerConfiguration" }],
      "update": [],
      "delete": []
    }
  },
  "kendra": {
    "data_source": {
      "create": [
        { "service": "KendraClient", "action": "CreateDataSource" },
        { "service": "KendraClient", "action": "DescribeDataSource" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeDataSource" }],
      "update": [
        { "service": "KendraClient", "action": "UpdateDataSource" },
        { "service": "KendraClient", "action": "DescribeDataSource" }
      ],
      "delete": [
        { "service": "KendraClient", "action": "DeleteDataSource" },
        { "service": "KendraClient", "action": "DescribeDataSource" }
      ]
    },
    "experience": {
      "create": [
        { "service": "KendraClient", "action": "CreateExperience" },
        { "service": "KendraClient", "action": "DescribeExperience" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeExperience" }],
      "update": [
        { "service": "KendraClient", "action": "UpdateExperience" },
        { "service": "KendraClient", "action": "DescribeExperience" }
      ],
      "delete": [
        { "service": "KendraClient", "action": "DeleteExperience" },
        { "service": "KendraClient", "action": "DescribeExperience" }
      ]
    },
    "faq": {
      "create": [
        { "service": "KendraClient", "action": "CreateFaq" },
        { "service": "KendraClient", "action": "DescribeFaq" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeFaq" }],
      "update": [],
      "delete": [
        { "service": "KendraClient", "action": "DeleteFaq" },
        { "service": "KendraClient", "action": "DescribeFaq" }
      ]
    },
    "index": {
      "create": [
        { "service": "KendraClient", "action": "CreateIndex" },
        { "service": "KendraClient", "action": "DescribeIndex" },
        { "service": "KendraClient", "action": "UpdateIndex" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeIndex" }],
      "update": [
        { "service": "KendraClient", "action": "UpdateIndex" },
        { "service": "KendraClient", "action": "DescribeIndex" }
      ],
      "delete": [
        { "service": "KendraClient", "action": "DeleteIndex" },
        { "service": "KendraClient", "action": "DescribeIndex" }
      ]
    },
    "query_suggestions_block_list": {
      "create": [
        { "service": "KendraClient", "action": "CreateQuerySuggestionsBlockList" },
        { "service": "KendraClient", "action": "DescribeQuerySuggestionsBlockList" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeQuerySuggestionsBlockList" }],
      "update": [
        { "service": "KendraClient", "action": "UpdateQuerySuggestionsBlockList" },
        { "service": "KendraClient", "action": "DescribeQuerySuggestionsBlockList" }
      ],
      "delete": [
        { "service": "KendraClient", "action": "DeleteQuerySuggestionsBlockList" },
        { "service": "KendraClient", "action": "DescribeQuerySuggestionsBlockList" }
      ]
    },
    "thesaurus": {
      "create": [
        { "service": "KendraClient", "action": "CreateThesaurus" },
        { "service": "KendraClient", "action": "DescribeThesaurus" }
      ],
      "read": [{ "service": "KendraClient", "action": "DescribeThesaurus" }],
      "update": [
        { "service": "KendraClient", "action": "UpdateThesaurus" },
        { "service": "KendraClient", "action": "DescribeThesaurus" }
      ],
      "delete": [
        { "service": "KendraClient", "action": "DeleteThesaurus" },
        { "service": "KendraClient", "action": "DescribeThesaurus" }
      ]
    }
  },
  "keyspaces": {
    "keyspace": {
      "create": [
        { "service": "Keyspaces", "action": "CreateKeyspace" },
        { "service": "Keyspaces", "action": "GetKeyspace" }
      ],
      "read": [{ "service": "Keyspaces", "action": "GetKeyspace" }],
      "update": [],
      "delete": [
        { "service": "Keyspaces", "action": "DeleteKeyspace" },
        { "service": "Keyspaces", "action": "GetKeyspace" }
      ]
    },
    "table": {
      "create": [
        { "service": "Keyspaces", "action": "CreateTable" },
        { "service": "Keyspaces", "action": "GetTable" }
      ],
      "read": [{ "service": "Keyspaces", "action": "GetTable" }],
      "update": [
        { "service": "Keyspaces", "action": "UpdateTable" },
        { "service": "Keyspaces", "action": "GetTable" },
        { "service": "Keyspaces", "action": "UpdateTable" },
        { "service": "Keyspaces", "action": "UpdateTable" },
        { "service": "Keyspaces", "action": "UpdateTable" },
        { "service": "Keyspaces", "action": "UpdateTable" },
        { "service": "Keyspaces", "action": "UpdateTable" }
      ],
      "delete": [
        { "service": "Keyspaces", "action": "DeleteTable" },
        { "service": "Keyspaces", "action": "GetTable" }
      ]
    }
  },
  "kinesis": {
    "stream": {
      "create": [
        { "service": "Kinesis", "action": "CreateStream" },
        { "service": "Kinesis", "action": "DescribeStreamSummary" },
        { "service": "Kinesis", "action": "IncreaseStreamRetentionPeriod" },
        { "service": "Kinesis", "action": "EnableEnhancedMonitoring" },
        { "service": "Kinesis", "action": "StartStreamEncryption" }
      ],
      "read": [{ "service": "Kinesis", "action": "DescribeStreamSummary" }],
      "update": [
        { "service": "Kinesis", "action": "UpdateStreamMode" },
        { "service": "Kinesis", "action": "DescribeStreamSummary" },
        { "service": "Kinesis", "action": "UpdateShardCount" },
        { "service": "Kinesis", "action": "IncreaseStreamRetentionPeriod" },
        { "service": "Kinesis", "action": "DecreaseStreamRetentionPeriod" },
        { "service": "Kinesis", "action": "DisableEnhancedMonitoring" },
        { "service": "Kinesis", "action": "EnableEnhancedMonitoring" },
        { "service": "Kinesis", "action": "StartStreamEncryption" },
        { "service": "Kinesis", "action": "StopStreamEncryption" }
      ],
      "delete": [
        { "service": "Kinesis", "action": "DeleteStream" },
        { "service": "Kinesis", "action": "DescribeStreamSummary" }
      ]
    },
    "stream_consumer": {
      "create": [
        { "service": "Kinesis", "action": "RegisterStreamConsumer" },
        { "service": "Kinesis", "action": "DescribeStreamConsumer" }
      ],
      "read": [{ "service": "Kinesis", "action": "DescribeStreamConsumer" }],
      "update": [],
      "delete": [
        { "service": "Kinesis", "action": "DeregisterStreamConsumer" },
        { "service": "Kinesis", "action": "DescribeStreamConsumer" }
      ]
    }
  },
  "kinesisanalytics": {
    "kinesis_analytics_application": {
      "create": [
        { "service": "KinesisAnalytics", "action": "CreateApplication" },
        { "service": "KinesisAnalytics", "action": "AddApplicationReferenceDataSource" },
        { "service": "KinesisAnalytics", "action": "DescribeApplication" },
        { "service": "KinesisAnalytics", "action": "StartApplication" }
      ],
      "read": [{ "service": "KinesisAnalytics", "action": "DescribeApplication" }],
      "update": [
        { "service": "KinesisAnalytics", "action": "AddApplicationCloudWatchLoggingOption" },
        { "service": "KinesisAnalytics", "action": "DescribeApplication" },
        { "service": "KinesisAnalytics", "action": "DeleteApplicationCloudWatchLoggingOption" },
        { "service": "KinesisAnalytics", "action": "AddApplicationInput" },
        { "service": "KinesisAnalytics", "action": "AddApplicationInputProcessingConfiguration" },
        { "service": "KinesisAnalytics", "action": "DeleteApplicationInputProcessingConfiguration" },
        { "service": "KinesisAnalytics", "action": "DeleteApplicationOutput" },
        { "service": "KinesisAnalytics", "action": "AddApplicationOutput" },
        { "service": "KinesisAnalytics", "action": "AddApplicationReferenceDataSource" },
        { "service": "KinesisAnalytics", "action": "DeleteApplicationReferenceDataSource" },
        { "service": "KinesisAnalytics", "action": "UpdateApplication" },
        { "service": "KinesisAnalytics", "action": "StartApplication" },
        { "service": "KinesisAnalytics", "action": "StopApplication" }
      ],
      "delete": [
        { "service": "KinesisAnalytics", "action": "DeleteApplication" },
        { "service": "KinesisAnalytics", "action": "DescribeApplication" }
      ]
    }
  },
  "kinesisanalyticsv2": {
    "application": {
      "create": [
        { "service": "KinesisAnalyticsV2", "action": "CreateApplication" },
        { "service": "KinesisAnalyticsV2", "action": "DescribeApplication" },
        { "service": "KinesisAnalyticsV2", "action": "StartApplication" }
      ],
      "read": [{ "service": "KinesisAnalyticsV2", "action": "DescribeApplication" }],
      "update": [
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationInput" },
        { "service": "KinesisAnalyticsV2", "action": "DescribeApplication" },
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationInputProcessingConfiguration" },
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationInputProcessingConfiguration" },
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationOutput" },
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationOutput" },
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationReferenceDataSource" },
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationReferenceDataSource" },
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationVpcConfiguration" },
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationVpcConfiguration" },
        { "service": "KinesisAnalyticsV2", "action": "AddApplicationCloudWatchLoggingOption" },
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationCloudWatchLoggingOption" },
        { "service": "KinesisAnalyticsV2", "action": "UpdateApplication" },
        { "service": "KinesisAnalyticsV2", "action": "StartApplication" },
        { "service": "KinesisAnalyticsV2", "action": "StopApplication" }
      ],
      "delete": [
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplication" },
        { "service": "KinesisAnalyticsV2", "action": "DescribeApplication" }
      ]
    },
    "application_snapshot": {
      "create": [
        { "service": "KinesisAnalyticsV2", "action": "CreateApplicationSnapshot" },
        { "service": "KinesisAnalyticsV2", "action": "DescribeApplicationSnapshot" }
      ],
      "read": [{ "service": "KinesisAnalyticsV2", "action": "DescribeApplicationSnapshot" }],
      "update": [],
      "delete": [
        { "service": "KinesisAnalyticsV2", "action": "DeleteApplicationSnapshot" },
        { "service": "KinesisAnalyticsV2", "action": "DescribeApplicationSnapshot" }
      ]
    }
  },
  "kinesisvideo": {
    "kinesis_video_stream": {
      "create": [
        { "service": "KinesisVideo", "action": "CreateStream" },
        { "service": "KinesisVideo", "action": "DescribeStream" },
        { "service": "KinesisVideo", "action": "DescribeStream" }
      ],
      "read": [{ "service": "KinesisVideo", "action": "DescribeStream" }],
      "update": [
        { "service": "KinesisVideo", "action": "UpdateStream" },
        { "service": "KinesisVideo", "action": "DescribeStream" },
        { "service": "KinesisVideo", "action": "DescribeStream" }
      ],
      "delete": [
        { "service": "KinesisVideo", "action": "DeleteStream" },
        { "service": "KinesisVideo", "action": "DescribeStream" }
      ]
    }
  },
  "kms": {
    "alias": {
      "create": [
        { "service": "KMS", "action": "CreateAlias" },
        { "service": "KMS", "action": "ListAliases" }
      ],
      "read": [{ "service": "KMS", "action": "ListAliases" }],
      "update": [
        { "service": "KMS", "action": "UpdateAlias" },
        { "service": "KMS", "action": "ListAliases" }
      ],
      "delete": [{ "service": "KMS", "action": "DeleteAlias" }]
    },
    "ciphertext": { "create": [{ "service": "KMS", "action": "Encrypt" }], "read": [], "update": [], "delete": [] },
    "custom_key_store": {
      "create": [
        { "service": "KMS", "action": "CreateCustomKeyStore" },
        { "service": "KMS", "action": "DescribeCustomKeyStores" }
      ],
      "read": [{ "service": "KMS", "action": "DescribeCustomKeyStores" }],
      "update": [
        { "service": "KMS", "action": "UpdateCustomKeyStore" },
        { "service": "KMS", "action": "DescribeCustomKeyStores" }
      ],
      "delete": [{ "service": "KMS", "action": "DeleteCustomKeyStore" }]
    },
    "external_key": {
      "create": [
        { "service": "KMS", "action": "CreateKey" },
        { "service": "KMS", "action": "GetParametersForImport" },
        { "service": "KMS", "action": "ImportKeyMaterial" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "read": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "update": [
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "UpdateKeyDescription" },
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetParametersForImport" },
        { "service": "KMS", "action": "ImportKeyMaterial" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "delete": [
        { "service": "KMS", "action": "ScheduleKeyDeletion" },
        { "service": "KMS", "action": "DescribeKey" }
      ]
    },
    "grant": {
      "create": [
        { "service": "KMS", "action": "CreateGrant" },
        { "service": "KMS", "action": "ListGrants" }
      ],
      "read": [{ "service": "KMS", "action": "ListGrants" }],
      "update": [],
      "delete": [
        { "service": "KMS", "action": "RetireGrant" },
        { "service": "KMS", "action": "RevokeGrant" },
        { "service": "KMS", "action": "ListGrants" }
      ]
    },
    "key": {
      "create": [
        { "service": "KMS", "action": "CreateKey" },
        { "service": "KMS", "action": "EnableKeyRotation" },
        { "service": "KMS", "action": "DisableKeyRotation" },
        { "service": "KMS", "action": "GetKeyRotationStatus" },
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" }
      ],
      "read": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "update": [
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "EnableKeyRotation" },
        { "service": "KMS", "action": "DisableKeyRotation" },
        { "service": "KMS", "action": "GetKeyRotationStatus" },
        { "service": "KMS", "action": "UpdateKeyDescription" },
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" }
      ],
      "delete": [
        { "service": "KMS", "action": "ScheduleKeyDeletion" },
        { "service": "KMS", "action": "DescribeKey" }
      ]
    },
    "key_policy": {
      "create": [
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "read": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "update": [
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "delete": [
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" }
      ]
    },
    "replica_external_key": {
      "create": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetParametersForImport" },
        { "service": "KMS", "action": "ImportKeyMaterial" },
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "read": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "update": [
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "UpdateKeyDescription" },
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetParametersForImport" },
        { "service": "KMS", "action": "ImportKeyMaterial" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "delete": [
        { "service": "KMS", "action": "ScheduleKeyDeletion" },
        { "service": "KMS", "action": "DescribeKey" }
      ]
    },
    "replica_key": {
      "create": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "read": [
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "update": [
        { "service": "KMS", "action": "EnableKey" },
        { "service": "KMS", "action": "DisableKey" },
        { "service": "KMS", "action": "DescribeKey" },
        { "service": "KMS", "action": "UpdateKeyDescription" },
        { "service": "KMS", "action": "PutKeyPolicy" },
        { "service": "KMS", "action": "GetKeyPolicy" },
        { "service": "KMS", "action": "GetKeyRotationStatus" }
      ],
      "delete": [
        { "service": "KMS", "action": "ScheduleKeyDeletion" },
        { "service": "KMS", "action": "DescribeKey" }
      ]
    }
  },
  "lakeformation": {
    "data_lake_settings": {
      "create": [
        { "service": "LakeFormation", "action": "PutDataLakeSettings" },
        { "service": "LakeFormation", "action": "PutDataLakeSettings" },
        { "service": "LakeFormation", "action": "GetDataLakeSettings" }
      ],
      "read": [{ "service": "LakeFormation", "action": "GetDataLakeSettings" }],
      "update": [],
      "delete": [{ "service": "LakeFormation", "action": "PutDataLakeSettings" }]
    },
    "lf_tag": {
      "create": [
        { "service": "LakeFormation", "action": "CreateLFTag" },
        { "service": "LakeFormation", "action": "UpdateLFTag" },
        { "service": "LakeFormation", "action": "GetLFTag" }
      ],
      "read": [{ "service": "LakeFormation", "action": "GetLFTag" }],
      "update": [
        { "service": "LakeFormation", "action": "UpdateLFTag" },
        { "service": "LakeFormation", "action": "GetLFTag" }
      ],
      "delete": [{ "service": "LakeFormation", "action": "DeleteLFTag" }]
    },
    "permissions": {
      "create": [
        { "service": "LakeFormation", "action": "GrantPermissions" },
        { "service": "LakeFormation", "action": "GrantPermissions" },
        { "service": "LakeFormation", "action": "ListPermissions" }
      ],
      "read": [{ "service": "LakeFormation", "action": "ListPermissions" }],
      "update": [],
      "delete": [
        { "service": "LakeFormation", "action": "RevokePermissions" },
        { "service": "LakeFormation", "action": "RevokePermissions" },
        { "service": "LakeFormation", "action": "RevokePermissions" },
        { "service": "LakeFormation", "action": "RevokePermissions" }
      ]
    },
    "resource": {
      "create": [
        { "service": "LakeFormation", "action": "RegisterResource" },
        { "service": "LakeFormation", "action": "DescribeResource" }
      ],
      "read": [{ "service": "LakeFormation", "action": "DescribeResource" }],
      "update": [],
      "delete": [{ "service": "LakeFormation", "action": "DeregisterResource" }]
    },
    "resource_lf_tags": {
      "create": [
        { "service": "LakeFormation", "action": "AddLFTagsToResource" },
        { "service": "LakeFormation", "action": "AddLFTagsToResource" },
        { "service": "LakeFormation", "action": "GetResourceLFTags" }
      ],
      "read": [{ "service": "LakeFormation", "action": "GetResourceLFTags" }],
      "update": [],
      "delete": [
        { "service": "LakeFormation", "action": "RemoveLFTagsFromResource" },
        { "service": "LakeFormation", "action": "RemoveLFTagsFromResource" }
      ]
    }
  },
  "lambda": {
    "alias": {
      "create": [
        { "service": "Lambda", "action": "CreateAlias" },
        { "service": "Lambda", "action": "GetAlias" }
      ],
      "read": [{ "service": "Lambda", "action": "GetAlias" }],
      "update": [{ "service": "Lambda", "action": "UpdateAlias" }],
      "delete": [{ "service": "Lambda", "action": "DeleteAlias" }]
    },
    "code_signing_config": {
      "create": [
        { "service": "Lambda", "action": "CreateCodeSigningConfig" },
        { "service": "Lambda", "action": "GetCodeSigningConfig" }
      ],
      "read": [{ "service": "Lambda", "action": "GetCodeSigningConfig" }],
      "update": [
        { "service": "Lambda", "action": "UpdateCodeSigningConfig" },
        { "service": "Lambda", "action": "GetCodeSigningConfig" }
      ],
      "delete": [{ "service": "Lambda", "action": "DeleteCodeSigningConfig" }]
    },
    "event_source_mapping": {
      "create": [
        { "service": "Lambda", "action": "CreateEventSourceMapping" },
        { "service": "Lambda", "action": "CreateEventSourceMapping" },
        { "service": "Lambda", "action": "GetEventSourceMapping" }
      ],
      "read": [{ "service": "Lambda", "action": "GetEventSourceMapping" }],
      "update": [
        { "service": "Lambda", "action": "UpdateEventSourceMapping" },
        { "service": "Lambda", "action": "UpdateEventSourceMapping" },
        { "service": "Lambda", "action": "GetEventSourceMapping" }
      ],
      "delete": [
        { "service": "Lambda", "action": "DeleteEventSourceMapping" },
        { "service": "Lambda", "action": "DeleteEventSourceMapping" },
        { "service": "Lambda", "action": "GetEventSourceMapping" }
      ]
    },
    "function": {
      "create": [
        { "service": "LambdaClient", "action": "CreateFunction" },
        { "service": "LambdaClient", "action": "GetFunction" },
        { "service": "LambdaClient", "action": "PutFunctionConcurrency" },
        { "service": "LambdaClient", "action": "GetFunctionCodeSigningConfig" }
      ],
      "read": [
        { "service": "LambdaClient", "action": "GetFunction" },
        { "service": "LambdaClient", "action": "GetFunctionCodeSigningConfig" }
      ],
      "update": [
        { "service": "LambdaClient", "action": "PutFunctionCodeSigningConfig" },
        { "service": "LambdaClient", "action": "DeleteFunctionCodeSigningConfig" },
        { "service": "LambdaClient", "action": "UpdateFunctionConfiguration" },
        { "service": "LambdaClient", "action": "GetFunction" },
        { "service": "LambdaClient", "action": "UpdateFunctionCode" },
        { "service": "LambdaClient", "action": "PutFunctionConcurrency" },
        { "service": "LambdaClient", "action": "DeleteFunctionConcurrency" },
        { "service": "LambdaClient", "action": "PublishVersion" },
        { "service": "LambdaClient", "action": "GetFunctionCodeSigningConfig" }
      ],
      "delete": [
        { "service": "LambdaClient", "action": "DeleteFunction" },
        { "service": "EC2", "action": "ModifyNetworkInterfaceAttribute" }
      ]
    },
    "function_event_invoke_config": {
      "create": [
        { "service": "Lambda", "action": "PutFunctionEventInvokeConfig" },
        { "service": "Lambda", "action": "PutFunctionEventInvokeConfig" },
        { "service": "Lambda", "action": "GetFunctionEventInvokeConfig" }
      ],
      "read": [{ "service": "Lambda", "action": "GetFunctionEventInvokeConfig" }],
      "update": [
        { "service": "Lambda", "action": "PutFunctionEventInvokeConfig" },
        { "service": "Lambda", "action": "PutFunctionEventInvokeConfig" },
        { "service": "Lambda", "action": "GetFunctionEventInvokeConfig" }
      ],
      "delete": [{ "service": "Lambda", "action": "DeleteFunctionEventInvokeConfig" }]
    },
    "function_url": {
      "create": [
        { "service": "Lambda", "action": "CreateFunctionUrlConfig" },
        { "service": "Lambda", "action": "AddPermission" },
        { "service": "Lambda", "action": "GetFunctionUrlConfig" }
      ],
      "read": [{ "service": "Lambda", "action": "GetFunctionUrlConfig" }],
      "update": [
        { "service": "Lambda", "action": "UpdateFunctionUrlConfig" },
        { "service": "Lambda", "action": "GetFunctionUrlConfig" }
      ],
      "delete": [{ "service": "Lambda", "action": "DeleteFunctionUrlConfig" }]
    },
    "invocation": { "create": [{ "service": "Lambda", "action": "Invoke" }], "read": [], "update": [], "delete": [] },
    "layer_version": {
      "create": [
        { "service": "Lambda", "action": "PublishLayerVersion" },
        { "service": "Lambda", "action": "GetLayerVersion" }
      ],
      "read": [{ "service": "Lambda", "action": "GetLayerVersion" }],
      "update": [],
      "delete": [{ "service": "Lambda", "action": "DeleteLayerVersion" }]
    },
    "layer_version_permission": {
      "create": [
        { "service": "Lambda", "action": "AddLayerVersionPermission" },
        { "service": "Lambda", "action": "GetLayerVersionPolicy" }
      ],
      "read": [{ "service": "Lambda", "action": "GetLayerVersionPolicy" }],
      "update": [],
      "delete": [{ "service": "Lambda", "action": "RemoveLayerVersionPermission" }]
    },
    "permission": {
      "create": [
        { "service": "Lambda", "action": "AddPermission" },
        { "service": "Lambda", "action": "GetPolicy" }
      ],
      "read": [{ "service": "Lambda", "action": "GetPolicy" }],
      "update": [],
      "delete": [
        { "service": "Lambda", "action": "RemovePermission" },
        { "service": "Lambda", "action": "GetPolicy" }
      ]
    },
    "provisioned_concurrency_config": {
      "create": [
        { "service": "Lambda", "action": "PutProvisionedConcurrencyConfig" },
        { "service": "Lambda", "action": "GetProvisionedConcurrencyConfig" },
        { "service": "Lambda", "action": "GetProvisionedConcurrencyConfig" }
      ],
      "read": [{ "service": "Lambda", "action": "GetProvisionedConcurrencyConfig" }],
      "update": [
        { "service": "Lambda", "action": "PutProvisionedConcurrencyConfig" },
        { "service": "Lambda", "action": "GetProvisionedConcurrencyConfig" },
        { "service": "Lambda", "action": "GetProvisionedConcurrencyConfig" }
      ],
      "delete": [{ "service": "Lambda", "action": "DeleteProvisionedConcurrencyConfig" }]
    }
  },
  "lexmodels": {
    "lex_bot": {
      "create": [
        { "service": "LexModels", "action": "PutBot" },
        { "service": "LexModels", "action": "GetBot" },
        { "service": "LexModels", "action": "GetBotVersions" }
      ],
      "read": [
        { "service": "LexModels", "action": "GetBot" },
        { "service": "LexModels", "action": "GetBotVersions" }
      ],
      "update": [
        { "service": "LexModels", "action": "PutBot" },
        { "service": "LexModels", "action": "GetBot" },
        { "service": "LexModels", "action": "GetBotVersions" }
      ],
      "delete": [
        { "service": "LexModels", "action": "DeleteBot" },
        { "service": "LexModels", "action": "GetBot" }
      ]
    },
    "lex_bot_alias": {
      "create": [
        { "service": "LexModels", "action": "PutBotAlias" },
        { "service": "LexModels", "action": "PutBotAlias" },
        { "service": "LexModels", "action": "GetBotAlias" }
      ],
      "read": [{ "service": "LexModels", "action": "GetBotAlias" }],
      "update": [
        { "service": "LexModels", "action": "PutBotAlias" },
        { "service": "LexModels", "action": "PutBotAlias" },
        { "service": "LexModels", "action": "GetBotAlias" }
      ],
      "delete": [
        { "service": "LexModels", "action": "DeleteBotAlias" },
        { "service": "LexModels", "action": "DeleteBotAlias" },
        { "service": "LexModels", "action": "GetBotAlias" }
      ]
    },
    "lex_intent": {
      "create": [
        { "service": "LexModels", "action": "PutIntent" },
        { "service": "LexModels", "action": "PutIntent" },
        { "service": "LexModels", "action": "GetIntent" },
        { "service": "LexModels", "action": "GetIntentVersions" }
      ],
      "read": [
        { "service": "LexModels", "action": "GetIntent" },
        { "service": "LexModels", "action": "GetIntentVersions" }
      ],
      "update": [
        { "service": "LexModels", "action": "PutIntent" },
        { "service": "LexModels", "action": "PutIntent" },
        { "service": "LexModels", "action": "GetIntent" },
        { "service": "LexModels", "action": "GetIntentVersions" }
      ],
      "delete": [
        { "service": "LexModels", "action": "DeleteIntent" },
        { "service": "LexModels", "action": "DeleteIntent" },
        { "service": "LexModels", "action": "GetIntentVersions" }
      ]
    },
    "lex_slot_type": {
      "create": [
        { "service": "LexModels", "action": "PutSlotType" },
        { "service": "LexModels", "action": "GetSlotType" },
        { "service": "LexModels", "action": "GetSlotTypeVersions" }
      ],
      "read": [
        { "service": "LexModels", "action": "GetSlotType" },
        { "service": "LexModels", "action": "GetSlotTypeVersions" }
      ],
      "update": [
        { "service": "LexModels", "action": "PutSlotType" },
        { "service": "LexModels", "action": "GetSlotType" },
        { "service": "LexModels", "action": "GetSlotTypeVersions" }
      ],
      "delete": [
        { "service": "LexModels", "action": "DeleteSlotType" },
        { "service": "LexModels", "action": "GetSlotType" }
      ]
    }
  },
  "licensemanager": {
    "association": {
      "create": [
        { "service": "LicenseManager", "action": "UpdateLicenseSpecificationsForResource" },
        { "service": "LicenseManager", "action": "ListLicenseSpecificationsForResource" }
      ],
      "read": [{ "service": "LicenseManager", "action": "ListLicenseSpecificationsForResource" }],
      "update": [],
      "delete": [{ "service": "LicenseManager", "action": "UpdateLicenseSpecificationsForResource" }]
    },
    "grant": {
      "create": [
        { "service": "LicenseManager", "action": "CreateGrant" },
        { "service": "LicenseManager", "action": "GetGrant" }
      ],
      "read": [{ "service": "LicenseManager", "action": "GetGrant" }],
      "update": [
        { "service": "LicenseManager", "action": "CreateGrantVersion" },
        { "service": "LicenseManager", "action": "GetGrant" }
      ],
      "delete": [
        { "service": "LicenseManager", "action": "GetGrant" },
        { "service": "LicenseManager", "action": "DeleteGrant" }
      ]
    },
    "grant_accepter": {
      "create": [
        { "service": "LicenseManager", "action": "AcceptGrant" },
        { "service": "LicenseManager", "action": "ListReceivedGrants" }
      ],
      "read": [{ "service": "LicenseManager", "action": "ListReceivedGrants" }],
      "update": [],
      "delete": [{ "service": "LicenseManager", "action": "RejectGrant" }]
    },
    "license_configuration": {
      "create": [
        { "service": "LicenseManager", "action": "CreateLicenseConfiguration" },
        { "service": "LicenseManager", "action": "GetLicenseConfiguration" }
      ],
      "read": [{ "service": "LicenseManager", "action": "GetLicenseConfiguration" }],
      "update": [
        { "service": "LicenseManager", "action": "UpdateLicenseConfiguration" },
        { "service": "LicenseManager", "action": "GetLicenseConfiguration" }
      ],
      "delete": [{ "service": "LicenseManager", "action": "DeleteLicenseConfiguration" }]
    }
  },
  "lightsail": {
    "bucket": {
      "create": [
        { "service": "Lightsail", "action": "CreateBucket" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetBuckets" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetBuckets" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateBucketBundle" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetBuckets" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "DeleteBucket" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "bucket_access_key": {
      "create": [
        { "service": "Lightsail", "action": "CreateBucketAccessKey" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetBucketAccessKeys" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetBucketAccessKeys" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteBucketAccessKey" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "bucket_resource_access": {
      "create": [
        { "service": "Lightsail", "action": "SetResourceAccessForBucket" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetBuckets" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetBuckets" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "SetResourceAccessForBucket" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "certificate": {
      "create": [
        { "service": "Lightsail", "action": "CreateCertificate" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetCertificates" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetCertificates" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteCertificate" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "container_service": {
      "create": [
        { "service": "Lightsail", "action": "CreateContainerService" },
        { "service": "Lightsail", "action": "GetContainerServices" },
        { "service": "Lightsail", "action": "UpdateContainerService" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetContainerServices" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateContainerService" },
        { "service": "Lightsail", "action": "GetContainerServices" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "DeleteContainerService" },
        { "service": "Lightsail", "action": "GetContainerServices" }
      ]
    },
    "container_service_deployment_version": {
      "create": [
        { "service": "Lightsail", "action": "CreateContainerServiceDeployment" },
        { "service": "Lightsail", "action": "GetContainerServiceDeployments" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetContainerServiceDeployments" }],
      "update": [],
      "delete": []
    },
    "database": {
      "create": [
        { "service": "Lightsail", "action": "CreateRelationalDatabase" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "UpdateRelationalDatabase" },
        { "service": "Lightsail", "action": "GetRelationalDatabase" },
        { "service": "Lightsail", "action": "GetRelationalDatabase" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetRelationalDatabase" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateRelationalDatabase" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetRelationalDatabase" },
        { "service": "Lightsail", "action": "GetRelationalDatabase" },
        { "service": "Lightsail", "action": "GetRelationalDatabase" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "GetRelationalDatabase" },
        { "service": "Lightsail", "action": "DeleteRelationalDatabase" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "disk": {
      "create": [
        { "service": "Lightsail", "action": "CreateDisk" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetDisk" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetDisk" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteDisk" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "disk_attachment": {
      "create": [
        { "service": "Lightsail", "action": "AttachDisk" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetDisk" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetDisk" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "GetInstanceState" },
        { "service": "Lightsail", "action": "StopInstance" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "DetachDisk" },
        { "service": "Lightsail", "action": "StartInstance" }
      ]
    },
    "distribution": {
      "create": [
        { "service": "Lightsail", "action": "CreateDistribution" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "UpdateDistribution" },
        { "service": "Lightsail", "action": "GetDistributions" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetDistributions" }],
      "update": [
        { "service": "Lightsail", "action": "SetIpAddressType" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "UpdateDistribution" },
        { "service": "Lightsail", "action": "UpdateDistributionBundle" },
        { "service": "Lightsail", "action": "GetDistributions" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "DeleteDistribution" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "domain": {
      "create": [
        { "service": "Lightsail", "action": "CreateDomain" },
        { "service": "Lightsail", "action": "GetDomain" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetDomain" }],
      "update": [],
      "delete": [{ "service": "Lightsail", "action": "DeleteDomain" }]
    },
    "domain_entry": {
      "create": [
        { "service": "Lightsail", "action": "CreateDomainEntry" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetDomain" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetDomain" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteDomainEntry" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "instance": {
      "create": [
        { "service": "Lightsail", "action": "CreateInstances" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "EnableAddOn" },
        { "service": "Lightsail", "action": "GetInstance" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetInstance" }],
      "update": [
        { "service": "Lightsail", "action": "SetIpAddressType" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "DisableAddOn" },
        { "service": "Lightsail", "action": "EnableAddOn" },
        { "service": "Lightsail", "action": "GetInstance" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "DeleteInstance" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "instance_public_ports": {
      "create": [
        { "service": "Lightsail", "action": "PutInstancePublicPorts" },
        { "service": "Lightsail", "action": "GetInstancePortStates" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetInstancePortStates" }],
      "update": [],
      "delete": [{ "service": "Lightsail", "action": "CloseInstancePublicPorts" }]
    },
    "key_pair": {
      "create": [
        { "service": "Lightsail", "action": "CreateKeyPair" },
        { "service": "Lightsail", "action": "ImportKeyPair" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetKeyPair" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetKeyPair" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteKeyPair" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "lb": {
      "create": [
        { "service": "Lightsail", "action": "CreateLoadBalancer" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancer" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "DeleteLoadBalancer" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "lb_attachment": {
      "create": [
        { "service": "Lightsail", "action": "AttachInstancesToLoadBalancer" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancer" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DetachInstancesFromLoadBalancer" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "lb_certificate": {
      "create": [
        { "service": "Lightsail", "action": "CreateLoadBalancerTlsCertificate" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancerTlsCertificates" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancerTlsCertificates" }],
      "update": [],
      "delete": [
        { "service": "Lightsail", "action": "DeleteLoadBalancerTlsCertificate" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "lb_certificate_attachment": {
      "create": [
        { "service": "Lightsail", "action": "AttachLoadBalancerTlsCertificate" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancerTlsCertificates" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancerTlsCertificates" }],
      "update": [],
      "delete": []
    },
    "lb_https_redirection_policy": {
      "create": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancer" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "lb_stickiness_policy": {
      "create": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetLoadBalancer" }],
      "update": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" },
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetLoadBalancer" }
      ],
      "delete": [
        { "service": "Lightsail", "action": "UpdateLoadBalancerAttribute" },
        { "service": "Lightsail", "action": "GetOperation" }
      ]
    },
    "static_ip": {
      "create": [
        { "service": "Lightsail", "action": "AllocateStaticIp" },
        { "service": "Lightsail", "action": "GetStaticIp" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetStaticIp" }],
      "update": [],
      "delete": [{ "service": "Lightsail", "action": "ReleaseStaticIp" }]
    },
    "static_ip_attachment": {
      "create": [
        { "service": "Lightsail", "action": "AttachStaticIp" },
        { "service": "Lightsail", "action": "GetStaticIp" }
      ],
      "read": [{ "service": "Lightsail", "action": "GetStaticIp" }],
      "update": [],
      "delete": [{ "service": "Lightsail", "action": "DetachStaticIp" }]
    }
  },
  "location": {
    "geofence_collection": {
      "create": [
        { "service": "Location", "action": "CreateGeofenceCollection" },
        { "service": "Location", "action": "DescribeGeofenceCollection" }
      ],
      "read": [{ "service": "Location", "action": "DescribeGeofenceCollection" }],
      "update": [
        { "service": "Location", "action": "UpdateGeofenceCollection" },
        { "service": "Location", "action": "DescribeGeofenceCollection" }
      ],
      "delete": [{ "service": "Location", "action": "DeleteGeofenceCollection" }]
    },
    "map": {
      "create": [
        { "service": "Location", "action": "CreateMap" },
        { "service": "Location", "action": "DescribeMap" }
      ],
      "read": [{ "service": "Location", "action": "DescribeMap" }],
      "update": [
        { "service": "Location", "action": "UpdateMap" },
        { "service": "Location", "action": "DescribeMap" }
      ],
      "delete": [{ "service": "Location", "action": "DeleteMap" }]
    },
    "place_index": {
      "create": [
        { "service": "Location", "action": "CreatePlaceIndex" },
        { "service": "Location", "action": "DescribePlaceIndex" }
      ],
      "read": [{ "service": "Location", "action": "DescribePlaceIndex" }],
      "update": [
        { "service": "Location", "action": "UpdatePlaceIndex" },
        { "service": "Location", "action": "DescribePlaceIndex" }
      ],
      "delete": [{ "service": "Location", "action": "DeletePlaceIndex" }]
    },
    "route_calculator": {
      "create": [
        { "service": "Location", "action": "CreateRouteCalculator" },
        { "service": "Location", "action": "DescribeRouteCalculator" }
      ],
      "read": [{ "service": "Location", "action": "DescribeRouteCalculator" }],
      "update": [
        { "service": "Location", "action": "UpdateRouteCalculator" },
        { "service": "Location", "action": "DescribeRouteCalculator" }
      ],
      "delete": [{ "service": "Location", "action": "DeleteRouteCalculator" }]
    },
    "tracker": {
      "create": [
        { "service": "Location", "action": "CreateTracker" },
        { "service": "Location", "action": "DescribeTracker" }
      ],
      "read": [{ "service": "Location", "action": "DescribeTracker" }],
      "update": [
        { "service": "Location", "action": "UpdateTracker" },
        { "service": "Location", "action": "DescribeTracker" }
      ],
      "delete": [{ "service": "Location", "action": "DeleteTracker" }]
    },
    "tracker_association": {
      "create": [
        { "service": "Location", "action": "AssociateTrackerConsumer" },
        { "service": "Location", "action": "ListTrackerConsumers" }
      ],
      "read": [{ "service": "Location", "action": "ListTrackerConsumers" }],
      "update": [],
      "delete": [{ "service": "Location", "action": "DisassociateTrackerConsumer" }]
    }
  },
  "logs": {
    "cloudwatch_log_data_protection_policy": {
      "create": [
        { "service": "LogsClient", "action": "PutDataProtectionPolicy" },
        { "service": "LogsClient", "action": "GetDataProtectionPolicy" }
      ],
      "read": [{ "service": "LogsClient", "action": "GetDataProtectionPolicy" }],
      "update": [],
      "delete": [{ "service": "LogsClient", "action": "DeleteDataProtectionPolicy" }]
    },
    "cloudwatch_log_destination": {
      "create": [
        { "service": "Logs", "action": "PutDestination" },
        { "service": "Logs", "action": "DescribeDestinations" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeDestinations" }],
      "update": [
        { "service": "Logs", "action": "PutDestination" },
        { "service": "Logs", "action": "DescribeDestinations" }
      ],
      "delete": [{ "service": "Logs", "action": "DeleteDestination" }]
    },
    "cloudwatch_log_destination_policy": {
      "create": [
        { "service": "Logs", "action": "PutDestinationPolicy" },
        { "service": "Logs", "action": "DescribeDestinations" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeDestinations" }],
      "update": [],
      "delete": []
    },
    "cloudwatch_log_group": {
      "create": [
        { "service": "Logs", "action": "CreateLogGroup" },
        { "service": "Logs", "action": "PutRetentionPolicy" },
        { "service": "Logs", "action": "DescribeLogGroups" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeLogGroups" }],
      "update": [
        { "service": "Logs", "action": "PutRetentionPolicy" },
        { "service": "Logs", "action": "DeleteRetentionPolicy" },
        { "service": "Logs", "action": "AssociateKmsKey" },
        { "service": "Logs", "action": "DisassociateKmsKey" },
        { "service": "Logs", "action": "DescribeLogGroups" }
      ],
      "delete": [{ "service": "Logs", "action": "DeleteLogGroup" }]
    },
    "cloudwatch_log_metric_filter": {
      "create": [
        { "service": "Logs", "action": "PutMetricFilter" },
        { "service": "Logs", "action": "DescribeMetricFilters" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeMetricFilters" }],
      "update": [],
      "delete": [{ "service": "Logs", "action": "DeleteMetricFilter" }]
    },
    "cloudwatch_log_resource_policy": {
      "create": [
        { "service": "Logs", "action": "PutResourcePolicy" },
        { "service": "Logs", "action": "DescribeResourcePolicies" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeResourcePolicies" }],
      "update": [],
      "delete": [{ "service": "Logs", "action": "DeleteResourcePolicy" }]
    },
    "cloudwatch_log_stream": {
      "create": [
        { "service": "Logs", "action": "CreateLogStream" },
        { "service": "Logs", "action": "DescribeLogStreams" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeLogStreams" }],
      "update": [],
      "delete": [{ "service": "Logs", "action": "DeleteLogStream" }]
    },
    "cloudwatch_log_subscription_filter": {
      "create": [{ "service": "Logs", "action": "PutSubscriptionFilter" }],
      "read": [{ "service": "Logs", "action": "DescribeSubscriptionFilters" }],
      "update": [],
      "delete": [{ "service": "Logs", "action": "DeleteSubscriptionFilter" }]
    },
    "cloudwatch_query_definition": {
      "create": [
        { "service": "Logs", "action": "PutQueryDefinition" },
        { "service": "Logs", "action": "DescribeQueryDefinitions" }
      ],
      "read": [{ "service": "Logs", "action": "DescribeQueryDefinitions" }],
      "update": [],
      "delete": [{ "service": "Logs", "action": "DeleteQueryDefinition" }]
    }
  },
  "macie": {
    "member_account_association": {
      "create": [
        { "service": "Macie", "action": "AssociateMemberAccount" },
        { "service": "Macie", "action": "ListMemberAccounts" }
      ],
      "read": [{ "service": "Macie", "action": "ListMemberAccounts" }],
      "update": [],
      "delete": [{ "service": "Macie", "action": "DisassociateMemberAccount" }]
    },
    "s3_bucket_association": {
      "create": [
        { "service": "Macie", "action": "AssociateS3Resources" },
        { "service": "Macie", "action": "ListS3Resources" }
      ],
      "read": [{ "service": "Macie", "action": "ListS3Resources" }],
      "update": [
        { "service": "Macie", "action": "UpdateS3Resources" },
        { "service": "Macie", "action": "ListS3Resources" }
      ],
      "delete": [{ "service": "Macie", "action": "DisassociateS3Resources" }]
    }
  },
  "macie2": {
    "account": {
      "create": [
        { "service": "Macie2", "action": "EnableMacie" },
        { "service": "Macie2", "action": "EnableMacie" },
        { "service": "Macie2", "action": "GetMacieSession" }
      ],
      "read": [{ "service": "Macie2", "action": "GetMacieSession" }],
      "update": [
        { "service": "Macie2", "action": "UpdateMacieSession" },
        { "service": "Macie2", "action": "GetMacieSession" }
      ],
      "delete": [
        { "service": "Macie2", "action": "DisableMacie" },
        { "service": "Macie2", "action": "DisableMacie" }
      ]
    },
    "classification_export_configuration": {
      "create": [
        { "service": "Macie2", "action": "GetClassificationExportConfiguration" },
        { "service": "Macie2", "action": "PutClassificationExportConfiguration" },
        { "service": "Macie2", "action": "GetClassificationExportConfiguration" }
      ],
      "read": [{ "service": "Macie2", "action": "GetClassificationExportConfiguration" }],
      "update": [
        { "service": "Macie2", "action": "PutClassificationExportConfiguration" },
        { "service": "Macie2", "action": "GetClassificationExportConfiguration" }
      ],
      "delete": [{ "service": "Macie2", "action": "PutClassificationExportConfiguration" }]
    },
    "classification_job": {
      "create": [
        { "service": "Macie2", "action": "CreateClassificationJob" },
        { "service": "Macie2", "action": "CreateClassificationJob" },
        { "service": "Macie2", "action": "DescribeClassificationJob" }
      ],
      "read": [{ "service": "Macie2", "action": "DescribeClassificationJob" }],
      "update": [
        { "service": "Macie2", "action": "UpdateClassificationJob" },
        { "service": "Macie2", "action": "DescribeClassificationJob" }
      ],
      "delete": [{ "service": "Macie2", "action": "UpdateClassificationJob" }]
    },
    "custom_data_identifier": {
      "create": [
        { "service": "Macie2", "action": "CreateCustomDataIdentifier" },
        { "service": "Macie2", "action": "CreateCustomDataIdentifier" },
        { "service": "Macie2", "action": "GetCustomDataIdentifier" }
      ],
      "read": [{ "service": "Macie2", "action": "GetCustomDataIdentifier" }],
      "update": [],
      "delete": [{ "service": "Macie2", "action": "DeleteCustomDataIdentifier" }]
    },
    "findings_filter": {
      "create": [
        { "service": "Macie2", "action": "CreateFindingsFilter" },
        { "service": "Macie2", "action": "CreateFindingsFilter" },
        { "service": "Macie2", "action": "GetFindingsFilter" }
      ],
      "read": [{ "service": "Macie2", "action": "GetFindingsFilter" }],
      "update": [
        { "service": "Macie2", "action": "UpdateFindingsFilter" },
        { "service": "Macie2", "action": "GetFindingsFilter" }
      ],
      "delete": [{ "service": "Macie2", "action": "DeleteFindingsFilter" }]
    },
    "invitation_accepter": {
      "create": [
        { "service": "Macie2", "action": "ListInvitations" },
        { "service": "Macie2", "action": "ListInvitations" },
        { "service": "Macie2", "action": "AcceptInvitation" },
        { "service": "Macie2", "action": "GetAdministratorAccount" }
      ],
      "read": [{ "service": "Macie2", "action": "GetAdministratorAccount" }],
      "update": [],
      "delete": [{ "service": "Macie2", "action": "DisassociateFromAdministratorAccount" }]
    },
    "member": {
      "create": [
        { "service": "Macie2", "action": "CreateMember" },
        { "service": "Macie2", "action": "CreateMember" },
        { "service": "Macie2", "action": "GetMember" },
        { "service": "Macie2", "action": "CreateInvitations" },
        { "service": "Macie2", "action": "CreateInvitations" },
        { "service": "Macie2", "action": "ListMembers" }
      ],
      "read": [{ "service": "Macie2", "action": "GetMember" }],
      "update": [
        { "service": "Macie2", "action": "CreateInvitations" },
        { "service": "Macie2", "action": "CreateInvitations" },
        { "service": "Macie2", "action": "ListMembers" },
        { "service": "Macie2", "action": "DisassociateMember" },
        { "service": "Macie2", "action": "UpdateMemberSession" },
        { "service": "Macie2", "action": "GetMember" }
      ],
      "delete": [{ "service": "Macie2", "action": "DeleteMember" }]
    },
    "organization_admin_account": {
      "create": [
        { "service": "Macie2", "action": "EnableOrganizationAdminAccount" },
        { "service": "Macie2", "action": "EnableOrganizationAdminAccount" },
        { "service": "Macie2", "action": "ListOrganizationAdminAccounts" }
      ],
      "read": [{ "service": "Macie2", "action": "ListOrganizationAdminAccounts" }],
      "update": [],
      "delete": [{ "service": "Macie2", "action": "DisableOrganizationAdminAccount" }]
    }
  },
  "mediaconvert": { "media_convert_queue": { "create": [], "read": [], "update": [], "delete": [] } },
  "medialive": {
    "channel": {
      "create": [
        { "service": "MediaLiveClient", "action": "CreateChannel" },
        { "service": "MediaLiveClient", "action": "DescribeChannel" },
        { "service": "MediaLiveClient", "action": "StartChannel" }
      ],
      "read": [{ "service": "MediaLiveClient", "action": "DescribeChannel" }],
      "update": [
        { "service": "MediaLiveClient", "action": "DescribeChannel" },
        { "service": "MediaLiveClient", "action": "StopChannel" },
        { "service": "MediaLiveClient", "action": "UpdateChannel" },
        { "service": "MediaLiveClient", "action": "StartChannel" }
      ],
      "delete": [
        { "service": "MediaLiveClient", "action": "DescribeChannel" },
        { "service": "MediaLiveClient", "action": "StopChannel" },
        { "service": "MediaLiveClient", "action": "DeleteChannel" }
      ]
    },
    "input": {
      "create": [
        { "service": "MediaLiveClient", "action": "CreateInput" },
        { "service": "MediaLiveClient", "action": "DescribeInput" }
      ],
      "read": [{ "service": "MediaLiveClient", "action": "DescribeInput" }],
      "update": [
        { "service": "MediaLiveClient", "action": "UpdateInput" },
        { "service": "MediaLiveClient", "action": "DescribeInput" }
      ],
      "delete": [
        { "service": "MediaLiveClient", "action": "DeleteInput" },
        { "service": "MediaLiveClient", "action": "DescribeInput" }
      ]
    },
    "input_security_group": {
      "create": [
        { "service": "MediaLiveClient", "action": "CreateInputSecurityGroup" },
        { "service": "MediaLiveClient", "action": "DescribeInputSecurityGroup" }
      ],
      "read": [{ "service": "MediaLiveClient", "action": "DescribeInputSecurityGroup" }],
      "update": [
        { "service": "MediaLiveClient", "action": "UpdateInputSecurityGroup" },
        { "service": "MediaLiveClient", "action": "DescribeInputSecurityGroup" }
      ],
      "delete": [
        { "service": "MediaLiveClient", "action": "DeleteInputSecurityGroup" },
        { "service": "MediaLiveClient", "action": "DescribeInputSecurityGroup" }
      ]
    },
    "multiplex": {
      "create": [
        { "service": "MediaLiveClient", "action": "CreateMultiplex" },
        { "service": "MediaLiveClient", "action": "DescribeMultiplex" },
        { "service": "MediaLiveClient", "action": "StartMultiplex" }
      ],
      "read": [{ "service": "MediaLiveClient", "action": "DescribeMultiplex" }],
      "update": [
        { "service": "MediaLiveClient", "action": "UpdateMultiplex" },
        { "service": "MediaLiveClient", "action": "DescribeMultiplex" },
        { "service": "MediaLiveClient", "action": "StartMultiplex" },
        { "service": "MediaLiveClient", "action": "StopMultiplex" }
      ],
      "delete": [
        { "service": "MediaLiveClient", "action": "DescribeMultiplex" },
        { "service": "MediaLiveClient", "action": "StopMultiplex" },
        { "service": "MediaLiveClient", "action": "DeleteMultiplex" }
      ]
    }
  },
  "mediapackage": {
    "media_package_channel": {
      "create": [
        { "service": "MediaPackage", "action": "CreateChannel" },
        { "service": "MediaPackage", "action": "DescribeChannel" }
      ],
      "read": [{ "service": "MediaPackage", "action": "DescribeChannel" }],
      "update": [
        { "service": "MediaPackage", "action": "UpdateChannel" },
        { "service": "MediaPackage", "action": "DescribeChannel" }
      ],
      "delete": [
        { "service": "MediaPackage", "action": "DeleteChannel" },
        { "service": "MediaPackage", "action": "DescribeChannel" },
        { "service": "MediaPackage", "action": "DescribeChannel" }
      ]
    }
  },
  "mediastore": {
    "media_store_container": {
      "create": [
        { "service": "MediaStore", "action": "CreateContainer" },
        { "service": "MediaStore", "action": "DescribeContainer" },
        { "service": "MediaStore", "action": "DescribeContainer" }
      ],
      "read": [{ "service": "MediaStore", "action": "DescribeContainer" }],
      "update": [],
      "delete": [
        { "service": "MediaStore", "action": "DeleteContainer" },
        { "service": "MediaStore", "action": "DescribeContainer" },
        { "service": "MediaStore", "action": "DescribeContainer" }
      ]
    },
    "media_store_container_policy": {
      "create": [
        { "service": "MediaStore", "action": "PutContainerPolicy" },
        { "service": "MediaStore", "action": "GetContainerPolicy" }
      ],
      "read": [{ "service": "MediaStore", "action": "GetContainerPolicy" }],
      "update": [],
      "delete": [{ "service": "MediaStore", "action": "DeleteContainerPolicy" }]
    }
  },
  "memorydb": {
    "acl": {
      "create": [
        { "service": "MemoryDB", "action": "CreateACL" },
        { "service": "MemoryDB", "action": "DescribeACLs" }
      ],
      "read": [{ "service": "MemoryDB", "action": "DescribeACLs" }],
      "update": [
        { "service": "MemoryDB", "action": "DescribeACLs" },
        { "service": "MemoryDB", "action": "UpdateACL" }
      ],
      "delete": [
        { "service": "MemoryDB", "action": "DeleteACL" },
        { "service": "MemoryDB", "action": "DescribeACLs" }
      ]
    },
    "cluster": {
      "create": [
        { "service": "MemoryDB", "action": "CreateCluster" },
        { "service": "MemoryDB", "action": "DescribeClusters" }
      ],
      "read": [{ "service": "MemoryDB", "action": "DescribeClusters" }],
      "update": [
        { "service": "MemoryDB", "action": "UpdateCluster" },
        { "service": "MemoryDB", "action": "DescribeClusters" }
      ],
      "delete": [
        { "service": "MemoryDB", "action": "DeleteCluster" },
        { "service": "MemoryDB", "action": "DescribeClusters" }
      ]
    },
    "parameter_group": {
      "create": [
        { "service": "MemoryDB", "action": "CreateParameterGroup" },
        { "service": "MemoryDB", "action": "ResetParameterGroup" },
        { "service": "MemoryDB", "action": "UpdateParameterGroup" },
        { "service": "MemoryDB", "action": "DescribeParameterGroups" },
        { "service": "MemoryDB", "action": "DescribeParameters" }
      ],
      "read": [
        { "service": "MemoryDB", "action": "DescribeParameterGroups" },
        { "service": "MemoryDB", "action": "DescribeParameters" }
      ],
      "update": [
        { "service": "MemoryDB", "action": "ResetParameterGroup" },
        { "service": "MemoryDB", "action": "UpdateParameterGroup" },
        { "service": "MemoryDB", "action": "DescribeParameterGroups" },
        { "service": "MemoryDB", "action": "DescribeParameters" }
      ],
      "delete": [{ "service": "MemoryDB", "action": "DeleteParameterGroup" }]
    },
    "snapshot": {
      "create": [
        { "service": "MemoryDB", "action": "CreateSnapshot" },
        { "service": "MemoryDB", "action": "DescribeSnapshots" }
      ],
      "read": [{ "service": "MemoryDB", "action": "DescribeSnapshots" }],
      "update": [],
      "delete": [
        { "service": "MemoryDB", "action": "DeleteSnapshot" },
        { "service": "MemoryDB", "action": "DescribeSnapshots" }
      ]
    },
    "subnet_group": {
      "create": [
        { "service": "MemoryDB", "action": "CreateSubnetGroup" },
        { "service": "MemoryDB", "action": "DescribeSubnetGroups" }
      ],
      "read": [{ "service": "MemoryDB", "action": "DescribeSubnetGroups" }],
      "update": [
        { "service": "MemoryDB", "action": "UpdateSubnetGroup" },
        { "service": "MemoryDB", "action": "DescribeSubnetGroups" }
      ],
      "delete": [{ "service": "MemoryDB", "action": "DeleteSubnetGroup" }]
    },
    "user": {
      "create": [
        { "service": "MemoryDB", "action": "CreateUser" },
        { "service": "MemoryDB", "action": "DescribeUsers" }
      ],
      "read": [{ "service": "MemoryDB", "action": "DescribeUsers" }],
      "update": [
        { "service": "MemoryDB", "action": "UpdateUser" },
        { "service": "MemoryDB", "action": "DescribeUsers" }
      ],
      "delete": [
        { "service": "MemoryDB", "action": "DeleteUser" },
        { "service": "MemoryDB", "action": "DescribeUsers" }
      ]
    }
  },
  "mq": {
    "broker": {
      "create": [
        { "service": "MQ", "action": "CreateBroker" },
        { "service": "MQ", "action": "DescribeBroker" },
        { "service": "MQ", "action": "DescribeUser" }
      ],
      "read": [
        { "service": "MQ", "action": "DescribeBroker" },
        { "service": "MQ", "action": "DescribeUser" }
      ],
      "update": [
        { "service": "MQ", "action": "UpdateBroker" },
        { "service": "MQ", "action": "UpdateBroker" },
        { "service": "MQ", "action": "CreateUser" },
        { "service": "MQ", "action": "DeleteUser" },
        { "service": "MQ", "action": "UpdateUser" },
        { "service": "MQ", "action": "UpdateBroker" },
        { "service": "MQ", "action": "UpdateBroker" },
        { "service": "MQ", "action": "UpdateBroker" },
        { "service": "MQ", "action": "RebootBroker" },
        { "service": "MQ", "action": "DescribeBroker" }
      ],
      "delete": [
        { "service": "MQ", "action": "DeleteBroker" },
        { "service": "MQ", "action": "DescribeBroker" }
      ]
    },
    "configuration": {
      "create": [
        { "service": "MQ", "action": "CreateConfiguration" },
        { "service": "MQ", "action": "UpdateConfiguration" },
        { "service": "MQ", "action": "DescribeConfiguration" },
        { "service": "MQ", "action": "DescribeConfigurationRevision" }
      ],
      "read": [
        { "service": "MQ", "action": "DescribeConfiguration" },
        { "service": "MQ", "action": "DescribeConfigurationRevision" }
      ],
      "update": [
        { "service": "MQ", "action": "UpdateConfiguration" },
        { "service": "MQ", "action": "DescribeConfiguration" },
        { "service": "MQ", "action": "DescribeConfigurationRevision" }
      ],
      "delete": []
    }
  },
  "mwaa": {
    "environment": {
      "create": [
        { "service": "MWAA", "action": "CreateEnvironment" },
        { "service": "MWAA", "action": "GetEnvironment" }
      ],
      "read": [{ "service": "MWAA", "action": "GetEnvironment" }],
      "update": [
        { "service": "MWAA", "action": "UpdateEnvironment" },
        { "service": "MWAA", "action": "GetEnvironment" }
      ],
      "delete": [
        { "service": "MWAA", "action": "DeleteEnvironment" },
        { "service": "MWAA", "action": "GetEnvironment" }
      ]
    }
  },
  "neptune": {
    "cluster": {
      "create": [
        { "service": "Neptune", "action": "RestoreDBClusterFromSnapshot" },
        { "service": "Neptune", "action": "CreateDBCluster" },
        { "service": "Neptune", "action": "DescribeDBClusters" },
        { "service": "Neptune", "action": "AddRoleToDBCluster" },
        { "service": "Neptune", "action": "ModifyDBCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" }
      ],
      "read": [
        { "service": "Neptune", "action": "DescribeDBClusters" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" }
      ],
      "update": [
        { "service": "Neptune", "action": "ModifyDBCluster" },
        { "service": "Neptune", "action": "DescribeDBClusters" },
        { "service": "Neptune", "action": "RemoveFromGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" },
        { "service": "Neptune", "action": "AddRoleToDBCluster" },
        { "service": "Neptune", "action": "RemoveRoleFromDBCluster" }
      ],
      "delete": [
        { "service": "Neptune", "action": "RemoveFromGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" },
        { "service": "Neptune", "action": "DeleteDBCluster" },
        { "service": "Neptune", "action": "DescribeDBClusters" }
      ]
    },
    "cluster_endpoint": {
      "create": [
        { "service": "Neptune", "action": "CreateDBClusterEndpoint" },
        { "service": "Neptune", "action": "DescribeDBClusterEndpoints" }
      ],
      "read": [{ "service": "Neptune", "action": "DescribeDBClusterEndpoints" }],
      "update": [
        { "service": "Neptune", "action": "ModifyDBClusterEndpoint" },
        { "service": "Neptune", "action": "DescribeDBClusterEndpoints" }
      ],
      "delete": [
        { "service": "Neptune", "action": "DeleteDBClusterEndpoint" },
        { "service": "Neptune", "action": "DescribeDBClusterEndpoints" }
      ]
    },
    "cluster_instance": {
      "create": [
        { "service": "Neptune", "action": "CreateDBInstance" },
        { "service": "Neptune", "action": "DescribeDBInstances" },
        { "service": "Neptune", "action": "DescribeDBClusters" }
      ],
      "read": [
        { "service": "Neptune", "action": "DescribeDBInstances" },
        { "service": "Neptune", "action": "DescribeDBClusters" }
      ],
      "update": [
        { "service": "Neptune", "action": "ModifyDBInstance" },
        { "service": "Neptune", "action": "DescribeDBInstances" },
        { "service": "Neptune", "action": "DescribeDBClusters" }
      ],
      "delete": [
        { "service": "Neptune", "action": "DeleteDBInstance" },
        { "service": "Neptune", "action": "DescribeDBInstances" }
      ]
    },
    "cluster_parameter_group": {
      "create": [
        { "service": "Neptune", "action": "CreateDBClusterParameterGroup" },
        { "service": "Neptune", "action": "ModifyDBClusterParameterGroup" },
        { "service": "Neptune", "action": "DescribeDBClusterParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBClusterParameters" }
      ],
      "read": [
        { "service": "Neptune", "action": "DescribeDBClusterParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBClusterParameters" }
      ],
      "update": [
        { "service": "Neptune", "action": "ModifyDBClusterParameterGroup" },
        { "service": "Neptune", "action": "DescribeDBClusterParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBClusterParameters" }
      ],
      "delete": [{ "service": "Neptune", "action": "DeleteDBClusterParameterGroup" }]
    },
    "cluster_snapshot": {
      "create": [
        { "service": "Neptune", "action": "CreateDBClusterSnapshot" },
        { "service": "Neptune", "action": "DescribeDBClusterSnapshots" }
      ],
      "read": [{ "service": "Neptune", "action": "DescribeDBClusterSnapshots" }],
      "update": [],
      "delete": [{ "service": "Neptune", "action": "DeleteDBClusterSnapshot" }]
    },
    "event_subscription": {
      "create": [
        { "service": "Neptune", "action": "CreateEventSubscription" },
        { "service": "Neptune", "action": "DescribeEventSubscriptions" }
      ],
      "read": [{ "service": "Neptune", "action": "DescribeEventSubscriptions" }],
      "update": [
        { "service": "Neptune", "action": "ModifyEventSubscription" },
        { "service": "Neptune", "action": "DescribeEventSubscriptions" },
        { "service": "Neptune", "action": "RemoveSourceIdentifierFromSubscription" },
        { "service": "Neptune", "action": "AddSourceIdentifierToSubscription" }
      ],
      "delete": [
        { "service": "Neptune", "action": "DeleteEventSubscription" },
        { "service": "Neptune", "action": "DescribeEventSubscriptions" }
      ]
    },
    "global_cluster": {
      "create": [
        { "service": "Neptune", "action": "CreateGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" }
      ],
      "read": [{ "service": "Neptune", "action": "DescribeGlobalClusters" }],
      "update": [
        { "service": "Neptune", "action": "ModifyGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" },
        { "service": "Neptune", "action": "DescribeDBClusters" },
        { "service": "Neptune", "action": "ModifyDBCluster" },
        { "service": "Neptune", "action": "DescribeDBClusters" }
      ],
      "delete": [
        { "service": "Neptune", "action": "RemoveFromGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" },
        { "service": "Neptune", "action": "DeleteGlobalCluster" },
        { "service": "Neptune", "action": "DescribeGlobalClusters" }
      ]
    },
    "parameter_group": {
      "create": [
        { "service": "Neptune", "action": "CreateDBParameterGroup" },
        { "service": "Neptune", "action": "ResetDBParameterGroup" },
        { "service": "Neptune", "action": "ResetDBParameterGroup" },
        { "service": "Neptune", "action": "ModifyDBParameterGroup" },
        { "service": "Neptune", "action": "DescribeDBParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBParameters" }
      ],
      "read": [
        { "service": "Neptune", "action": "DescribeDBParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBParameters" }
      ],
      "update": [
        { "service": "Neptune", "action": "ResetDBParameterGroup" },
        { "service": "Neptune", "action": "ResetDBParameterGroup" },
        { "service": "Neptune", "action": "ModifyDBParameterGroup" },
        { "service": "Neptune", "action": "DescribeDBParameterGroups" },
        { "service": "Neptune", "action": "DescribeDBParameters" }
      ],
      "delete": [
        { "service": "Neptune", "action": "DeleteDBParameterGroup" },
        { "service": "Neptune", "action": "DeleteDBParameterGroup" }
      ]
    },
    "subnet_group": {
      "create": [
        { "service": "Neptune", "action": "CreateDBSubnetGroup" },
        { "service": "Neptune", "action": "DescribeDBSubnetGroups" }
      ],
      "read": [{ "service": "Neptune", "action": "DescribeDBSubnetGroups" }],
      "update": [
        { "service": "Neptune", "action": "ModifyDBSubnetGroup" },
        { "service": "Neptune", "action": "DescribeDBSubnetGroups" }
      ],
      "delete": [{ "service": "Neptune", "action": "DeleteDBSubnetGroup" }]
    }
  },
  "networkfirewall": {
    "firewall": {
      "create": [
        { "service": "NetworkFirewall", "action": "CreateFirewall" },
        { "service": "NetworkFirewall", "action": "DescribeFirewall" }
      ],
      "read": [{ "service": "NetworkFirewall", "action": "DescribeFirewall" }],
      "update": [
        { "service": "NetworkFirewall", "action": "UpdateFirewallDeleteProtection" },
        { "service": "NetworkFirewall", "action": "UpdateFirewallDescription" },
        { "service": "NetworkFirewall", "action": "UpdateFirewallEncryptionConfiguration" },
        { "service": "NetworkFirewall", "action": "UpdateFirewallPolicyChangeProtection" },
        { "service": "NetworkFirewall", "action": "AssociateFirewallPolicy" },
        { "service": "NetworkFirewall", "action": "UpdateSubnetChangeProtection" },
        { "service": "NetworkFirewall", "action": "AssociateSubnets" },
        { "service": "NetworkFirewall", "action": "DescribeFirewall" },
        { "service": "NetworkFirewall", "action": "DisassociateSubnets" }
      ],
      "delete": [
        { "service": "NetworkFirewall", "action": "DeleteFirewall" },
        { "service": "NetworkFirewall", "action": "DescribeFirewall" }
      ]
    },
    "firewall_policy": {
      "create": [
        { "service": "NetworkFirewall", "action": "CreateFirewallPolicy" },
        { "service": "NetworkFirewall", "action": "DescribeFirewallPolicy" }
      ],
      "read": [{ "service": "NetworkFirewall", "action": "DescribeFirewallPolicy" }],
      "update": [
        { "service": "NetworkFirewall", "action": "UpdateFirewallPolicy" },
        { "service": "NetworkFirewall", "action": "DescribeFirewallPolicy" }
      ],
      "delete": [
        { "service": "NetworkFirewall", "action": "DeleteFirewallPolicy" },
        { "service": "NetworkFirewall", "action": "DescribeFirewallPolicy" }
      ]
    },
    "logging_configuration": {
      "create": [
        { "service": "NetworkFirewall", "action": "UpdateLoggingConfiguration" },
        { "service": "NetworkFirewall", "action": "DescribeLoggingConfiguration" }
      ],
      "read": [{ "service": "NetworkFirewall", "action": "DescribeLoggingConfiguration" }],
      "update": [
        { "service": "NetworkFirewall", "action": "UpdateLoggingConfiguration" },
        { "service": "NetworkFirewall", "action": "UpdateLoggingConfiguration" },
        { "service": "NetworkFirewall", "action": "DescribeLoggingConfiguration" }
      ],
      "delete": [
        { "service": "NetworkFirewall", "action": "DescribeLoggingConfiguration" },
        { "service": "NetworkFirewall", "action": "UpdateLoggingConfiguration" }
      ]
    },
    "resource_policy": {
      "create": [
        { "service": "NetworkFirewall", "action": "PutResourcePolicy" },
        { "service": "NetworkFirewall", "action": "DescribeResourcePolicy" }
      ],
      "read": [{ "service": "NetworkFirewall", "action": "DescribeResourcePolicy" }],
      "update": [],
      "delete": [{ "service": "NetworkFirewall", "action": "DeleteResourcePolicy" }]
    },
    "rule_group": {
      "create": [
        { "service": "NetworkFirewall", "action": "CreateRuleGroup" },
        { "service": "NetworkFirewall", "action": "DescribeRuleGroup" }
      ],
      "read": [{ "service": "NetworkFirewall", "action": "DescribeRuleGroup" }],
      "update": [
        { "service": "NetworkFirewall", "action": "UpdateRuleGroup" },
        { "service": "NetworkFirewall", "action": "DescribeRuleGroup" }
      ],
      "delete": [
        { "service": "NetworkFirewall", "action": "DeleteRuleGroup" },
        { "service": "NetworkFirewall", "action": "DescribeRuleGroup" }
      ]
    }
  },
  "networkmanager": {
    "attachment_accepter": {
      "create": [
        { "service": "NetworkManager", "action": "GetVpcAttachment" },
        { "service": "NetworkManager", "action": "GetSiteToSiteVpnAttachment" },
        { "service": "NetworkManager", "action": "GetConnectAttachment" },
        { "service": "NetworkManager", "action": "AcceptAttachment" }
      ],
      "read": [
        { "service": "NetworkManager", "action": "GetVpcAttachment" },
        { "service": "NetworkManager", "action": "GetSiteToSiteVpnAttachment" },
        { "service": "NetworkManager", "action": "GetConnectAttachment" }
      ],
      "update": [],
      "delete": []
    },
    "connect_attachment": {
      "create": [
        { "service": "NetworkManager", "action": "CreateConnectAttachment" },
        { "service": "NetworkManager", "action": "GetConnectAttachment" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetConnectAttachment" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "GetConnectAttachment" },
        { "service": "NetworkManager", "action": "DeleteAttachment" }
      ]
    },
    "connect_peer": {
      "create": [
        { "service": "NetworkManager", "action": "CreateConnectPeer" },
        { "service": "NetworkManager", "action": "GetConnectPeer" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetConnectPeer" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteConnectPeer" },
        { "service": "NetworkManager", "action": "GetConnectPeer" }
      ]
    },
    "connection": {
      "create": [
        { "service": "NetworkManager", "action": "CreateConnection" },
        { "service": "NetworkManager", "action": "GetConnections" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetConnections" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateConnection" },
        { "service": "NetworkManager", "action": "GetConnections" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteConnection" },
        { "service": "NetworkManager", "action": "GetConnections" }
      ]
    },
    "core_network": {
      "create": [
        { "service": "NetworkManager", "action": "CreateCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetworkPolicy" }
      ],
      "read": [
        { "service": "NetworkManager", "action": "GetCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetworkPolicy" }
      ],
      "update": [
        { "service": "NetworkManager", "action": "UpdateCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetwork" },
        { "service": "NetworkManager", "action": "PutCoreNetworkPolicy" },
        { "service": "NetworkManager", "action": "ExecuteCoreNetworkChangeSet" },
        { "service": "NetworkManager", "action": "GetCoreNetworkPolicy" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetwork" }
      ]
    },
    "core_network_policy_attachment": {
      "create": [],
      "read": [
        { "service": "NetworkManager", "action": "GetCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetworkPolicy" }
      ],
      "update": [
        { "service": "NetworkManager", "action": "PutCoreNetworkPolicy" },
        { "service": "NetworkManager", "action": "ExecuteCoreNetworkChangeSet" },
        { "service": "NetworkManager", "action": "GetCoreNetwork" },
        { "service": "NetworkManager", "action": "GetCoreNetworkPolicy" }
      ],
      "delete": []
    },
    "customer_gateway_association": {
      "create": [
        { "service": "NetworkManager", "action": "AssociateCustomerGateway" },
        { "service": "NetworkManager", "action": "GetCustomerGatewayAssociations" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetCustomerGatewayAssociations" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DisassociateCustomerGateway" },
        { "service": "NetworkManager", "action": "GetCustomerGatewayAssociations" }
      ]
    },
    "device": {
      "create": [
        { "service": "NetworkManager", "action": "CreateDevice" },
        { "service": "NetworkManager", "action": "GetDevices" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetDevices" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateDevice" },
        { "service": "NetworkManager", "action": "GetDevices" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteDevice" },
        { "service": "NetworkManager", "action": "GetDevices" }
      ]
    },
    "global_network": {
      "create": [
        { "service": "NetworkManager", "action": "CreateGlobalNetwork" },
        { "service": "NetworkManager", "action": "DescribeGlobalNetworks" }
      ],
      "read": [{ "service": "NetworkManager", "action": "DescribeGlobalNetworks" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateGlobalNetwork" },
        { "service": "NetworkManager", "action": "DescribeGlobalNetworks" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "GetCustomerGatewayAssociations" },
        { "service": "NetworkManager", "action": "DisassociateCustomerGateway" },
        { "service": "NetworkManager", "action": "GetTransitGatewayConnectPeerAssociations" },
        { "service": "NetworkManager", "action": "DisassociateTransitGatewayConnectPeer" },
        { "service": "NetworkManager", "action": "GetTransitGatewayRegistrations" },
        { "service": "NetworkManager", "action": "DeregisterTransitGateway" },
        { "service": "NetworkManager", "action": "DeleteGlobalNetwork" },
        { "service": "NetworkManager", "action": "DescribeGlobalNetworks" }
      ]
    },
    "link": {
      "create": [
        { "service": "NetworkManager", "action": "CreateLink" },
        { "service": "NetworkManager", "action": "GetLinks" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetLinks" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateLink" },
        { "service": "NetworkManager", "action": "GetLinks" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteLink" },
        { "service": "NetworkManager", "action": "GetLinks" }
      ]
    },
    "link_association": {
      "create": [
        { "service": "NetworkManager", "action": "AssociateLink" },
        { "service": "NetworkManager", "action": "GetLinkAssociations" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetLinkAssociations" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DisassociateLink" },
        { "service": "NetworkManager", "action": "GetLinkAssociations" }
      ]
    },
    "site": {
      "create": [
        { "service": "NetworkManager", "action": "CreateSite" },
        { "service": "NetworkManager", "action": "GetSites" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetSites" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateSite" },
        { "service": "NetworkManager", "action": "GetSites" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteSite" },
        { "service": "NetworkManager", "action": "GetSites" }
      ]
    },
    "site_to_site_vpn_attachment": {
      "create": [
        { "service": "NetworkManager", "action": "CreateSiteToSiteVpnAttachment" },
        { "service": "NetworkManager", "action": "GetSiteToSiteVpnAttachment" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetSiteToSiteVpnAttachment" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "GetSiteToSiteVpnAttachment" },
        { "service": "NetworkManager", "action": "DeleteAttachment" }
      ]
    },
    "transit_gateway_connect_peer_association": {
      "create": [
        { "service": "NetworkManager", "action": "AssociateTransitGatewayConnectPeer" },
        { "service": "NetworkManager", "action": "GetTransitGatewayConnectPeerAssociations" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetTransitGatewayConnectPeerAssociations" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DisassociateTransitGatewayConnectPeer" },
        { "service": "NetworkManager", "action": "GetTransitGatewayConnectPeerAssociations" }
      ]
    },
    "transit_gateway_peering": {
      "create": [
        { "service": "NetworkManager", "action": "CreateTransitGatewayPeering" },
        { "service": "NetworkManager", "action": "GetTransitGatewayPeering" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetTransitGatewayPeering" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DeletePeering" },
        { "service": "NetworkManager", "action": "GetTransitGatewayPeering" }
      ]
    },
    "transit_gateway_registration": {
      "create": [
        { "service": "NetworkManager", "action": "RegisterTransitGateway" },
        { "service": "NetworkManager", "action": "GetTransitGatewayRegistrations" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetTransitGatewayRegistrations" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DeregisterTransitGateway" },
        { "service": "NetworkManager", "action": "GetTransitGatewayRegistrations" }
      ]
    },
    "transit_gateway_route_table_attachment": {
      "create": [
        { "service": "NetworkManager", "action": "CreateTransitGatewayRouteTableAttachment" },
        { "service": "NetworkManager", "action": "GetTransitGatewayRouteTableAttachment" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetTransitGatewayRouteTableAttachment" }],
      "update": [],
      "delete": [
        { "service": "NetworkManager", "action": "DeleteAttachment" },
        { "service": "NetworkManager", "action": "GetTransitGatewayRouteTableAttachment" }
      ]
    },
    "vpc_attachment": {
      "create": [
        { "service": "NetworkManager", "action": "CreateVpcAttachment" },
        { "service": "NetworkManager", "action": "GetVpcAttachment" }
      ],
      "read": [{ "service": "NetworkManager", "action": "GetVpcAttachment" }],
      "update": [
        { "service": "NetworkManager", "action": "UpdateVpcAttachment" },
        { "service": "NetworkManager", "action": "GetVpcAttachment" }
      ],
      "delete": [
        { "service": "NetworkManager", "action": "GetVpcAttachment" },
        { "service": "NetworkManager", "action": "DeleteAttachment" }
      ]
    }
  },
  "oam": {
    "link": {
      "create": [
        { "service": "ObservabilityAccessManagerClient", "action": "CreateLink" },
        { "service": "ObservabilityAccessManagerClient", "action": "GetLink" }
      ],
      "read": [{ "service": "ObservabilityAccessManagerClient", "action": "GetLink" }],
      "update": [
        { "service": "ObservabilityAccessManagerClient", "action": "UpdateLink" },
        { "service": "ObservabilityAccessManagerClient", "action": "GetLink" }
      ],
      "delete": [{ "service": "ObservabilityAccessManagerClient", "action": "DeleteLink" }]
    },
    "sink": {
      "create": [
        { "service": "ObservabilityAccessManagerClient", "action": "CreateSink" },
        { "service": "ObservabilityAccessManagerClient", "action": "GetSink" }
      ],
      "read": [{ "service": "ObservabilityAccessManagerClient", "action": "GetSink" }],
      "update": [],
      "delete": [{ "service": "ObservabilityAccessManagerClient", "action": "DeleteSink" }]
    },
    "sink_policy": {
      "create": [
        { "service": "ObservabilityAccessManagerClient", "action": "PutSinkPolicy" },
        { "service": "ObservabilityAccessManagerClient", "action": "GetSinkPolicy" }
      ],
      "read": [{ "service": "ObservabilityAccessManagerClient", "action": "GetSinkPolicy" }],
      "update": [],
      "delete": []
    }
  },
  "opensearch": {
    "domain": {
      "create": [
        { "service": "OpenSearch", "action": "DescribeDomain" },
        { "service": "OpenSearch", "action": "CreateDomain" },
        { "service": "OpenSearch", "action": "CreateDomain" },
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomainConfig" }
      ],
      "read": [
        { "service": "OpenSearch", "action": "DescribeDomain" },
        { "service": "OpenSearch", "action": "DescribeDomainConfig" }
      ],
      "update": [
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomain" },
        { "service": "OpenSearch", "action": "UpgradeDomain" },
        { "service": "OpenSearch", "action": "GetUpgradeStatus" },
        { "service": "OpenSearch", "action": "DescribeDomainConfig" }
      ],
      "delete": [
        { "service": "OpenSearch", "action": "DeleteDomain" },
        { "service": "OpenSearch", "action": "DescribeDomain" },
        { "service": "OpenSearch", "action": "DescribeDomainConfig" }
      ]
    },
    "domain_policy": {
      "create": [
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomain" }
      ],
      "read": [{ "service": "OpenSearch", "action": "DescribeDomain" }],
      "update": [],
      "delete": [
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomain" }
      ]
    },
    "domain_saml_options": {
      "create": [
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomain" }
      ],
      "read": [{ "service": "OpenSearch", "action": "DescribeDomain" }],
      "update": [],
      "delete": [
        { "service": "OpenSearch", "action": "UpdateDomainConfig" },
        { "service": "OpenSearch", "action": "DescribeDomain" }
      ]
    },
    "inbound_connection_accepter": {
      "create": [
        { "service": "OpenSearch", "action": "AcceptInboundConnection" },
        { "service": "OpenSearch", "action": "DescribeInboundConnections" }
      ],
      "read": [{ "service": "OpenSearch", "action": "DescribeInboundConnections" }],
      "update": [],
      "delete": [
        { "service": "OpenSearch", "action": "DeleteInboundConnection" },
        { "service": "OpenSearch", "action": "DescribeInboundConnections" }
      ]
    },
    "outbound_connection": {
      "create": [
        { "service": "OpenSearch", "action": "CreateOutboundConnection" },
        { "service": "OpenSearch", "action": "DescribeOutboundConnections" }
      ],
      "read": [{ "service": "OpenSearch", "action": "DescribeOutboundConnections" }],
      "update": [],
      "delete": [
        { "service": "OpenSearch", "action": "DeleteOutboundConnection" },
        { "service": "OpenSearch", "action": "DescribeOutboundConnections" }
      ]
    }
  },
  "opsworks": {
    "application": {
      "create": [
        { "service": "OpsWorks", "action": "CreateApp" },
        { "service": "OpsWorks", "action": "DescribeApps" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribeApps" }],
      "update": [
        { "service": "OpsWorks", "action": "UpdateApp" },
        { "service": "OpsWorks", "action": "DescribeApps" }
      ],
      "delete": [{ "service": "OpsWorks", "action": "DeleteApp" }]
    },
    "custom_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "ecs_cluster_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "ganglia_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "haproxy_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "instance": {
      "create": [
        { "service": "OpsWorks", "action": "CreateInstance" },
        { "service": "OpsWorks", "action": "StartInstance" },
        { "service": "OpsWorks", "action": "DescribeInstances" },
        { "service": "OpsWorks", "action": "DescribeInstances" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribeInstances" }],
      "update": [
        { "service": "OpsWorks", "action": "UpdateInstance" },
        { "service": "OpsWorks", "action": "StartInstance" },
        { "service": "OpsWorks", "action": "DescribeInstances" },
        { "service": "OpsWorks", "action": "StopInstance" },
        { "service": "OpsWorks", "action": "DescribeInstances" }
      ],
      "delete": [
        { "service": "OpsWorks", "action": "StopInstance" },
        { "service": "OpsWorks", "action": "DescribeInstances" },
        { "service": "OpsWorks", "action": "DeleteInstance" }
      ]
    },
    "java_app_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "memcached_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "mysql_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "nodejs_app_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "permission": {
      "create": [
        { "service": "OpsWorks", "action": "SetPermission" },
        { "service": "OpsWorks", "action": "DescribePermissions" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribePermissions" }],
      "update": [],
      "delete": []
    },
    "php_app_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "rails_app_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "rds_db_instance": {
      "create": [
        { "service": "OpsWorks", "action": "RegisterRdsDbInstance" },
        { "service": "OpsWorks", "action": "DescribeRdsDbInstances" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribeRdsDbInstances" }],
      "update": [
        { "service": "OpsWorks", "action": "UpdateRdsDbInstance" },
        { "service": "OpsWorks", "action": "DescribeRdsDbInstances" }
      ],
      "delete": [{ "service": "OpsWorks", "action": "DeregisterRdsDbInstance" }]
    },
    "stack": {
      "create": [
        { "service": "OpsWorks", "action": "CreateStack" },
        { "service": "OpsWorks", "action": "DescribeStacks" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribeStacks" }],
      "update": [
        { "service": "OpsWorks", "action": "UpdateStack" },
        { "service": "OpsWorks", "action": "DescribeStacks" }
      ],
      "delete": [{ "service": "OpsWorks", "action": "DeleteStack" }]
    },
    "static_web_layer": { "create": [], "read": [], "update": [], "delete": [] },
    "user_profile": {
      "create": [
        { "service": "OpsWorks", "action": "CreateUserProfile" },
        { "service": "OpsWorks", "action": "UpdateUserProfile" },
        { "service": "OpsWorks", "action": "DescribeUserProfiles" }
      ],
      "read": [{ "service": "OpsWorks", "action": "DescribeUserProfiles" }],
      "update": [
        { "service": "OpsWorks", "action": "UpdateUserProfile" },
        { "service": "OpsWorks", "action": "DescribeUserProfiles" }
      ],
      "delete": [{ "service": "OpsWorks", "action": "DeleteUserProfile" }]
    }
  },
  "organizations": {
    "account": {
      "create": [
        { "service": "Organizations", "action": "CreateGovCloudAccount" },
        { "service": "Organizations", "action": "CreateAccount" },
        { "service": "Organizations", "action": "DescribeCreateAccountStatus" },
        { "service": "Organizations", "action": "ListParents" },
        { "service": "Organizations", "action": "MoveAccount" },
        { "service": "Organizations", "action": "DescribeAccount" }
      ],
      "read": [
        { "service": "Organizations", "action": "DescribeAccount" },
        { "service": "Organizations", "action": "ListParents" }
      ],
      "update": [
        { "service": "Organizations", "action": "MoveAccount" },
        { "service": "Organizations", "action": "DescribeAccount" },
        { "service": "Organizations", "action": "ListParents" }
      ],
      "delete": [
        { "service": "Organizations", "action": "CloseAccount" },
        { "service": "Organizations", "action": "RemoveAccountFromOrganization" },
        { "service": "Organizations", "action": "DescribeAccount" }
      ]
    },
    "delegated_administrator": {
      "create": [
        { "service": "Organizations", "action": "RegisterDelegatedAdministrator" },
        { "service": "Organizations", "action": "ListDelegatedAdministrators" }
      ],
      "read": [{ "service": "Organizations", "action": "ListDelegatedAdministrators" }],
      "update": [],
      "delete": [{ "service": "Organizations", "action": "DeregisterDelegatedAdministrator" }]
    },
    "organization": {
      "create": [
        { "service": "Organizations", "action": "CreateOrganization" },
        { "service": "Organizations", "action": "EnableAWSServiceAccess" },
        { "service": "Organizations", "action": "ListRoots" },
        { "service": "Organizations", "action": "EnablePolicyType" },
        { "service": "Organizations", "action": "DescribeOrganization" },
        { "service": "Organizations", "action": "ListAccounts" },
        { "service": "Organizations", "action": "ListRoots" },
        { "service": "Organizations", "action": "ListAWSServiceAccessForOrganization" }
      ],
      "read": [
        { "service": "Organizations", "action": "DescribeOrganization" },
        { "service": "Organizations", "action": "ListAccounts" },
        { "service": "Organizations", "action": "ListRoots" },
        { "service": "Organizations", "action": "ListAWSServiceAccessForOrganization" }
      ],
      "update": [
        { "service": "Organizations", "action": "DisableAWSServiceAccess" },
        { "service": "Organizations", "action": "EnableAWSServiceAccess" },
        { "service": "Organizations", "action": "DisablePolicyType" },
        { "service": "Organizations", "action": "ListRoots" },
        { "service": "Organizations", "action": "EnablePolicyType" },
        { "service": "Organizations", "action": "EnableAllFeatures" },
        { "service": "Organizations", "action": "DescribeOrganization" },
        { "service": "Organizations", "action": "ListAccounts" },
        { "service": "Organizations", "action": "ListRoots" },
        { "service": "Organizations", "action": "ListAWSServiceAccessForOrganization" }
      ],
      "delete": [{ "service": "Organizations", "action": "DeleteOrganization" }]
    },
    "organizational_unit": {
      "create": [
        { "service": "Organizations", "action": "CreateOrganizationalUnit" },
        { "service": "Organizations", "action": "CreateOrganizationalUnit" },
        { "service": "Organizations", "action": "DescribeOrganizationalUnit" },
        { "service": "Organizations", "action": "ListParents" },
        { "service": "Organizations", "action": "ListAccountsForParent" }
      ],
      "read": [
        { "service": "Organizations", "action": "DescribeOrganizationalUnit" },
        { "service": "Organizations", "action": "ListParents" },
        { "service": "Organizations", "action": "ListAccountsForParent" }
      ],
      "update": [{ "service": "Organizations", "action": "UpdateOrganizationalUnit" }],
      "delete": [{ "service": "Organizations", "action": "DeleteOrganizationalUnit" }]
    },
    "policy": {
      "create": [
        { "service": "Organizations", "action": "CreatePolicy" },
        { "service": "Organizations", "action": "CreatePolicy" },
        { "service": "Organizations", "action": "DescribePolicy" }
      ],
      "read": [{ "service": "Organizations", "action": "DescribePolicy" }],
      "update": [
        { "service": "Organizations", "action": "UpdatePolicy" },
        { "service": "Organizations", "action": "DescribePolicy" }
      ],
      "delete": [{ "service": "Organizations", "action": "DeletePolicy" }]
    },
    "policy_attachment": {
      "create": [
        { "service": "Organizations", "action": "AttachPolicy" },
        { "service": "Organizations", "action": "ListTargetsForPolicy" }
      ],
      "read": [{ "service": "Organizations", "action": "ListTargetsForPolicy" }],
      "update": [],
      "delete": [{ "service": "Organizations", "action": "DetachPolicy" }]
    }
  },
  "pinpoint": {
    "adm_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateAdmChannel" },
        { "service": "Pinpoint", "action": "GetAdmChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetAdmChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteAdmChannel" }]
    },
    "apns_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateApnsChannel" },
        { "service": "Pinpoint", "action": "GetApnsChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetApnsChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteApnsChannel" }]
    },
    "apns_sandbox_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateApnsSandboxChannel" },
        { "service": "Pinpoint", "action": "GetApnsSandboxChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetApnsSandboxChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteApnsSandboxChannel" }]
    },
    "apns_voip_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateApnsVoipChannel" },
        { "service": "Pinpoint", "action": "GetApnsVoipChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetApnsVoipChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteApnsVoipChannel" }]
    },
    "apns_voip_sandbox_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateApnsVoipSandboxChannel" },
        { "service": "Pinpoint", "action": "GetApnsVoipSandboxChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetApnsVoipSandboxChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteApnsVoipSandboxChannel" }]
    },
    "app": {
      "create": [
        { "service": "Pinpoint", "action": "CreateApp" },
        { "service": "Pinpoint", "action": "UpdateApplicationSettings" },
        { "service": "Pinpoint", "action": "GetApp" },
        { "service": "Pinpoint", "action": "GetApplicationSettings" }
      ],
      "read": [
        { "service": "Pinpoint", "action": "GetApp" },
        { "service": "Pinpoint", "action": "GetApplicationSettings" }
      ],
      "update": [
        { "service": "Pinpoint", "action": "UpdateApplicationSettings" },
        { "service": "Pinpoint", "action": "GetApp" },
        { "service": "Pinpoint", "action": "GetApplicationSettings" }
      ],
      "delete": [{ "service": "Pinpoint", "action": "DeleteApp" }]
    },
    "baidu_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateBaiduChannel" },
        { "service": "Pinpoint", "action": "GetBaiduChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetBaiduChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteBaiduChannel" }]
    },
    "email_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateEmailChannel" },
        { "service": "Pinpoint", "action": "GetEmailChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetEmailChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteEmailChannel" }]
    },
    "event_stream": {
      "create": [
        { "service": "Pinpoint", "action": "PutEventStream" },
        { "service": "Pinpoint", "action": "PutEventStream" },
        { "service": "Pinpoint", "action": "GetEventStream" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetEventStream" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteEventStream" }]
    },
    "gcm_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateGcmChannel" },
        { "service": "Pinpoint", "action": "GetGcmChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetGcmChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteGcmChannel" }]
    },
    "sms_channel": {
      "create": [
        { "service": "Pinpoint", "action": "UpdateSmsChannel" },
        { "service": "Pinpoint", "action": "GetSmsChannel" }
      ],
      "read": [{ "service": "Pinpoint", "action": "GetSmsChannel" }],
      "update": [],
      "delete": [{ "service": "Pinpoint", "action": "DeleteSmsChannel" }]
    }
  },
  "pipes": {
    "pipe": {
      "create": [
        { "service": "PipesClient", "action": "CreatePipe" },
        { "service": "PipesClient", "action": "DescribePipe" }
      ],
      "read": [{ "service": "PipesClient", "action": "DescribePipe" }],
      "update": [
        { "service": "PipesClient", "action": "UpdatePipe" },
        { "service": "PipesClient", "action": "DescribePipe" }
      ],
      "delete": [
        { "service": "PipesClient", "action": "DeletePipe" },
        { "service": "PipesClient", "action": "DescribePipe" }
      ]
    }
  },
  "qldb": {
    "ledger": {
      "create": [
        { "service": "QLDB", "action": "CreateLedger" },
        { "service": "QLDB", "action": "DescribeLedger" }
      ],
      "read": [{ "service": "QLDB", "action": "DescribeLedger" }],
      "update": [
        { "service": "QLDB", "action": "UpdateLedgerPermissionsMode" },
        { "service": "QLDB", "action": "UpdateLedger" },
        { "service": "QLDB", "action": "DescribeLedger" }
      ],
      "delete": [
        { "service": "QLDB", "action": "DeleteLedger" },
        { "service": "QLDB", "action": "DescribeLedger" }
      ]
    },
    "stream": {
      "create": [
        { "service": "QLDB", "action": "StreamJournalToKinesis" },
        { "service": "QLDB", "action": "DescribeJournalKinesisStream" }
      ],
      "read": [{ "service": "QLDB", "action": "DescribeJournalKinesisStream" }],
      "update": [],
      "delete": [
        { "service": "QLDB", "action": "CancelJournalKinesisStream" },
        { "service": "QLDB", "action": "DescribeJournalKinesisStream" }
      ]
    }
  },
  "quicksight": {
    "account_subscription": {
      "create": [
        { "service": "QuickSight", "action": "CreateAccountSubscription" },
        { "service": "QuickSight", "action": "DescribeAccountSubscription" }
      ],
      "read": [{ "service": "QuickSight", "action": "DescribeAccountSubscription" }],
      "update": [],
      "delete": [
        { "service": "QuickSight", "action": "DeleteAccountSubscription" },
        { "service": "QuickSight", "action": "DescribeAccountSubscription" }
      ]
    },
    "data_set": {
      "create": [
        { "service": "QuickSight", "action": "CreateDataSet" },
        { "service": "QuickSight", "action": "DescribeDataSet" },
        { "service": "QuickSight", "action": "DescribeDataSetPermissions" }
      ],
      "read": [
        { "service": "QuickSight", "action": "DescribeDataSet" },
        { "service": "QuickSight", "action": "DescribeDataSetPermissions" }
      ],
      "update": [
        { "service": "QuickSight", "action": "UpdateDataSet" },
        { "service": "QuickSight", "action": "UpdateDataSetPermissions" },
        { "service": "QuickSight", "action": "DescribeDataSet" },
        { "service": "QuickSight", "action": "DescribeDataSetPermissions" }
      ],
      "delete": [{ "service": "QuickSight", "action": "DeleteDataSet" }]
    },
    "data_source": {
      "create": [
        { "service": "QuickSight", "action": "CreateDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSourcePermissions" }
      ],
      "read": [
        { "service": "QuickSight", "action": "DescribeDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSourcePermissions" }
      ],
      "update": [
        { "service": "QuickSight", "action": "UpdateDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSource" },
        { "service": "QuickSight", "action": "UpdateDataSourcePermissions" },
        { "service": "QuickSight", "action": "DescribeDataSource" },
        { "service": "QuickSight", "action": "DescribeDataSourcePermissions" }
      ],
      "delete": [{ "service": "QuickSight", "action": "DeleteDataSource" }]
    },
    "folder": {
      "create": [
        { "service": "QuickSight", "action": "CreateFolder" },
        { "service": "QuickSight", "action": "DescribeFolder" },
        { "service": "QuickSight", "action": "DescribeFolderPermissions" }
      ],
      "read": [
        { "service": "QuickSight", "action": "DescribeFolder" },
        { "service": "QuickSight", "action": "DescribeFolderPermissions" }
      ],
      "update": [
        { "service": "QuickSight", "action": "UpdateFolder" },
        { "service": "QuickSight", "action": "UpdateFolderPermissions" },
        { "service": "QuickSight", "action": "DescribeFolder" },
        { "service": "QuickSight", "action": "DescribeFolderPermissions" }
      ],
      "delete": [{ "service": "QuickSight", "action": "DeleteFolder" }]
    },
    "group": {
      "create": [
        { "service": "QuickSight", "action": "CreateGroup" },
        { "service": "QuickSight", "action": "DescribeGroup" }
      ],
      "read": [{ "service": "QuickSight", "action": "DescribeGroup" }],
      "update": [
        { "service": "QuickSight", "action": "UpdateGroup" },
        { "service": "QuickSight", "action": "DescribeGroup" }
      ],
      "delete": [{ "service": "QuickSight", "action": "DeleteGroup" }]
    },
    "group_membership": {
      "create": [
        { "service": "QuickSight", "action": "CreateGroupMembership" },
        { "service": "QuickSight", "action": "ListGroupMemberships" }
      ],
      "read": [{ "service": "QuickSight", "action": "ListGroupMemberships" }],
      "update": [],
      "delete": [{ "service": "QuickSight", "action": "DeleteGroupMembership" }]
    },
    "user": {
      "create": [
        { "service": "QuickSight", "action": "RegisterUser" },
        { "service": "QuickSight", "action": "DescribeUser" }
      ],
      "read": [{ "service": "QuickSight", "action": "DescribeUser" }],
      "update": [
        { "service": "QuickSight", "action": "UpdateUser" },
        { "service": "QuickSight", "action": "DescribeUser" }
      ],
      "delete": [{ "service": "QuickSight", "action": "DeleteUser" }]
    }
  },
  "ram": {
    "principal_association": {
      "create": [
        { "service": "RAM", "action": "AssociateResourceShare" },
        { "service": "RAM", "action": "GetResourceShareAssociations" }
      ],
      "read": [{ "service": "RAM", "action": "GetResourceShareAssociations" }],
      "update": [],
      "delete": [
        { "service": "RAM", "action": "DisassociateResourceShare" },
        { "service": "RAM", "action": "GetResourceShareAssociations" }
      ]
    },
    "resource_association": {
      "create": [
        { "service": "RAM", "action": "AssociateResourceShare" },
        { "service": "RAM", "action": "GetResourceShareAssociations" }
      ],
      "read": [{ "service": "RAM", "action": "GetResourceShareAssociations" }],
      "update": [],
      "delete": [
        { "service": "RAM", "action": "DisassociateResourceShare" },
        { "service": "RAM", "action": "GetResourceShareAssociations" }
      ]
    },
    "resource_share": {
      "create": [
        { "service": "RAM", "action": "CreateResourceShare" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "ListResourceSharePermissions" }
      ],
      "read": [
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "ListResourceSharePermissions" }
      ],
      "update": [
        { "service": "RAM", "action": "UpdateResourceShare" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "ListResourceSharePermissions" }
      ],
      "delete": [
        { "service": "RAM", "action": "DeleteResourceShare" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" }
      ]
    },
    "resource_share_accepter": {
      "create": [
        { "service": "RAM", "action": "GetResourceShareInvitations" },
        { "service": "RAM", "action": "AcceptResourceShareInvitation" },
        { "service": "RAM", "action": "GetResourceShareInvitations" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "ListResources" }
      ],
      "read": [
        { "service": "RAM", "action": "GetResourceShareInvitations" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "ListResources" }
      ],
      "update": [],
      "delete": [
        { "service": "RAM", "action": "DisassociateResourceShare" },
        { "service": "RAM", "action": "GetResourceShares" },
        { "service": "RAM", "action": "GetResourceShares" }
      ]
    }
  },
  "rbin": {
    "rule": {
      "create": [
        { "service": "RBinClient", "action": "CreateRule" },
        { "service": "RBinClient", "action": "GetRule" }
      ],
      "read": [{ "service": "RBinClient", "action": "GetRule" }],
      "update": [
        { "service": "RBinClient", "action": "UpdateRule" },
        { "service": "RBinClient", "action": "GetRule" }
      ],
      "delete": [
        { "service": "RBinClient", "action": "DeleteRule" },
        { "service": "RBinClient", "action": "GetRule" }
      ]
    }
  },
  "rds": {
    "cluster": {
      "create": [
        { "service": "RDS", "action": "RestoreDBClusterFromSnapshot" },
        { "service": "RDS", "action": "RestoreDBClusterFromS3" },
        { "service": "RDS", "action": "RestoreDBClusterToPointInTime" },
        { "service": "RDS", "action": "CreateDBCluster" },
        { "service": "RDS", "action": "DescribeDBClusters" },
        { "service": "RDS", "action": "AddRoleToDBCluster" },
        { "service": "RDS", "action": "ModifyDBCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" }
      ],
      "read": [
        { "service": "RDS", "action": "DescribeDBClusters" },
        { "service": "RDS", "action": "DescribeGlobalClusters" }
      ],
      "update": [
        { "service": "RDS", "action": "ModifyDBCluster" },
        { "service": "RDS", "action": "DescribeDBClusters" },
        { "service": "RDS", "action": "RemoveFromGlobalCluster" },
        { "service": "RDS", "action": "AddRoleToDBCluster" },
        { "service": "RDS", "action": "RemoveRoleFromDBCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" }
      ],
      "delete": [
        { "service": "RDS", "action": "RemoveFromGlobalCluster" },
        { "service": "RDS", "action": "DeleteDBCluster" },
        { "service": "RDS", "action": "ModifyDBCluster" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ]
    },
    "cluster_activity_stream": {
      "create": [
        { "service": "RDS", "action": "StartActivityStream" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBClusters" }],
      "update": [],
      "delete": [
        { "service": "RDS", "action": "StopActivityStream" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ]
    },
    "cluster_endpoint": {
      "create": [
        { "service": "RDS", "action": "CreateDBClusterEndpoint" },
        { "service": "RDS", "action": "DescribeDBClusterEndpoints" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBClusterEndpoints" }],
      "update": [
        { "service": "RDS", "action": "ModifyDBClusterEndpoint" },
        { "service": "RDS", "action": "DescribeDBClusterEndpoints" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBClusterEndpoint" },
        { "service": "RDS", "action": "DescribeDBClusterEndpoints" }
      ]
    },
    "cluster_instance": {
      "create": [
        { "service": "RDS", "action": "CreateDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" },
        { "service": "RDS", "action": "ModifyDBInstance" },
        { "service": "RDS", "action": "RebootDBInstance" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ],
      "read": [
        { "service": "RDS", "action": "DescribeDBInstances" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ],
      "update": [
        { "service": "RDS", "action": "ModifyDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" }
      ]
    },
    "cluster_parameter_group": {
      "create": [
        { "service": "RDS", "action": "CreateDBClusterParameterGroup" },
        { "service": "RDS", "action": "ModifyDBClusterParameterGroup" },
        { "service": "RDS", "action": "ResetDBClusterParameterGroup" },
        { "service": "RDS", "action": "DescribeDBClusterParameterGroups" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" }
      ],
      "read": [
        { "service": "RDS", "action": "DescribeDBClusterParameterGroups" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" }
      ],
      "update": [
        { "service": "RDS", "action": "ModifyDBClusterParameterGroup" },
        { "service": "RDS", "action": "ResetDBClusterParameterGroup" },
        { "service": "RDS", "action": "DescribeDBClusterParameterGroups" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" },
        { "service": "RDS", "action": "DescribeDBClusterParameters" }
      ],
      "delete": [
        { "service": "RDSClient", "action": "DeleteDBClusterParameterGroup" },
        { "service": "RDSClient", "action": "DeleteDBClusterParameterGroup" }
      ]
    },
    "cluster_role_association": {
      "create": [
        { "service": "RDS", "action": "AddRoleToDBCluster" },
        { "service": "RDS", "action": "AddRoleToDBCluster" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBClusters" }],
      "update": [],
      "delete": [
        { "service": "RDS", "action": "RemoveRoleFromDBCluster" },
        { "service": "RDS", "action": "DescribeDBClusters" }
      ]
    },
    "db_cluster_snapshot": {
      "create": [
        { "service": "RDS", "action": "CreateDBClusterSnapshot" },
        { "service": "RDS", "action": "CreateDBClusterSnapshot" },
        { "service": "RDS", "action": "DescribeDBClusterSnapshots" },
        { "service": "RDS", "action": "DescribeDBClusterSnapshots" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBClusterSnapshots" }],
      "update": [],
      "delete": [{ "service": "RDS", "action": "DeleteDBClusterSnapshot" }]
    },
    "db_event_subscription": {
      "create": [
        { "service": "RDS", "action": "CreateEventSubscription" },
        { "service": "RDS", "action": "DescribeEventSubscriptions" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeEventSubscriptions" }],
      "update": [
        { "service": "RDS", "action": "ModifyEventSubscription" },
        { "service": "RDS", "action": "DescribeEventSubscriptions" },
        { "service": "RDS", "action": "RemoveSourceIdentifierFromSubscription" },
        { "service": "RDS", "action": "AddSourceIdentifierToSubscription" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteEventSubscription" },
        { "service": "RDS", "action": "DescribeEventSubscriptions" }
      ]
    },
    "db_instance": {
      "create": [
        { "service": "RDS", "action": "CreateDBInstanceReadReplica" },
        { "service": "RDS", "action": "RestoreDBInstanceFromS3" },
        { "service": "RDS", "action": "RestoreDBInstanceFromDBSnapshot" },
        { "service": "RDS", "action": "RestoreDBInstanceFromDBSnapshot" },
        { "service": "RDS", "action": "RestoreDBInstanceToPointInTime" },
        { "service": "RDS", "action": "CreateDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" },
        { "service": "RDS", "action": "ModifyDBInstance" },
        { "service": "RDS", "action": "RebootDBInstance" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBInstances" }],
      "update": [
        { "service": "RDSClient", "action": "PromoteReadReplica" },
        { "service": "RDSClient", "action": "DescribeDBInstances" },
        { "service": "RDSClient", "action": "DeleteBlueGreenDeployment" },
        { "service": "RDSClient", "action": "DescribeBlueGreenDeployments" },
        { "service": "RDSClient", "action": "ModifyDBInstance" },
        { "service": "RDSClient", "action": "DeleteDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBInstance" },
        { "service": "RDS", "action": "ModifyDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" },
        { "service": "RDS", "action": "DeleteDBInstance" }
      ]
    },
    "db_instance_automated_backups_replication": {
      "create": [
        { "service": "RDS", "action": "StartDBInstanceAutomatedBackupsReplication" },
        { "service": "RDS", "action": "DescribeDBInstanceAutomatedBackups" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBInstanceAutomatedBackups" }],
      "update": [],
      "delete": [
        { "service": "RDS", "action": "DescribeDBInstanceAutomatedBackups" },
        { "service": "RDS", "action": "StopDBInstanceAutomatedBackupsReplication" }
      ]
    },
    "db_instance_role_association": {
      "create": [
        { "service": "RDS", "action": "AddRoleToDBInstance" },
        { "service": "RDS", "action": "AddRoleToDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBInstances" }],
      "update": [],
      "delete": [
        { "service": "RDS", "action": "RemoveRoleFromDBInstance" },
        { "service": "RDS", "action": "DescribeDBInstances" }
      ]
    },
    "db_option_group": {
      "create": [
        { "service": "RDS", "action": "CreateOptionGroup" },
        { "service": "RDS", "action": "ModifyOptionGroup" },
        { "service": "RDS", "action": "ModifyOptionGroup" },
        { "service": "RDS", "action": "DescribeOptionGroups" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeOptionGroups" }],
      "update": [
        { "service": "RDS", "action": "ModifyOptionGroup" },
        { "service": "RDS", "action": "ModifyOptionGroup" },
        { "service": "RDS", "action": "DescribeOptionGroups" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteOptionGroup" },
        { "service": "RDS", "action": "DeleteOptionGroup" }
      ]
    },
    "db_parameter_group": {
      "create": [
        { "service": "RDS", "action": "CreateDBParameterGroup" },
        { "service": "RDS", "action": "ModifyDBParameterGroup" },
        { "service": "RDS", "action": "ResetDBParameterGroup" },
        { "service": "RDS", "action": "DescribeDBParameterGroups" },
        { "service": "RDS", "action": "DescribeDBParameters" }
      ],
      "read": [
        { "service": "RDS", "action": "DescribeDBParameterGroups" },
        { "service": "RDS", "action": "DescribeDBParameters" }
      ],
      "update": [
        { "service": "RDS", "action": "ModifyDBParameterGroup" },
        { "service": "RDS", "action": "ResetDBParameterGroup" },
        { "service": "RDS", "action": "DescribeDBParameterGroups" },
        { "service": "RDS", "action": "DescribeDBParameters" }
      ],
      "delete": [
        { "service": "RDSClient", "action": "DeleteDBParameterGroup" },
        { "service": "RDSClient", "action": "DeleteDBParameterGroup" }
      ]
    },
    "db_proxy": {
      "create": [
        { "service": "RDS", "action": "CreateDBProxy" },
        { "service": "RDS", "action": "DescribeDBProxies" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBProxies" }],
      "update": [
        { "service": "RDS", "action": "ModifyDBProxy" },
        { "service": "RDS", "action": "DescribeDBProxies" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBProxy" },
        { "service": "RDS", "action": "DescribeDBProxies" }
      ]
    },
    "db_proxy_default_target_group": {
      "create": [],
      "read": [{ "service": "RDS", "action": "DescribeDBProxyTargetGroups" }],
      "update": [],
      "delete": []
    },
    "db_proxy_endpoint": {
      "create": [
        { "service": "RDS", "action": "CreateDBProxyEndpoint" },
        { "service": "RDS", "action": "DescribeDBProxyEndpoints" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBProxyEndpoints" }],
      "update": [
        { "service": "RDS", "action": "ModifyDBProxyEndpoint" },
        { "service": "RDS", "action": "DescribeDBProxyEndpoints" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBProxyEndpoint" },
        { "service": "RDS", "action": "DescribeDBProxyEndpoints" }
      ]
    },
    "db_proxy_target": {
      "create": [
        { "service": "RDS", "action": "RegisterDBProxyTargets" },
        { "service": "RDS", "action": "DescribeDBProxyTargets" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBProxyTargets" }],
      "update": [],
      "delete": [{ "service": "RDS", "action": "DeregisterDBProxyTargets" }]
    },
    "db_security_group": {
      "create": [],
      "read": [],
      "update": [
        { "service": "RDS", "action": "DescribeDBSecurityGroups" },
        { "service": "RDS", "action": "RevokeDBSecurityGroupIngress" },
        { "service": "RDS", "action": "AuthorizeDBSecurityGroupIngress" }
      ],
      "delete": [{ "service": "RDS", "action": "DeleteDBSecurityGroup" }]
    },
    "db_snapshot": {
      "create": [
        { "service": "RDS", "action": "CreateDBSnapshot" },
        { "service": "RDS", "action": "DescribeDBSnapshots" },
        { "service": "RDS", "action": "ModifyDBSnapshotAttribute" },
        { "service": "RDS", "action": "DescribeDBSnapshotAttributes" }
      ],
      "read": [
        { "service": "RDS", "action": "DescribeDBSnapshots" },
        { "service": "RDS", "action": "DescribeDBSnapshotAttributes" }
      ],
      "update": [{ "service": "RDS", "action": "ModifyDBSnapshotAttribute" }],
      "delete": [{ "service": "RDS", "action": "DeleteDBSnapshot" }]
    },
    "db_snapshot_copy": {
      "create": [
        { "service": "RDS", "action": "CopyDBSnapshot" },
        { "service": "RDS", "action": "DescribeDBSnapshots" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBSnapshots" }],
      "update": [],
      "delete": [{ "service": "RDS", "action": "DeleteDBSnapshot" }]
    },
    "db_subnet_group": {
      "create": [
        { "service": "RDS", "action": "CreateDBSubnetGroup" },
        { "service": "RDS", "action": "DescribeDBSubnetGroups" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeDBSubnetGroups" }],
      "update": [
        { "service": "RDS", "action": "ModifyDBSubnetGroup" },
        { "service": "RDS", "action": "DescribeDBSubnetGroups" }
      ],
      "delete": [
        { "service": "RDS", "action": "DeleteDBSubnetGroup" },
        { "service": "RDS", "action": "DescribeDBSubnetGroups" }
      ]
    },
    "global_cluster": {
      "create": [
        { "service": "RDS", "action": "CreateGlobalCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeGlobalClusters" }],
      "update": [
        { "service": "RDS", "action": "ModifyGlobalCluster" },
        { "service": "RDS", "action": "ModifyGlobalCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" },
        { "service": "RDS", "action": "ModifyGlobalCluster" }
      ],
      "delete": [
        { "service": "RDS", "action": "RemoveFromGlobalCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" },
        { "service": "RDS", "action": "RemoveFromGlobalCluster" },
        { "service": "RDS", "action": "DeleteGlobalCluster" },
        { "service": "RDS", "action": "DeleteGlobalCluster" },
        { "service": "RDS", "action": "DescribeGlobalClusters" }
      ]
    },
    "reserved_instance": {
      "create": [
        { "service": "RDS", "action": "PurchaseReservedDBInstancesOffering" },
        { "service": "RDS", "action": "DescribeReservedDBInstances" }
      ],
      "read": [{ "service": "RDS", "action": "DescribeReservedDBInstances" }],
      "update": [],
      "delete": []
    }
  },
  "redshift": {
    "authentication_profile": {
      "create": [
        { "service": "Redshift", "action": "CreateAuthenticationProfile" },
        { "service": "Redshift", "action": "DescribeAuthenticationProfiles" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeAuthenticationProfiles" }],
      "update": [
        { "service": "Redshift", "action": "ModifyAuthenticationProfile" },
        { "service": "Redshift", "action": "DescribeAuthenticationProfiles" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteAuthenticationProfile" }]
    },
    "cluster": {
      "create": [
        { "service": "Redshift", "action": "RestoreFromClusterSnapshot" },
        { "service": "Redshift", "action": "CreateCluster" },
        { "service": "Redshift", "action": "DescribeClusters" },
        { "service": "Redshift", "action": "EnableSnapshotCopy" },
        { "service": "Redshift", "action": "EnableLogging" },
        { "service": "Redshift", "action": "DescribeLoggingStatus" }
      ],
      "read": [
        { "service": "Redshift", "action": "DescribeClusters" },
        { "service": "Redshift", "action": "DescribeLoggingStatus" }
      ],
      "update": [
        { "service": "Redshift", "action": "ModifyCluster" },
        { "service": "Redshift", "action": "DescribeClusters" },
        { "service": "Redshift", "action": "ModifyClusterIamRoles" },
        { "service": "Redshift", "action": "ModifyAquaConfiguration" },
        { "service": "Redshift", "action": "RebootCluster" },
        { "service": "Redshift", "action": "ModifyCluster" },
        { "service": "Redshift", "action": "EnableSnapshotCopy" },
        { "service": "Redshift", "action": "DisableSnapshotCopy" },
        { "service": "Redshift", "action": "EnableLogging" },
        { "service": "Redshift", "action": "DisableLogging" },
        { "service": "Redshift", "action": "DescribeLoggingStatus" }
      ],
      "delete": [
        { "service": "Redshift", "action": "DeleteCluster" },
        { "service": "Redshift", "action": "DescribeClusters" }
      ]
    },
    "cluster_iam_roles": {
      "create": [
        { "service": "Redshift", "action": "ModifyClusterIamRoles" },
        { "service": "Redshift", "action": "DescribeClusters" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeClusters" }],
      "update": [
        { "service": "Redshift", "action": "ModifyClusterIamRoles" },
        { "service": "Redshift", "action": "DescribeClusters" }
      ],
      "delete": [
        { "service": "Redshift", "action": "ModifyClusterIamRoles" },
        { "service": "Redshift", "action": "DescribeClusters" }
      ]
    },
    "cluster_snapshot": {
      "create": [
        { "service": "Redshift", "action": "CreateClusterSnapshot" },
        { "service": "Redshift", "action": "DescribeClusterSnapshots" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeClusterSnapshots" }],
      "update": [
        { "service": "Redshift", "action": "ModifyClusterSnapshot" },
        { "service": "Redshift", "action": "DescribeClusterSnapshots" }
      ],
      "delete": [
        { "service": "Redshift", "action": "DeleteClusterSnapshot" },
        { "service": "Redshift", "action": "DescribeClusterSnapshots" }
      ]
    },
    "endpoint_access": {
      "create": [
        { "service": "Redshift", "action": "CreateEndpointAccess" },
        { "service": "Redshift", "action": "DescribeEndpointAccess" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeEndpointAccess" }],
      "update": [
        { "service": "Redshift", "action": "ModifyEndpointAccess" },
        { "service": "Redshift", "action": "DescribeEndpointAccess" }
      ],
      "delete": [
        { "service": "Redshift", "action": "DeleteEndpointAccess" },
        { "service": "Redshift", "action": "DescribeEndpointAccess" }
      ]
    },
    "endpoint_authorization": {
      "create": [
        { "service": "Redshift", "action": "AuthorizeEndpointAccess" },
        { "service": "Redshift", "action": "DescribeEndpointAuthorization" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeEndpointAuthorization" }],
      "update": [
        { "service": "Redshift", "action": "AuthorizeEndpointAccess" },
        { "service": "Redshift", "action": "RevokeEndpointAccess" },
        { "service": "Redshift", "action": "DescribeEndpointAuthorization" }
      ],
      "delete": [{ "service": "Redshift", "action": "RevokeEndpointAccess" }]
    },
    "event_subscription": {
      "create": [
        { "service": "Redshift", "action": "CreateEventSubscription" },
        { "service": "Redshift", "action": "DescribeEventSubscriptions" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeEventSubscriptions" }],
      "update": [
        { "service": "Redshift", "action": "ModifyEventSubscription" },
        { "service": "Redshift", "action": "DescribeEventSubscriptions" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteEventSubscription" }]
    },
    "hsm_client_certificate": {
      "create": [
        { "service": "Redshift", "action": "CreateHsmClientCertificate" },
        { "service": "Redshift", "action": "DescribeHsmClientCertificates" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeHsmClientCertificates" }],
      "update": [],
      "delete": [{ "service": "Redshift", "action": "DeleteHsmClientCertificate" }]
    },
    "hsm_configuration": {
      "create": [
        { "service": "Redshift", "action": "CreateHsmConfiguration" },
        { "service": "Redshift", "action": "DescribeHsmConfigurations" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeHsmConfigurations" }],
      "update": [],
      "delete": [{ "service": "Redshift", "action": "DeleteHsmConfiguration" }]
    },
    "parameter_group": {
      "create": [
        { "service": "Redshift", "action": "CreateClusterParameterGroup" },
        { "service": "Redshift", "action": "ModifyClusterParameterGroup" },
        { "service": "Redshift", "action": "DescribeClusterParameterGroups" },
        { "service": "Redshift", "action": "DescribeClusterParameters" }
      ],
      "read": [
        { "service": "Redshift", "action": "DescribeClusterParameterGroups" },
        { "service": "Redshift", "action": "DescribeClusterParameters" }
      ],
      "update": [
        { "service": "Redshift", "action": "ModifyClusterParameterGroup" },
        { "service": "Redshift", "action": "DescribeClusterParameterGroups" },
        { "service": "Redshift", "action": "DescribeClusterParameters" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteClusterParameterGroup" }]
    },
    "partner": {
      "create": [
        { "service": "Redshift", "action": "AddPartner" },
        { "service": "Redshift", "action": "DescribePartners" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribePartners" }],
      "update": [],
      "delete": [{ "service": "Redshift", "action": "DeletePartner" }]
    },
    "scheduled_action": {
      "create": [
        { "service": "Redshift", "action": "CreateScheduledAction" },
        { "service": "Redshift", "action": "DescribeScheduledActions" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeScheduledActions" }],
      "update": [{ "service": "Redshift", "action": "ModifyScheduledAction" }],
      "delete": [{ "service": "Redshift", "action": "DeleteScheduledAction" }]
    },
    "security_group": {
      "create": [],
      "read": [],
      "update": [
        { "service": "Redshift", "action": "RevokeClusterSecurityGroupIngress" },
        { "service": "Redshift", "action": "AuthorizeClusterSecurityGroupIngress" },
        { "service": "Redshift", "action": "DescribeClusterSecurityGroups" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteClusterSecurityGroup" }]
    },
    "snapshot_copy_grant": {
      "create": [
        { "service": "Redshift", "action": "CreateSnapshotCopyGrant" },
        { "service": "Redshift", "action": "DescribeSnapshotCopyGrants" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeSnapshotCopyGrants" }],
      "update": [],
      "delete": [
        { "service": "Redshift", "action": "DeleteSnapshotCopyGrant" },
        { "service": "Redshift", "action": "DescribeSnapshotCopyGrants" }
      ]
    },
    "snapshot_schedule": {
      "create": [
        { "service": "Redshift", "action": "CreateSnapshotSchedule" },
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeSnapshotSchedules" }],
      "update": [
        { "service": "Redshift", "action": "ModifySnapshotSchedule" },
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" }
      ],
      "delete": [
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" },
        { "service": "Redshift", "action": "ModifyClusterSnapshotSchedule" },
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" },
        { "service": "Redshift", "action": "DeleteSnapshotSchedule" }
      ]
    },
    "snapshot_schedule_association": {
      "create": [
        { "service": "Redshift", "action": "ModifyClusterSnapshotSchedule" },
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeSnapshotSchedules" }],
      "update": [],
      "delete": [
        { "service": "Redshift", "action": "ModifyClusterSnapshotSchedule" },
        { "service": "Redshift", "action": "DescribeSnapshotSchedules" }
      ]
    },
    "subnet_group": {
      "create": [
        { "service": "Redshift", "action": "CreateClusterSubnetGroup" },
        { "service": "Redshift", "action": "DescribeClusterSubnetGroups" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeClusterSubnetGroups" }],
      "update": [
        { "service": "Redshift", "action": "ModifyClusterSubnetGroup" },
        { "service": "Redshift", "action": "DescribeClusterSubnetGroups" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteClusterSubnetGroup" }]
    },
    "usage_limit": {
      "create": [
        { "service": "Redshift", "action": "CreateUsageLimit" },
        { "service": "Redshift", "action": "DescribeUsageLimits" }
      ],
      "read": [{ "service": "Redshift", "action": "DescribeUsageLimits" }],
      "update": [
        { "service": "Redshift", "action": "ModifyUsageLimit" },
        { "service": "Redshift", "action": "DescribeUsageLimits" }
      ],
      "delete": [{ "service": "Redshift", "action": "DeleteUsageLimit" }]
    }
  },
  "redshiftdata": {
    "statement": {
      "create": [
        { "service": "RedshiftData", "action": "ExecuteStatement" },
        { "service": "RedshiftData", "action": "DescribeStatement" }
      ],
      "read": [{ "service": "RedshiftData", "action": "DescribeStatement" }],
      "update": [],
      "delete": []
    }
  },
  "redshiftserverless": {
    "endpoint_access": {
      "create": [
        { "service": "RedshiftServerless", "action": "CreateEndpointAccess" },
        { "service": "RedshiftServerless", "action": "GetEndpointAccess" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetEndpointAccess" }],
      "update": [
        { "service": "RedshiftServerless", "action": "UpdateEndpointAccess" },
        { "service": "RedshiftServerless", "action": "GetEndpointAccess" }
      ],
      "delete": [
        { "service": "RedshiftServerless", "action": "DeleteEndpointAccess" },
        { "service": "RedshiftServerless", "action": "GetEndpointAccess" }
      ]
    },
    "namespace": {
      "create": [
        { "service": "RedshiftServerless", "action": "CreateNamespace" },
        { "service": "RedshiftServerless", "action": "GetNamespace" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetNamespace" }],
      "update": [
        { "service": "RedshiftServerless", "action": "UpdateNamespace" },
        { "service": "RedshiftServerless", "action": "GetNamespace" }
      ],
      "delete": [
        { "service": "RedshiftServerless", "action": "DeleteNamespace" },
        { "service": "RedshiftServerless", "action": "GetNamespace" }
      ]
    },
    "resource_policy": {
      "create": [
        { "service": "RedshiftServerless", "action": "PutResourcePolicy" },
        { "service": "RedshiftServerless", "action": "GetResourcePolicy" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetResourcePolicy" }],
      "update": [],
      "delete": [{ "service": "RedshiftServerless", "action": "DeleteResourcePolicy" }]
    },
    "snapshot": {
      "create": [
        { "service": "RedshiftServerless", "action": "CreateSnapshot" },
        { "service": "RedshiftServerless", "action": "GetSnapshot" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetSnapshot" }],
      "update": [
        { "service": "RedshiftServerless", "action": "UpdateSnapshot" },
        { "service": "RedshiftServerless", "action": "GetSnapshot" }
      ],
      "delete": [
        { "service": "RedshiftServerless", "action": "DeleteSnapshot" },
        { "service": "RedshiftServerless", "action": "GetSnapshot" }
      ]
    },
    "usage_limit": {
      "create": [
        { "service": "RedshiftServerless", "action": "CreateUsageLimit" },
        { "service": "RedshiftServerless", "action": "GetUsageLimit" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetUsageLimit" }],
      "update": [
        { "service": "RedshiftServerless", "action": "UpdateUsageLimit" },
        { "service": "RedshiftServerless", "action": "GetUsageLimit" }
      ],
      "delete": [{ "service": "RedshiftServerless", "action": "DeleteUsageLimit" }]
    },
    "workgroup": {
      "create": [
        { "service": "RedshiftServerless", "action": "CreateWorkgroup" },
        { "service": "RedshiftServerless", "action": "GetWorkgroup" }
      ],
      "read": [{ "service": "RedshiftServerless", "action": "GetWorkgroup" }],
      "update": [
        { "service": "RedshiftServerless", "action": "UpdateWorkgroup" },
        { "service": "RedshiftServerless", "action": "GetWorkgroup" }
      ],
      "delete": [
        { "service": "RedshiftServerless", "action": "DeleteWorkgroup" },
        { "service": "RedshiftServerless", "action": "GetWorkgroup" }
      ]
    }
  },
  "resourcegroups": {
    "group": {
      "create": [
        { "service": "ResourceGroups", "action": "CreateGroup" },
        { "service": "ResourceGroups", "action": "GetGroupConfiguration" },
        { "service": "ResourceGroups", "action": "GetGroup" },
        { "service": "ResourceGroups", "action": "GetGroupQuery" }
      ],
      "read": [
        { "service": "ResourceGroups", "action": "GetGroup" },
        { "service": "ResourceGroups", "action": "GetGroupQuery" },
        { "service": "ResourceGroups", "action": "GetGroupConfiguration" }
      ],
      "update": [
        { "service": "ResourceGroups", "action": "UpdateGroup" },
        { "service": "ResourceGroups", "action": "UpdateGroupQuery" },
        { "service": "ResourceGroups", "action": "PutGroupConfiguration" },
        { "service": "ResourceGroups", "action": "GetGroupConfiguration" },
        { "service": "ResourceGroups", "action": "GetGroup" },
        { "service": "ResourceGroups", "action": "GetGroupQuery" }
      ],
      "delete": [{ "service": "ResourceGroups", "action": "DeleteGroup" }]
    }
  },
  "rolesanywhere": {
    "profile": {
      "create": [
        { "service": "RolesAnywhereClient", "action": "CreateProfile" },
        { "service": "RolesAnywhereClient", "action": "GetProfile" }
      ],
      "read": [{ "service": "RolesAnywhereClient", "action": "GetProfile" }],
      "update": [
        { "service": "RolesAnywhereClient", "action": "UpdateProfile" },
        { "service": "RolesAnywhereClient", "action": "EnableProfile" },
        { "service": "RolesAnywhereClient", "action": "DisableProfile" },
        { "service": "RolesAnywhereClient", "action": "GetProfile" }
      ],
      "delete": [{ "service": "RolesAnywhereClient", "action": "DeleteProfile" }]
    },
    "trust_anchor": {
      "create": [
        { "service": "RolesAnywhereClient", "action": "CreateTrustAnchor" },
        { "service": "RolesAnywhereClient", "action": "GetTrustAnchor" }
      ],
      "read": [{ "service": "RolesAnywhereClient", "action": "GetTrustAnchor" }],
      "update": [
        { "service": "RolesAnywhereClient", "action": "UpdateTrustAnchor" },
        { "service": "RolesAnywhereClient", "action": "EnableTrustAnchor" },
        { "service": "RolesAnywhereClient", "action": "DisableTrustAnchor" },
        { "service": "RolesAnywhereClient", "action": "GetTrustAnchor" }
      ],
      "delete": [{ "service": "RolesAnywhereClient", "action": "DeleteTrustAnchor" }]
    }
  },
  "route53": {
    "delegation_set": {
      "create": [
        { "service": "Route53", "action": "CreateReusableDelegationSet" },
        { "service": "Route53", "action": "GetReusableDelegationSet" }
      ],
      "read": [{ "service": "Route53", "action": "GetReusableDelegationSet" }],
      "update": [],
      "delete": [{ "service": "Route53", "action": "DeleteReusableDelegationSet" }]
    },
    "health_check": {
      "create": [
        { "service": "Route53", "action": "CreateHealthCheck" },
        { "service": "Route53", "action": "GetHealthCheck" }
      ],
      "read": [{ "service": "Route53", "action": "GetHealthCheck" }],
      "update": [
        { "service": "Route53", "action": "UpdateHealthCheck" },
        { "service": "Route53", "action": "GetHealthCheck" }
      ],
      "delete": [{ "service": "Route53", "action": "DeleteHealthCheck" }]
    },
    "hosted_zone_dnssec": {
      "create": [
        { "service": "Route53", "action": "EnableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DisableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetDNSSEC" }
      ],
      "read": [{ "service": "Route53", "action": "GetDNSSEC" }],
      "update": [
        { "service": "Route53", "action": "EnableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DisableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetDNSSEC" }
      ],
      "delete": [
        { "service": "Route53", "action": "DisableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetChange" }
      ]
    },
    "key_signing_key": {
      "create": [
        { "service": "Route53", "action": "CreateKeySigningKey" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "GetDNSSEC" }
      ],
      "read": [{ "service": "Route53", "action": "GetDNSSEC" }],
      "update": [
        { "service": "Route53", "action": "ActivateKeySigningKey" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DeactivateKeySigningKey" },
        { "service": "Route53", "action": "GetDNSSEC" }
      ],
      "delete": [
        { "service": "Route53", "action": "DeactivateKeySigningKey" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DeleteKeySigningKey" }
      ]
    },
    "query_log": {
      "create": [
        { "service": "Route53", "action": "CreateQueryLoggingConfig" },
        { "service": "Route53", "action": "GetQueryLoggingConfig" }
      ],
      "read": [{ "service": "Route53", "action": "GetQueryLoggingConfig" }],
      "update": [],
      "delete": [{ "service": "Route53", "action": "DeleteQueryLoggingConfig" }]
    },
    "record": {
      "create": [
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ChangeResourceRecordSets" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "read": [
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "update": [
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ChangeResourceRecordSets" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "delete": [
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ListResourceRecordSets" },
        { "service": "Route53", "action": "ChangeResourceRecordSets" },
        { "service": "Route53", "action": "GetChange" }
      ]
    },
    "traffic_policy": {
      "create": [
        { "service": "Route53", "action": "CreateTrafficPolicy" },
        { "service": "Route53", "action": "ListTrafficPolicies" },
        { "service": "Route53", "action": "GetTrafficPolicy" }
      ],
      "read": [
        { "service": "Route53", "action": "ListTrafficPolicies" },
        { "service": "Route53", "action": "GetTrafficPolicy" }
      ],
      "update": [
        { "service": "Route53", "action": "UpdateTrafficPolicyComment" },
        { "service": "Route53", "action": "ListTrafficPolicies" },
        { "service": "Route53", "action": "GetTrafficPolicy" }
      ],
      "delete": [
        { "service": "Route53", "action": "ListTrafficPolicyVersions" },
        { "service": "Route53", "action": "DeleteTrafficPolicy" }
      ]
    },
    "traffic_policy_instance": {
      "create": [
        { "service": "Route53", "action": "CreateTrafficPolicyInstance" },
        { "service": "Route53", "action": "GetTrafficPolicyInstance" }
      ],
      "read": [{ "service": "Route53", "action": "GetTrafficPolicyInstance" }],
      "update": [
        { "service": "Route53", "action": "UpdateTrafficPolicyInstance" },
        { "service": "Route53", "action": "GetTrafficPolicyInstance" }
      ],
      "delete": [
        { "service": "Route53", "action": "DeleteTrafficPolicyInstance" },
        { "service": "Route53", "action": "GetTrafficPolicyInstance" }
      ]
    },
    "vpc_association_authorization": {
      "create": [
        { "service": "Route53", "action": "CreateVPCAssociationAuthorization" },
        { "service": "Route53", "action": "ListVPCAssociationAuthorizations" }
      ],
      "read": [{ "service": "Route53", "action": "ListVPCAssociationAuthorizations" }],
      "update": [],
      "delete": [{ "service": "Route53", "action": "DeleteVPCAssociationAuthorization" }]
    },
    "zone": {
      "create": [
        { "service": "Route53", "action": "CreateHostedZone" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "AssociateVPCWithHostedZone" },
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "read": [
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "update": [
        { "service": "Route53", "action": "UpdateHostedZoneComment" },
        { "service": "Route53", "action": "AssociateVPCWithHostedZone" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DisassociateVPCFromHostedZone" },
        { "service": "Route53", "action": "GetHostedZone" },
        { "service": "Route53", "action": "ListResourceRecordSets" }
      ],
      "delete": [
        { "service": "Route53", "action": "ListResourceRecordSets" },
        { "service": "Route53", "action": "ChangeResourceRecordSets" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "GetDNSSEC" },
        { "service": "Route53", "action": "GetDNSSEC" },
        { "service": "Route53", "action": "DisableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "DisableHostedZoneDNSSEC" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "DeleteHostedZone" }
      ]
    },
    "zone_association": {
      "create": [
        { "service": "Route53", "action": "AssociateVPCWithHostedZone" },
        { "service": "Route53", "action": "GetChange" },
        { "service": "Route53", "action": "ListHostedZonesByVPC" }
      ],
      "read": [{ "service": "Route53", "action": "ListHostedZonesByVPC" }],
      "update": [],
      "delete": [{ "service": "Route53", "action": "DisassociateVPCFromHostedZone" }]
    }
  },
  "route53domains": { "registered_domain": { "create": [], "read": [], "update": [], "delete": [] } },
  "route53recoverycontrolconfig": {
    "cluster": {
      "create": [
        { "service": "Route53RecoveryControlConfig", "action": "CreateCluster" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeCluster" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeCluster" }
      ],
      "read": [{ "service": "Route53RecoveryControlConfig", "action": "DescribeCluster" }],
      "update": [],
      "delete": [
        { "service": "Route53RecoveryControlConfig", "action": "DeleteCluster" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeCluster" }
      ]
    },
    "control_panel": {
      "create": [
        { "service": "Route53RecoveryControlConfig", "action": "CreateControlPanel" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeControlPanel" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeControlPanel" }
      ],
      "read": [{ "service": "Route53RecoveryControlConfig", "action": "DescribeControlPanel" }],
      "update": [
        { "service": "Route53RecoveryControlConfig", "action": "UpdateControlPanel" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeControlPanel" }
      ],
      "delete": [
        { "service": "Route53RecoveryControlConfig", "action": "DeleteControlPanel" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeControlPanel" }
      ]
    },
    "routing_control": {
      "create": [
        { "service": "Route53RecoveryControlConfig", "action": "CreateRoutingControl" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeRoutingControl" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeRoutingControl" }
      ],
      "read": [{ "service": "Route53RecoveryControlConfig", "action": "DescribeRoutingControl" }],
      "update": [
        { "service": "Route53RecoveryControlConfig", "action": "UpdateRoutingControl" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeRoutingControl" }
      ],
      "delete": [
        { "service": "Route53RecoveryControlConfig", "action": "DeleteRoutingControl" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeRoutingControl" }
      ]
    },
    "safety_rule": {
      "create": [],
      "read": [{ "service": "Route53RecoveryControlConfig", "action": "DescribeSafetyRule" }],
      "update": [],
      "delete": [
        { "service": "Route53RecoveryControlConfig", "action": "DeleteSafetyRule" },
        { "service": "Route53RecoveryControlConfig", "action": "DescribeSafetyRule" }
      ]
    }
  },
  "route53recoveryreadiness": {
    "cell": {
      "create": [
        { "service": "Route53RecoveryReadiness", "action": "CreateCell" },
        { "service": "Route53RecoveryReadiness", "action": "GetCell" }
      ],
      "read": [{ "service": "Route53RecoveryReadiness", "action": "GetCell" }],
      "update": [
        { "service": "Route53RecoveryReadiness", "action": "UpdateCell" },
        { "service": "Route53RecoveryReadiness", "action": "GetCell" }
      ],
      "delete": [
        { "service": "Route53RecoveryReadiness", "action": "DeleteCell" },
        { "service": "Route53RecoveryReadiness", "action": "GetCell" },
        { "service": "Route53RecoveryReadiness", "action": "GetCell" }
      ]
    },
    "readiness_check": {
      "create": [
        { "service": "Route53RecoveryReadiness", "action": "CreateReadinessCheck" },
        { "service": "Route53RecoveryReadiness", "action": "GetReadinessCheck" }
      ],
      "read": [{ "service": "Route53RecoveryReadiness", "action": "GetReadinessCheck" }],
      "update": [
        { "service": "Route53RecoveryReadiness", "action": "UpdateReadinessCheck" },
        { "service": "Route53RecoveryReadiness", "action": "GetReadinessCheck" }
      ],
      "delete": [
        { "service": "Route53RecoveryReadiness", "action": "DeleteReadinessCheck" },
        { "service": "Route53RecoveryReadiness", "action": "GetReadinessCheck" },
        { "service": "Route53RecoveryReadiness", "action": "GetReadinessCheck" }
      ]
    },
    "recovery_group": {
      "create": [
        { "service": "Route53RecoveryReadiness", "action": "CreateRecoveryGroup" },
        { "service": "Route53RecoveryReadiness", "action": "GetRecoveryGroup" }
      ],
      "read": [{ "service": "Route53RecoveryReadiness", "action": "GetRecoveryGroup" }],
      "update": [
        { "service": "Route53RecoveryReadiness", "action": "UpdateRecoveryGroup" },
        { "service": "Route53RecoveryReadiness", "action": "GetRecoveryGroup" }
      ],
      "delete": [
        { "service": "Route53RecoveryReadiness", "action": "DeleteRecoveryGroup" },
        { "service": "Route53RecoveryReadiness", "action": "GetRecoveryGroup" },
        { "service": "Route53RecoveryReadiness", "action": "GetRecoveryGroup" }
      ]
    },
    "resource_set": {
      "create": [
        { "service": "Route53RecoveryReadiness", "action": "CreateResourceSet" },
        { "service": "Route53RecoveryReadiness", "action": "GetResourceSet" }
      ],
      "read": [{ "service": "Route53RecoveryReadiness", "action": "GetResourceSet" }],
      "update": [
        { "service": "Route53RecoveryReadiness", "action": "UpdateResourceSet" },
        { "service": "Route53RecoveryReadiness", "action": "GetResourceSet" }
      ],
      "delete": [
        { "service": "Route53RecoveryReadiness", "action": "DeleteResourceSet" },
        { "service": "Route53RecoveryReadiness", "action": "GetResourceSet" },
        { "service": "Route53RecoveryReadiness", "action": "GetResourceSet" }
      ]
    }
  },
  "route53resolver": {
    "route53_resolver_config": {
      "create": [
        { "service": "Route53Resolver", "action": "UpdateResolverConfig" },
        { "service": "Route53Resolver", "action": "ListResolverConfigs" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "ListResolverConfigs" }],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateResolverConfig" },
        { "service": "Route53Resolver", "action": "ListResolverConfigs" }
      ],
      "delete": []
    },
    "route53_resolver_dnssec_config": {
      "create": [
        { "service": "Route53Resolver", "action": "UpdateResolverDnssecConfig" },
        { "service": "Route53Resolver", "action": "ListResolverDnssecConfigs" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "ListResolverDnssecConfigs" }],
      "update": [],
      "delete": [
        { "service": "Route53Resolver", "action": "UpdateResolverDnssecConfig" },
        { "service": "Route53Resolver", "action": "ListResolverDnssecConfigs" }
      ]
    },
    "route53_resolver_endpoint": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateResolverEndpoint" },
        { "service": "Route53Resolver", "action": "GetResolverEndpoint" },
        { "service": "Route53Resolver", "action": "ListResolverEndpointIpAddresses" }
      ],
      "read": [
        { "service": "Route53Resolver", "action": "GetResolverEndpoint" },
        { "service": "Route53Resolver", "action": "ListResolverEndpointIpAddresses" }
      ],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateResolverEndpoint" },
        { "service": "Route53Resolver", "action": "GetResolverEndpoint" },
        { "service": "Route53Resolver", "action": "AssociateResolverEndpointIpAddress" },
        { "service": "Route53Resolver", "action": "DisassociateResolverEndpointIpAddress" },
        { "service": "Route53Resolver", "action": "ListResolverEndpointIpAddresses" }
      ],
      "delete": [
        { "service": "Route53Resolver", "action": "DeleteResolverEndpoint" },
        { "service": "Route53Resolver", "action": "GetResolverEndpoint" }
      ]
    },
    "route53_resolver_firewall_config": {
      "create": [
        { "service": "Route53Resolver", "action": "UpdateFirewallConfig" },
        { "service": "Route53Resolver", "action": "ListFirewallConfigs" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "ListFirewallConfigs" }],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateFirewallConfig" },
        { "service": "Route53Resolver", "action": "ListFirewallConfigs" }
      ],
      "delete": [{ "service": "Route53Resolver", "action": "UpdateFirewallConfig" }]
    },
    "route53_resolver_firewall_domain_list": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateFirewallDomainList" },
        { "service": "Route53Resolver", "action": "UpdateFirewallDomains" },
        { "service": "Route53Resolver", "action": "GetFirewallDomainList" },
        { "service": "Route53Resolver", "action": "ListFirewallDomains" }
      ],
      "read": [
        { "service": "Route53Resolver", "action": "GetFirewallDomainList" },
        { "service": "Route53Resolver", "action": "ListFirewallDomains" }
      ],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateFirewallDomains" },
        { "service": "Route53Resolver", "action": "GetFirewallDomainList" },
        { "service": "Route53Resolver", "action": "ListFirewallDomains" }
      ],
      "delete": [
        { "service": "Route53Resolver", "action": "DeleteFirewallDomainList" },
        { "service": "Route53Resolver", "action": "GetFirewallDomainList" }
      ]
    },
    "route53_resolver_firewall_rule": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateFirewallRule" },
        { "service": "Route53Resolver", "action": "ListFirewallRules" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "ListFirewallRules" }],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateFirewallRule" },
        { "service": "Route53Resolver", "action": "ListFirewallRules" }
      ],
      "delete": [{ "service": "Route53Resolver", "action": "DeleteFirewallRule" }]
    },
    "route53_resolver_firewall_rule_group": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateFirewallRuleGroup" },
        { "service": "Route53Resolver", "action": "GetFirewallRuleGroup" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetFirewallRuleGroup" }],
      "update": [],
      "delete": [{ "service": "Route53Resolver", "action": "DeleteFirewallRuleGroup" }]
    },
    "route53_resolver_firewall_rule_group_association": {
      "create": [
        { "service": "Route53Resolver", "action": "AssociateFirewallRuleGroup" },
        { "service": "Route53Resolver", "action": "GetFirewallRuleGroupAssociation" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetFirewallRuleGroupAssociation" }],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateFirewallRuleGroupAssociation" },
        { "service": "Route53Resolver", "action": "GetFirewallRuleGroupAssociation" }
      ],
      "delete": [
        { "service": "Route53Resolver", "action": "DisassociateFirewallRuleGroup" },
        { "service": "Route53Resolver", "action": "GetFirewallRuleGroupAssociation" }
      ]
    },
    "route53_resolver_query_log_config": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateResolverQueryLogConfig" },
        { "service": "Route53Resolver", "action": "GetResolverQueryLogConfig" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetResolverQueryLogConfig" }],
      "update": [],
      "delete": [
        { "service": "Route53Resolver", "action": "DeleteResolverQueryLogConfig" },
        { "service": "Route53Resolver", "action": "GetResolverQueryLogConfig" }
      ]
    },
    "route53_resolver_query_log_config_association": {
      "create": [
        { "service": "Route53Resolver", "action": "AssociateResolverQueryLogConfig" },
        { "service": "Route53Resolver", "action": "GetResolverQueryLogConfigAssociation" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetResolverQueryLogConfigAssociation" }],
      "update": [],
      "delete": [
        { "service": "Route53Resolver", "action": "DisassociateResolverQueryLogConfig" },
        { "service": "Route53Resolver", "action": "GetResolverQueryLogConfigAssociation" }
      ]
    },
    "route53_resolver_rule": {
      "create": [
        { "service": "Route53Resolver", "action": "CreateResolverRule" },
        { "service": "Route53Resolver", "action": "GetResolverRule" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetResolverRule" }],
      "update": [
        { "service": "Route53Resolver", "action": "UpdateResolverRule" },
        { "service": "Route53Resolver", "action": "GetResolverRule" }
      ],
      "delete": [
        { "service": "Route53Resolver", "action": "DeleteResolverRule" },
        { "service": "Route53Resolver", "action": "GetResolverRule" }
      ]
    },
    "route53_resolver_rule_association": {
      "create": [
        { "service": "Route53Resolver", "action": "AssociateResolverRule" },
        { "service": "Route53Resolver", "action": "GetResolverRuleAssociation" }
      ],
      "read": [{ "service": "Route53Resolver", "action": "GetResolverRuleAssociation" }],
      "update": [],
      "delete": [
        { "service": "Route53Resolver", "action": "DisassociateResolverRule" },
        { "service": "Route53Resolver", "action": "GetResolverRuleAssociation" }
      ]
    }
  },
  "rum": {
    "app_monitor": {
      "create": [
        { "service": "RUM", "action": "CreateAppMonitor" },
        { "service": "RUM", "action": "GetAppMonitor" }
      ],
      "read": [{ "service": "RUM", "action": "GetAppMonitor" }],
      "update": [
        { "service": "RUM", "action": "UpdateAppMonitor" },
        { "service": "RUM", "action": "GetAppMonitor" }
      ],
      "delete": [{ "service": "RUM", "action": "DeleteAppMonitor" }]
    },
    "metrics_destination": {
      "create": [
        { "service": "RUM", "action": "PutRumMetricsDestination" },
        { "service": "RUM", "action": "ListRumMetricsDestinations" }
      ],
      "read": [{ "service": "RUM", "action": "ListRumMetricsDestinations" }],
      "update": [],
      "delete": [{ "service": "RUM", "action": "DeleteRumMetricsDestination" }]
    }
  },
  "s3": {
    "bucket": {
      "create": [
        { "service": "S3", "action": "HeadBucket" },
        { "service": "S3", "action": "CreateBucket" },
        { "service": "S3", "action": "GetBucketTagging" },
        { "service": "S3", "action": "PutBucketTagging" },
        { "service": "S3", "action": "DeleteBucketTagging" },
        { "service": "S3", "action": "DeleteBucketPolicy" },
        { "service": "S3", "action": "PutBucketPolicy" },
        { "service": "S3", "action": "PutBucketPolicy" },
        { "service": "S3", "action": "DeleteBucketCors" },
        { "service": "S3", "action": "PutBucketCors" },
        { "service": "S3", "action": "DeleteBucketWebsite" },
        { "service": "S3", "action": "PutBucketWebsite" },
        { "service": "S3", "action": "PutBucketVersioning" },
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "GetBucketAcl" },
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "PutBucketLogging" },
        { "service": "S3", "action": "DeleteBucketLifecycle" },
        { "service": "S3", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3", "action": "PutBucketAccelerateConfiguration" },
        { "service": "S3", "action": "PutBucketRequestPayment" },
        { "service": "S3", "action": "DeleteBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "DeleteBucketEncryption" },
        { "service": "S3", "action": "PutBucketEncryption" },
        { "service": "S3", "action": "PutObjectLockConfiguration" },
        { "service": "S3", "action": "GetBucketPolicy" },
        { "service": "S3", "action": "GetBucketAcl" },
        { "service": "S3", "action": "GetBucketCors" },
        { "service": "S3", "action": "GetBucketWebsite" },
        { "service": "S3", "action": "GetBucketVersioning" },
        { "service": "S3", "action": "GetBucketAccelerateConfiguration" },
        { "service": "S3", "action": "GetBucketRequestPayment" },
        { "service": "S3", "action": "GetBucketLogging" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketReplication" },
        { "service": "S3", "action": "GetBucketEncryption" },
        { "service": "S3", "action": "GetObjectLockConfiguration" }
      ],
      "read": [
        { "service": "S3", "action": "HeadBucket" },
        { "service": "S3", "action": "GetBucketPolicy" },
        { "service": "S3", "action": "GetBucketAcl" },
        { "service": "S3", "action": "GetBucketCors" },
        { "service": "S3", "action": "GetBucketWebsite" },
        { "service": "S3", "action": "GetBucketVersioning" },
        { "service": "S3", "action": "GetBucketAccelerateConfiguration" },
        { "service": "S3", "action": "GetBucketRequestPayment" },
        { "service": "S3", "action": "GetBucketLogging" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketReplication" },
        { "service": "S3", "action": "GetBucketEncryption" },
        { "service": "S3", "action": "GetObjectLockConfiguration" },
        { "service": "S3", "action": "GetBucketTagging" }
      ],
      "update": [
        { "service": "S3", "action": "GetBucketTagging" },
        { "service": "S3", "action": "PutBucketTagging" },
        { "service": "S3", "action": "DeleteBucketTagging" },
        { "service": "S3", "action": "DeleteBucketPolicy" },
        { "service": "S3", "action": "PutBucketPolicy" },
        { "service": "S3", "action": "PutBucketPolicy" },
        { "service": "S3", "action": "DeleteBucketCors" },
        { "service": "S3", "action": "PutBucketCors" },
        { "service": "S3", "action": "DeleteBucketWebsite" },
        { "service": "S3", "action": "PutBucketWebsite" },
        { "service": "S3", "action": "PutBucketVersioning" },
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "GetBucketAcl" },
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "PutBucketLogging" },
        { "service": "S3", "action": "DeleteBucketLifecycle" },
        { "service": "S3", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3", "action": "PutBucketAccelerateConfiguration" },
        { "service": "S3", "action": "PutBucketRequestPayment" },
        { "service": "S3", "action": "DeleteBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "DeleteBucketEncryption" },
        { "service": "S3", "action": "PutBucketEncryption" },
        { "service": "S3", "action": "PutObjectLockConfiguration" },
        { "service": "S3", "action": "HeadBucket" },
        { "service": "S3", "action": "GetBucketPolicy" },
        { "service": "S3", "action": "GetBucketAcl" },
        { "service": "S3", "action": "GetBucketCors" },
        { "service": "S3", "action": "GetBucketWebsite" },
        { "service": "S3", "action": "GetBucketVersioning" },
        { "service": "S3", "action": "GetBucketAccelerateConfiguration" },
        { "service": "S3", "action": "GetBucketRequestPayment" },
        { "service": "S3", "action": "GetBucketLogging" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketReplication" },
        { "service": "S3", "action": "GetBucketEncryption" },
        { "service": "S3", "action": "GetObjectLockConfiguration" }
      ],
      "delete": [
        { "service": "S3", "action": "DeleteBucket" },
        { "service": "S3", "action": "ListObjectVersions" },
        { "service": "S3", "action": "ListObjectVersions" },
        { "service": "S3", "action": "DeleteObjects" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "DeleteObject" },
        { "service": "S3", "action": "DeleteBucket" },
        { "service": "S3", "action": "HeadBucket" }
      ]
    },
    "bucket_accelerate_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketAccelerateConfiguration" },
        { "service": "S3", "action": "GetBucketAccelerateConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketAccelerateConfiguration" }],
      "update": [
        { "service": "S3", "action": "PutBucketAccelerateConfiguration" },
        { "service": "S3", "action": "GetBucketAccelerateConfiguration" }
      ],
      "delete": [{ "service": "S3", "action": "PutBucketAccelerateConfiguration" }]
    },
    "bucket_acl": {
      "create": [
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "GetBucketAcl" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketAcl" }],
      "update": [
        { "service": "S3", "action": "PutBucketAcl" },
        { "service": "S3", "action": "GetBucketAcl" }
      ],
      "delete": []
    },
    "bucket_analytics_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketAnalyticsConfiguration" },
        { "service": "S3", "action": "PutBucketAnalyticsConfiguration" },
        { "service": "S3", "action": "GetBucketAnalyticsConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketAnalyticsConfiguration" }],
      "update": [],
      "delete": [
        { "service": "S3", "action": "DeleteBucketAnalyticsConfiguration" },
        { "service": "S3", "action": "GetBucketAnalyticsConfiguration" },
        { "service": "S3", "action": "GetBucketAnalyticsConfiguration" }
      ]
    },
    "bucket_cors_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketCors" },
        { "service": "S3", "action": "GetBucketCors" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketCors" }],
      "update": [
        { "service": "S3", "action": "PutBucketCors" },
        { "service": "S3", "action": "GetBucketCors" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketCors" }]
    },
    "bucket_intelligent_tiering_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketIntelligentTieringConfiguration" },
        { "service": "S3", "action": "GetBucketIntelligentTieringConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketIntelligentTieringConfiguration" }],
      "update": [],
      "delete": [{ "service": "S3", "action": "DeleteBucketIntelligentTieringConfiguration" }]
    },
    "bucket_inventory": {
      "create": [
        { "service": "S3", "action": "PutBucketInventoryConfiguration" },
        { "service": "S3", "action": "PutBucketInventoryConfiguration" },
        { "service": "S3", "action": "GetBucketInventoryConfiguration" },
        { "service": "S3", "action": "GetBucketInventoryConfiguration" }
      ],
      "read": [
        { "service": "S3", "action": "GetBucketInventoryConfiguration" },
        { "service": "S3", "action": "GetBucketInventoryConfiguration" }
      ],
      "update": [],
      "delete": [{ "service": "S3", "action": "DeleteBucketInventoryConfiguration" }]
    },
    "bucket_lifecycle_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" }
      ],
      "read": [
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" }
      ],
      "update": [
        { "service": "S3", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" },
        { "service": "S3", "action": "GetBucketLifecycleConfiguration" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketLifecycle" }]
    },
    "bucket_logging": {
      "create": [
        { "service": "S3", "action": "PutBucketLogging" },
        { "service": "S3", "action": "GetBucketLogging" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketLogging" }],
      "update": [
        { "service": "S3", "action": "PutBucketLogging" },
        { "service": "S3", "action": "GetBucketLogging" }
      ],
      "delete": [{ "service": "S3", "action": "PutBucketLogging" }]
    },
    "bucket_metric": {
      "create": [
        { "service": "S3", "action": "PutBucketMetricsConfiguration" },
        { "service": "S3", "action": "PutBucketMetricsConfiguration" },
        { "service": "S3", "action": "GetBucketMetricsConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketMetricsConfiguration" }],
      "update": [],
      "delete": [{ "service": "S3", "action": "DeleteBucketMetricsConfiguration" }]
    },
    "bucket_notification": {
      "create": [
        { "service": "S3", "action": "PutBucketNotificationConfiguration" },
        { "service": "S3", "action": "PutBucketNotificationConfiguration" },
        { "service": "S3", "action": "GetBucketNotificationConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketNotificationConfiguration" }],
      "update": [],
      "delete": [{ "service": "S3", "action": "PutBucketNotificationConfiguration" }]
    },
    "bucket_object": {
      "create": [],
      "read": [
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "GetObjectTagging" }
      ],
      "update": [
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "PutObjectAcl" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "PutObjectRetention" },
        { "service": "S3", "action": "PutObjectTagging" },
        { "service": "S3", "action": "DeleteObjectTagging" }
      ],
      "delete": [
        { "service": "S3", "action": "ListObjectVersions" },
        { "service": "S3", "action": "DeleteObject" },
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "ListObjectVersions" }
      ]
    },
    "bucket_object_lock_configuration": {
      "create": [
        { "service": "S3", "action": "PutObjectLockConfiguration" },
        { "service": "S3", "action": "GetObjectLockConfiguration" }
      ],
      "read": [{ "service": "S3", "action": "GetObjectLockConfiguration" }],
      "update": [
        { "service": "S3", "action": "PutObjectLockConfiguration" },
        { "service": "S3", "action": "GetObjectLockConfiguration" }
      ],
      "delete": [{ "service": "S3", "action": "PutObjectLockConfiguration" }]
    },
    "bucket_ownership_controls": {
      "create": [
        { "service": "S3", "action": "PutBucketOwnershipControls" },
        { "service": "S3", "action": "GetBucketOwnershipControls" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketOwnershipControls" }],
      "update": [
        { "service": "S3", "action": "PutBucketOwnershipControls" },
        { "service": "S3", "action": "GetBucketOwnershipControls" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketOwnershipControls" }]
    },
    "bucket_policy": {
      "create": [
        { "service": "S3", "action": "PutBucketPolicy" },
        { "service": "S3", "action": "PutBucketPolicy" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketPolicy" }],
      "update": [],
      "delete": [{ "service": "S3", "action": "DeleteBucketPolicy" }]
    },
    "bucket_public_access_block": {
      "create": [
        { "service": "S3", "action": "PutPublicAccessBlock" },
        { "service": "S3", "action": "PutPublicAccessBlock" },
        { "service": "S3", "action": "GetPublicAccessBlock" },
        { "service": "S3", "action": "GetPublicAccessBlock" }
      ],
      "read": [
        { "service": "S3", "action": "GetPublicAccessBlock" },
        { "service": "S3", "action": "GetPublicAccessBlock" }
      ],
      "update": [{ "service": "S3", "action": "PutPublicAccessBlock" }],
      "delete": [{ "service": "S3", "action": "DeletePublicAccessBlock" }]
    },
    "bucket_replication_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "GetBucketReplication" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketReplication" }],
      "update": [
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "PutBucketReplication" },
        { "service": "S3", "action": "GetBucketReplication" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketReplication" }]
    },
    "bucket_request_payment_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketRequestPayment" },
        { "service": "S3", "action": "GetBucketRequestPayment" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketRequestPayment" }],
      "update": [
        { "service": "S3", "action": "PutBucketRequestPayment" },
        { "service": "S3", "action": "GetBucketRequestPayment" }
      ],
      "delete": [{ "service": "S3", "action": "PutBucketRequestPayment" }]
    },
    "bucket_server_side_encryption_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketEncryption" },
        { "service": "S3", "action": "GetBucketEncryption" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketEncryption" }],
      "update": [
        { "service": "S3", "action": "PutBucketEncryption" },
        { "service": "S3", "action": "GetBucketEncryption" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketEncryption" }]
    },
    "bucket_versioning": {
      "create": [
        { "service": "S3", "action": "PutBucketVersioning" },
        { "service": "S3", "action": "GetBucketVersioning" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketVersioning" }],
      "update": [
        { "service": "S3", "action": "PutBucketVersioning" },
        { "service": "S3", "action": "GetBucketVersioning" }
      ],
      "delete": [{ "service": "S3", "action": "PutBucketVersioning" }]
    },
    "bucket_website_configuration": {
      "create": [
        { "service": "S3", "action": "PutBucketWebsite" },
        { "service": "S3", "action": "GetBucketWebsite" }
      ],
      "read": [{ "service": "S3", "action": "GetBucketWebsite" }],
      "update": [
        { "service": "S3", "action": "PutBucketWebsite" },
        { "service": "S3", "action": "GetBucketWebsite" }
      ],
      "delete": [{ "service": "S3", "action": "DeleteBucketWebsite" }]
    },
    "object": {
      "create": [],
      "read": [
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "GetObjectTagging" }
      ],
      "update": [
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "PutObjectAcl" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "PutObjectRetention" },
        { "service": "S3", "action": "PutObjectTagging" },
        { "service": "S3", "action": "DeleteObjectTagging" }
      ],
      "delete": [
        { "service": "S3", "action": "ListObjectVersions" },
        { "service": "S3", "action": "DeleteObject" },
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "ListObjectVersions" }
      ]
    },
    "object_copy": {
      "create": [],
      "read": [
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "GetObjectTagging" },
        { "service": "S3", "action": "GetObjectTagging" }
      ],
      "update": [],
      "delete": [
        { "service": "S3", "action": "ListObjectVersions" },
        { "service": "S3", "action": "DeleteObject" },
        { "service": "S3", "action": "HeadObject" },
        { "service": "S3", "action": "PutObjectLegalHold" },
        { "service": "S3", "action": "ListObjectVersions" }
      ]
    }
  },
  "s3control": {
    "access_point_policy": {
      "create": [
        { "service": "S3Control", "action": "PutAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "read": [
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "update": [
        { "service": "S3Control", "action": "PutAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteAccessPointPolicy" }]
    },
    "bucket": {
      "create": [
        { "service": "S3Control", "action": "CreateBucket" },
        { "service": "S3Control", "action": "GetBucketTagging" },
        { "service": "S3Control", "action": "PutBucketTagging" },
        { "service": "S3Control", "action": "DeleteBucketTagging" },
        { "service": "S3Control", "action": "GetBucket" }
      ],
      "read": [
        { "service": "S3Control", "action": "GetBucket" },
        { "service": "S3Control", "action": "GetBucketTagging" }
      ],
      "update": [
        { "service": "S3Control", "action": "GetBucketTagging" },
        { "service": "S3Control", "action": "PutBucketTagging" },
        { "service": "S3Control", "action": "DeleteBucketTagging" },
        { "service": "S3Control", "action": "GetBucket" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteBucket" }]
    },
    "bucket_lifecycle_configuration": {
      "create": [
        { "service": "S3Control", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3Control", "action": "GetBucketLifecycleConfiguration" }
      ],
      "read": [{ "service": "S3Control", "action": "GetBucketLifecycleConfiguration" }],
      "update": [
        { "service": "S3Control", "action": "PutBucketLifecycleConfiguration" },
        { "service": "S3Control", "action": "GetBucketLifecycleConfiguration" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteBucketLifecycleConfiguration" }]
    },
    "bucket_policy": {
      "create": [
        { "service": "S3Control", "action": "PutBucketPolicy" },
        { "service": "S3Control", "action": "GetBucketPolicy" }
      ],
      "read": [{ "service": "S3Control", "action": "GetBucketPolicy" }],
      "update": [
        { "service": "S3Control", "action": "PutBucketPolicy" },
        { "service": "S3Control", "action": "GetBucketPolicy" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteBucketPolicy" }]
    },
    "multi_region_access_point": { "create": [], "read": [], "update": [], "delete": [] },
    "multi_region_access_point_policy": { "create": [], "read": [], "update": [], "delete": [] },
    "object_lambda_access_point": {
      "create": [
        { "service": "S3Control", "action": "CreateAccessPointForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointConfigurationForObjectLambda" }
      ],
      "read": [{ "service": "S3Control", "action": "GetAccessPointConfigurationForObjectLambda" }],
      "update": [
        { "service": "S3Control", "action": "PutAccessPointConfigurationForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointConfigurationForObjectLambda" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteAccessPointForObjectLambda" }]
    },
    "object_lambda_access_point_policy": {
      "create": [
        { "service": "S3Control", "action": "PutAccessPointPolicyForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointPolicyForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatusForObjectLambda" }
      ],
      "read": [
        { "service": "S3Control", "action": "GetAccessPointPolicyForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatusForObjectLambda" }
      ],
      "update": [
        { "service": "S3Control", "action": "PutAccessPointPolicyForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointPolicyForObjectLambda" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatusForObjectLambda" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteAccessPointPolicyForObjectLambda" }]
    },
    "s3_access_point": {
      "create": [
        { "service": "S3Control", "action": "CreateAccessPoint" },
        { "service": "S3Control", "action": "PutAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPoint" },
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "read": [
        { "service": "S3Control", "action": "GetAccessPoint" },
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "update": [
        { "service": "S3Control", "action": "PutAccessPointPolicy" },
        { "service": "S3Control", "action": "DeleteAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPoint" },
        { "service": "S3Control", "action": "GetAccessPointPolicy" },
        { "service": "S3Control", "action": "GetAccessPointPolicyStatus" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeleteAccessPoint" }]
    },
    "s3_account_public_access_block": {
      "create": [
        { "service": "S3Control", "action": "PutPublicAccessBlock" },
        { "service": "S3Control", "action": "GetPublicAccessBlock" }
      ],
      "read": [{ "service": "S3Control", "action": "GetPublicAccessBlock" }],
      "update": [
        { "service": "S3Control", "action": "PutPublicAccessBlock" },
        { "service": "S3Control", "action": "GetPublicAccessBlock" }
      ],
      "delete": [{ "service": "S3Control", "action": "DeletePublicAccessBlock" }]
    },
    "storage_lens_configuration": {
      "create": [
        { "service": "S3ControlClient", "action": "PutStorageLensConfiguration" },
        { "service": "S3ControlClient", "action": "GetStorageLensConfiguration" },
        { "service": "S3ControlClient", "action": "GetStorageLensConfigurationTagging" }
      ],
      "read": [
        { "service": "S3ControlClient", "action": "GetStorageLensConfiguration" },
        { "service": "S3ControlClient", "action": "GetStorageLensConfigurationTagging" }
      ],
      "update": [
        { "service": "S3ControlClient", "action": "PutStorageLensConfiguration" },
        { "service": "S3ControlClient", "action": "GetStorageLensConfigurationTagging" },
        { "service": "S3ControlClient", "action": "PutStorageLensConfigurationTagging" },
        { "service": "S3ControlClient", "action": "DeleteStorageLensConfigurationTagging" },
        { "service": "S3ControlClient", "action": "GetStorageLensConfiguration" }
      ],
      "delete": [{ "service": "S3ControlClient", "action": "DeleteStorageLensConfiguration" }]
    }
  },
  "s3outposts": {
    "endpoint": {
      "create": [
        { "service": "S3Outposts", "action": "CreateEndpoint" },
        { "service": "S3Outposts", "action": "ListEndpoints" }
      ],
      "read": [{ "service": "S3Outposts", "action": "ListEndpoints" }],
      "update": [],
      "delete": [{ "service": "S3Outposts", "action": "DeleteEndpoint" }]
    }
  },
  "sagemaker": {
    "app": {
      "create": [
        { "service": "SageMaker", "action": "CreateApp" },
        { "service": "SageMaker", "action": "ListApps" },
        { "service": "SageMaker", "action": "DescribeApp" }
      ],
      "read": [
        { "service": "SageMaker", "action": "ListApps" },
        { "service": "SageMaker", "action": "DescribeApp" }
      ],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteApp" },
        { "service": "SageMaker", "action": "ListApps" },
        { "service": "SageMaker", "action": "DescribeApp" }
      ]
    },
    "app_image_config": {
      "create": [
        { "service": "SageMaker", "action": "CreateAppImageConfig" },
        { "service": "SageMaker", "action": "DescribeAppImageConfig" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeAppImageConfig" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateAppImageConfig" },
        { "service": "SageMaker", "action": "DescribeAppImageConfig" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeleteAppImageConfig" }]
    },
    "code_repository": {
      "create": [
        { "service": "SageMaker", "action": "CreateCodeRepository" },
        { "service": "SageMaker", "action": "DescribeCodeRepository" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeCodeRepository" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateCodeRepository" },
        { "service": "SageMaker", "action": "DescribeCodeRepository" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeleteCodeRepository" }]
    },
    "data_quality_job_definition": {
      "create": [
        { "service": "SageMaker", "action": "CreateDataQualityJobDefinition" },
        { "service": "SageMaker", "action": "DescribeDataQualityJobDefinition" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeDataQualityJobDefinition" }],
      "update": [],
      "delete": [{ "service": "SageMaker", "action": "DeleteDataQualityJobDefinition" }]
    },
    "device": {
      "create": [
        { "service": "SageMaker", "action": "RegisterDevices" },
        { "service": "SageMaker", "action": "DescribeDevice" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeDevice" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateDevices" },
        { "service": "SageMaker", "action": "DescribeDevice" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeregisterDevices" }]
    },
    "device_fleet": {
      "create": [
        { "service": "SageMaker", "action": "CreateDeviceFleet" },
        { "service": "SageMaker", "action": "DescribeDeviceFleet" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeDeviceFleet" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateDeviceFleet" },
        { "service": "SageMaker", "action": "DescribeDeviceFleet" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeleteDeviceFleet" }]
    },
    "domain": {
      "create": [
        { "service": "SageMaker", "action": "CreateDomain" },
        { "service": "SageMaker", "action": "DescribeDomain" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeDomain" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateDomain" },
        { "service": "SageMaker", "action": "DescribeDomain" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteDomain" },
        { "service": "SageMaker", "action": "DescribeDomain" }
      ]
    },
    "endpoint": {
      "create": [
        { "service": "SageMaker", "action": "CreateEndpoint" },
        { "service": "SageMaker", "action": "WaitUntilEndpointInService" },
        { "service": "SageMaker", "action": "DescribeEndpoint" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeEndpoint" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateEndpoint" },
        { "service": "SageMaker", "action": "WaitUntilEndpointInService" },
        { "service": "SageMaker", "action": "DescribeEndpoint" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteEndpoint" },
        { "service": "SageMaker", "action": "WaitUntilEndpointDeleted" }
      ]
    },
    "endpoint_configuration": {
      "create": [
        { "service": "SageMaker", "action": "CreateEndpointConfig" },
        { "service": "SageMaker", "action": "DescribeEndpointConfig" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeEndpointConfig" }],
      "update": [],
      "delete": [{ "service": "SageMaker", "action": "DeleteEndpointConfig" }]
    },
    "feature_group": {
      "create": [
        { "service": "SageMaker", "action": "CreateFeatureGroup" },
        { "service": "SageMaker", "action": "CreateFeatureGroup" },
        { "service": "SageMaker", "action": "DescribeFeatureGroup" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeFeatureGroup" }],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteFeatureGroup" },
        { "service": "SageMaker", "action": "DescribeFeatureGroup" }
      ]
    },
    "flow_definition": {
      "create": [
        { "service": "SageMaker", "action": "CreateFlowDefinition" },
        { "service": "SageMaker", "action": "DescribeFlowDefinition" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeFlowDefinition" }],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteFlowDefinition" },
        { "service": "SageMaker", "action": "DescribeFlowDefinition" }
      ]
    },
    "human_task_ui": {
      "create": [
        { "service": "SageMaker", "action": "CreateHumanTaskUi" },
        { "service": "SageMaker", "action": "DescribeHumanTaskUi" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeHumanTaskUi" }],
      "update": [],
      "delete": [{ "service": "SageMaker", "action": "DeleteHumanTaskUi" }]
    },
    "image": {
      "create": [
        { "service": "SageMaker", "action": "CreateImage" },
        { "service": "SageMaker", "action": "DescribeImage" },
        { "service": "SageMaker", "action": "DescribeImage" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeImage" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateImage" },
        { "service": "SageMaker", "action": "DescribeImage" },
        { "service": "SageMaker", "action": "DescribeImage" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteImage" },
        { "service": "SageMaker", "action": "DescribeImage" }
      ]
    },
    "image_version": {
      "create": [
        { "service": "SageMaker", "action": "CreateImageVersion" },
        { "service": "SageMaker", "action": "DescribeImageVersion" },
        { "service": "SageMaker", "action": "DescribeImageVersion" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeImageVersion" }],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteImageVersion" },
        { "service": "SageMaker", "action": "DescribeImageVersion" }
      ]
    },
    "model": {
      "create": [
        { "service": "SageMaker", "action": "CreateModel" },
        { "service": "SageMaker", "action": "DescribeModel" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeModel" }],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteModel" },
        { "service": "SageMaker", "action": "DeleteModel" }
      ]
    },
    "model_package_group": {
      "create": [
        { "service": "SageMaker", "action": "CreateModelPackageGroup" },
        { "service": "SageMaker", "action": "DescribeModelPackageGroup" },
        { "service": "SageMaker", "action": "DescribeModelPackageGroup" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeModelPackageGroup" }],
      "update": [],
      "delete": [
        { "service": "SageMaker", "action": "DeleteModelPackageGroup" },
        { "service": "SageMaker", "action": "DescribeModelPackageGroup" }
      ]
    },
    "model_package_group_policy": {
      "create": [
        { "service": "SageMaker", "action": "PutModelPackageGroupPolicy" },
        { "service": "SageMaker", "action": "GetModelPackageGroupPolicy" }
      ],
      "read": [{ "service": "SageMaker", "action": "GetModelPackageGroupPolicy" }],
      "update": [],
      "delete": [{ "service": "SageMaker", "action": "DeleteModelPackageGroupPolicy" }]
    },
    "monitoring_schedule": {
      "create": [
        { "service": "SageMaker", "action": "CreateMonitoringSchedule" },
        { "service": "SageMaker", "action": "DescribeMonitoringSchedule" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeMonitoringSchedule" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateMonitoringSchedule" },
        { "service": "SageMaker", "action": "DescribeMonitoringSchedule" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteMonitoringSchedule" },
        { "service": "SageMaker", "action": "DescribeMonitoringSchedule" }
      ]
    },
    "notebook_instance": {
      "create": [
        { "service": "SageMaker", "action": "CreateNotebookInstance" },
        { "service": "SageMaker", "action": "DescribeNotebookInstance" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeNotebookInstance" }],
      "update": [
        { "service": "SageMaker", "action": "DescribeNotebookInstance" },
        { "service": "SageMaker", "action": "StopNotebookInstance" },
        { "service": "SageMaker", "action": "UpdateNotebookInstance" },
        { "service": "SageMaker", "action": "StartNotebookInstance" },
        { "service": "SageMaker", "action": "StartNotebookInstance" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DescribeNotebookInstance" },
        { "service": "SageMaker", "action": "StopNotebookInstance" },
        { "service": "SageMaker", "action": "DeleteNotebookInstance" }
      ]
    },
    "notebook_instance_lifecycle_configuration": {
      "create": [
        { "service": "SageMaker", "action": "CreateNotebookInstanceLifecycleConfig" },
        { "service": "SageMaker", "action": "DescribeNotebookInstanceLifecycleConfig" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeNotebookInstanceLifecycleConfig" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateNotebookInstanceLifecycleConfig" },
        { "service": "SageMaker", "action": "DescribeNotebookInstanceLifecycleConfig" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeleteNotebookInstanceLifecycleConfig" }]
    },
    "project": {
      "create": [
        { "service": "SageMaker", "action": "CreateProject" },
        { "service": "SageMaker", "action": "DescribeProject" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeProject" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateProject" },
        { "service": "SageMaker", "action": "DescribeProject" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteProject" },
        { "service": "SageMaker", "action": "DescribeProject" }
      ]
    },
    "servicecatalog_portfolio_status": {
      "create": [
        { "service": "SageMaker", "action": "EnableSagemakerServicecatalogPortfolio" },
        { "service": "SageMaker", "action": "DisableSagemakerServicecatalogPortfolio" },
        { "service": "SageMaker", "action": "GetSagemakerServicecatalogPortfolioStatus" }
      ],
      "read": [{ "service": "SageMaker", "action": "GetSagemakerServicecatalogPortfolioStatus" }],
      "update": [],
      "delete": []
    },
    "space": {
      "create": [
        { "service": "SageMaker", "action": "CreateSpace" },
        { "service": "SageMaker", "action": "DescribeSpace" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeSpace" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateSpace" },
        { "service": "SageMaker", "action": "DescribeSpace" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteSpace" },
        { "service": "SageMaker", "action": "DescribeSpace" }
      ]
    },
    "studio_lifecycle_config": {
      "create": [
        { "service": "SageMaker", "action": "CreateStudioLifecycleConfig" },
        { "service": "SageMaker", "action": "DescribeStudioLifecycleConfig" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeStudioLifecycleConfig" }],
      "update": [],
      "delete": [{ "service": "SageMaker", "action": "DeleteStudioLifecycleConfig" }]
    },
    "user_profile": {
      "create": [
        { "service": "SageMaker", "action": "CreateUserProfile" },
        { "service": "SageMaker", "action": "DescribeUserProfile" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeUserProfile" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateUserProfile" },
        { "service": "SageMaker", "action": "DescribeUserProfile" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteUserProfile" },
        { "service": "SageMaker", "action": "DescribeUserProfile" }
      ]
    },
    "workforce": {
      "create": [
        { "service": "SageMaker", "action": "CreateWorkforce" },
        { "service": "SageMaker", "action": "DescribeWorkforce" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeWorkforce" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateWorkforce" },
        { "service": "SageMaker", "action": "DescribeWorkforce" }
      ],
      "delete": [
        { "service": "SageMaker", "action": "DeleteWorkforce" },
        { "service": "SageMaker", "action": "DescribeWorkforce" }
      ]
    },
    "workteam": {
      "create": [
        { "service": "SageMaker", "action": "CreateWorkteam" },
        { "service": "SageMaker", "action": "DescribeWorkteam" }
      ],
      "read": [{ "service": "SageMaker", "action": "DescribeWorkteam" }],
      "update": [
        { "service": "SageMaker", "action": "UpdateWorkteam" },
        { "service": "SageMaker", "action": "DescribeWorkteam" }
      ],
      "delete": [{ "service": "SageMaker", "action": "DeleteWorkteam" }]
    }
  },
  "scheduler": {
    "schedule": {
      "create": [
        { "service": "SchedulerClient", "action": "CreateSchedule" },
        { "service": "SchedulerClient", "action": "GetSchedule" }
      ],
      "read": [{ "service": "SchedulerClient", "action": "GetSchedule" }],
      "update": [
        { "service": "SchedulerClient", "action": "UpdateSchedule" },
        { "service": "SchedulerClient", "action": "GetSchedule" }
      ],
      "delete": [{ "service": "SchedulerClient", "action": "DeleteSchedule" }]
    },
    "schedule_group": {
      "create": [
        { "service": "SchedulerClient", "action": "CreateScheduleGroup" },
        { "service": "SchedulerClient", "action": "GetScheduleGroup" }
      ],
      "read": [{ "service": "SchedulerClient", "action": "GetScheduleGroup" }],
      "update": [],
      "delete": [
        { "service": "SchedulerClient", "action": "DeleteScheduleGroup" },
        { "service": "SchedulerClient", "action": "GetScheduleGroup" }
      ]
    }
  },
  "schemas": {
    "discoverer": {
      "create": [
        { "service": "Schemas", "action": "CreateDiscoverer" },
        { "service": "Schemas", "action": "DescribeDiscoverer" }
      ],
      "read": [{ "service": "Schemas", "action": "DescribeDiscoverer" }],
      "update": [
        { "service": "Schemas", "action": "UpdateDiscoverer" },
        { "service": "Schemas", "action": "DescribeDiscoverer" }
      ],
      "delete": [{ "service": "Schemas", "action": "DeleteDiscoverer" }]
    },
    "registry": {
      "create": [
        { "service": "Schemas", "action": "CreateRegistry" },
        { "service": "Schemas", "action": "DescribeRegistry" }
      ],
      "read": [{ "service": "Schemas", "action": "DescribeRegistry" }],
      "update": [
        { "service": "Schemas", "action": "UpdateRegistry" },
        { "service": "Schemas", "action": "DescribeRegistry" }
      ],
      "delete": [{ "service": "Schemas", "action": "DeleteRegistry" }]
    },
    "registry_policy": {
      "create": [
        { "service": "Schemas", "action": "PutResourcePolicy" },
        { "service": "Schemas", "action": "GetResourcePolicy" }
      ],
      "read": [{ "service": "Schemas", "action": "GetResourcePolicy" }],
      "update": [
        { "service": "Schemas", "action": "PutResourcePolicy" },
        { "service": "Schemas", "action": "GetResourcePolicy" }
      ],
      "delete": [{ "service": "Schemas", "action": "DeleteResourcePolicy" }]
    },
    "schema": {
      "create": [
        { "service": "Schemas", "action": "CreateSchema" },
        { "service": "Schemas", "action": "DescribeSchema" }
      ],
      "read": [{ "service": "Schemas", "action": "DescribeSchema" }],
      "update": [
        { "service": "Schemas", "action": "UpdateSchema" },
        { "service": "Schemas", "action": "DescribeSchema" }
      ],
      "delete": [{ "service": "Schemas", "action": "DeleteSchema" }]
    }
  },
  "secretsmanager": {
    "secret": {
      "create": [
        { "service": "SecretsManager", "action": "CreateSecret" },
        { "service": "SecretsManager", "action": "CreateSecret" },
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "GetResourcePolicy" }
      ],
      "read": [
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "GetResourcePolicy" }
      ],
      "update": [
        { "service": "SecretsManager", "action": "RemoveRegionsFromReplication" },
        { "service": "SecretsManager", "action": "ReplicateSecretToRegions" },
        { "service": "SecretsManager", "action": "UpdateSecret" },
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "DeleteResourcePolicy" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "CancelRotateSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "GetResourcePolicy" }
      ],
      "delete": [
        { "service": "SecretsManager", "action": "RemoveRegionsFromReplication" },
        { "service": "SecretsManager", "action": "DeleteSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" }
      ]
    },
    "secret_policy": {
      "create": [
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "GetResourcePolicy" }
      ],
      "read": [{ "service": "SecretsManager", "action": "GetResourcePolicy" }],
      "update": [
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "PutResourcePolicy" },
        { "service": "SecretsManager", "action": "GetResourcePolicy" }
      ],
      "delete": [{ "service": "SecretsManager", "action": "DeleteResourcePolicy" }]
    },
    "secret_rotation": {
      "create": [
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" }
      ],
      "read": [
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" }
      ],
      "update": [
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "RotateSecret" },
        { "service": "SecretsManager", "action": "CancelRotateSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" },
        { "service": "SecretsManager", "action": "DescribeSecret" }
      ],
      "delete": [{ "service": "SecretsManager", "action": "CancelRotateSecret" }]
    },
    "secret_version": {
      "create": [
        { "service": "SecretsManager", "action": "PutSecretValue" },
        { "service": "SecretsManager", "action": "GetSecretValue" },
        { "service": "SecretsManager", "action": "GetSecretValue" }
      ],
      "read": [
        { "service": "SecretsManager", "action": "GetSecretValue" },
        { "service": "SecretsManager", "action": "GetSecretValue" }
      ],
      "update": [
        { "service": "SecretsManager", "action": "UpdateSecretVersionStage" },
        { "service": "SecretsManager", "action": "UpdateSecretVersionStage" },
        { "service": "SecretsManager", "action": "GetSecretValue" },
        { "service": "SecretsManager", "action": "GetSecretValue" }
      ],
      "delete": [{ "service": "SecretsManager", "action": "UpdateSecretVersionStage" }]
    }
  },
  "securityhub": {
    "account": { "create": [], "read": [], "update": [], "delete": [] },
    "action_target": {
      "create": [
        { "service": "SecurityHub", "action": "CreateActionTarget" },
        { "service": "SecurityHub", "action": "DescribeActionTargets" }
      ],
      "read": [{ "service": "SecurityHub", "action": "DescribeActionTargets" }],
      "update": [{ "service": "SecurityHub", "action": "UpdateActionTarget" }],
      "delete": [{ "service": "SecurityHub", "action": "DeleteActionTarget" }]
    },
    "finding_aggregator": {
      "create": [
        { "service": "SecurityHub", "action": "CreateFindingAggregator" },
        { "service": "SecurityHub", "action": "ListFindingAggregators" },
        { "service": "SecurityHub", "action": "GetFindingAggregator" }
      ],
      "read": [
        { "service": "SecurityHub", "action": "ListFindingAggregators" },
        { "service": "SecurityHub", "action": "GetFindingAggregator" }
      ],
      "update": [
        { "service": "SecurityHub", "action": "UpdateFindingAggregator" },
        { "service": "SecurityHub", "action": "ListFindingAggregators" },
        { "service": "SecurityHub", "action": "GetFindingAggregator" }
      ],
      "delete": [{ "service": "SecurityHub", "action": "DeleteFindingAggregator" }]
    },
    "insight": {
      "create": [
        { "service": "SecurityHub", "action": "CreateInsight" },
        { "service": "SecurityHub", "action": "GetInsights" }
      ],
      "read": [{ "service": "SecurityHub", "action": "GetInsights" }],
      "update": [
        { "service": "SecurityHub", "action": "UpdateInsight" },
        { "service": "SecurityHub", "action": "GetInsights" }
      ],
      "delete": [{ "service": "SecurityHub", "action": "DeleteInsight" }]
    },
    "invite_accepter": {
      "create": [
        { "service": "SecurityHub", "action": "ListInvitations" },
        { "service": "SecurityHub", "action": "AcceptInvitation" },
        { "service": "SecurityHub", "action": "GetMasterAccount" }
      ],
      "read": [{ "service": "SecurityHub", "action": "GetMasterAccount" }],
      "update": [],
      "delete": [{ "service": "SecurityHub", "action": "DisassociateFromMasterAccount" }]
    },
    "member": {
      "create": [
        { "service": "SecurityHub", "action": "CreateMembers" },
        { "service": "SecurityHub", "action": "InviteMembers" },
        { "service": "SecurityHub", "action": "GetMembers" }
      ],
      "read": [{ "service": "SecurityHub", "action": "GetMembers" }],
      "update": [],
      "delete": [
        { "service": "SecurityHub", "action": "DisassociateMembers" },
        { "service": "SecurityHub", "action": "DeleteMembers" }
      ]
    },
    "organization_admin_account": {
      "create": [
        { "service": "SecurityHub", "action": "EnableOrganizationAdminAccount" },
        { "service": "SecurityHub", "action": "ListOrganizationAdminAccounts" }
      ],
      "read": [{ "service": "SecurityHub", "action": "ListOrganizationAdminAccounts" }],
      "update": [],
      "delete": [
        { "service": "SecurityHub", "action": "DisableOrganizationAdminAccount" },
        { "service": "SecurityHub", "action": "ListOrganizationAdminAccounts" }
      ]
    },
    "organization_configuration": {
      "create": [
        { "service": "SecurityHub", "action": "UpdateOrganizationConfiguration" },
        { "service": "SecurityHub", "action": "DescribeOrganizationConfiguration" }
      ],
      "read": [{ "service": "SecurityHub", "action": "DescribeOrganizationConfiguration" }],
      "update": [],
      "delete": []
    },
    "product_subscription": {
      "create": [
        { "service": "SecurityHub", "action": "EnableImportFindingsForProduct" },
        { "service": "SecurityHub", "action": "ListEnabledProductsForImport" }
      ],
      "read": [{ "service": "SecurityHub", "action": "ListEnabledProductsForImport" }],
      "update": [],
      "delete": [{ "service": "SecurityHub", "action": "DisableImportFindingsForProduct" }]
    },
    "standards_control": {
      "create": [
        { "service": "SecurityHub", "action": "UpdateStandardsControl" },
        { "service": "SecurityHub", "action": "DescribeStandardsControls" }
      ],
      "read": [{ "service": "SecurityHub", "action": "DescribeStandardsControls" }],
      "update": [],
      "delete": []
    },
    "standards_subscription": {
      "create": [
        { "service": "SecurityHub", "action": "BatchEnableStandards" },
        { "service": "SecurityHub", "action": "GetEnabledStandards" }
      ],
      "read": [{ "service": "SecurityHub", "action": "GetEnabledStandards" }],
      "update": [],
      "delete": [
        { "service": "SecurityHub", "action": "BatchDisableStandards" },
        { "service": "SecurityHub", "action": "GetEnabledStandards" }
      ]
    }
  },
  "serverlessrepo": {
    "serverlessapplicationrepository_cloudformation_stack": {
      "create": [
        { "service": "CloudFormation", "action": "ExecuteChangeSet" },
        { "service": "ServerlessRepo", "action": "GetApplication" }
      ],
      "read": [{ "service": "ServerlessRepo", "action": "GetApplication" }],
      "update": [
        { "service": "CloudFormation", "action": "ExecuteChangeSet" },
        { "service": "ServerlessRepo", "action": "GetApplication" }
      ],
      "delete": [{ "service": "CloudFormation", "action": "DeleteStack" }]
    }
  },
  "servicecatalog": {
    "budget_resource_association": {
      "create": [
        { "service": "ServiceCatalog", "action": "AssociateBudgetWithResource" },
        { "service": "ServiceCatalog", "action": "AssociateBudgetWithResource" },
        { "service": "ServiceCatalog", "action": "ListBudgetsForResource" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "ListBudgetsForResource" }],
      "update": [],
      "delete": [
        { "service": "ServiceCatalog", "action": "DisassociateBudgetFromResource" },
        { "service": "ServiceCatalog", "action": "ListBudgetsForResource" }
      ]
    },
    "constraint": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreateConstraint" },
        { "service": "ServiceCatalog", "action": "CreateConstraint" },
        { "service": "ServiceCatalog", "action": "DescribeConstraint" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribeConstraint" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateConstraint" },
        { "service": "ServiceCatalog", "action": "UpdateConstraint" },
        { "service": "ServiceCatalog", "action": "DescribeConstraint" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeleteConstraint" },
        { "service": "ServiceCatalog", "action": "DescribeConstraint" }
      ]
    },
    "organizations_access": {
      "create": [
        { "service": "ServiceCatalog", "action": "EnableAWSOrganizationsAccess" },
        { "service": "ServiceCatalog", "action": "GetAWSOrganizationsAccessStatus" },
        { "service": "ServiceCatalog", "action": "DisableAWSOrganizationsAccess" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "GetAWSOrganizationsAccessStatus" }],
      "update": [],
      "delete": [
        { "service": "ServiceCatalog", "action": "EnableAWSOrganizationsAccess" },
        { "service": "ServiceCatalog", "action": "DisableAWSOrganizationsAccess" }
      ]
    },
    "portfolio": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreatePortfolio" },
        { "service": "ServiceCatalog", "action": "DescribePortfolio" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribePortfolio" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdatePortfolio" },
        { "service": "ServiceCatalog", "action": "DescribePortfolio" }
      ],
      "delete": [{ "service": "ServiceCatalog", "action": "DeletePortfolio" }]
    },
    "portfolio_share": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreatePortfolioShare" },
        { "service": "ServiceCatalog", "action": "CreatePortfolioShare" },
        { "service": "ServiceCatalog", "action": "DescribePortfolioShareStatus" },
        { "service": "ServiceCatalog", "action": "DescribePortfolioShares" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribePortfolioShares" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdatePortfolioShare" },
        { "service": "ServiceCatalog", "action": "UpdatePortfolioShare" },
        { "service": "ServiceCatalog", "action": "DescribePortfolioShares" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeletePortfolioShare" },
        { "service": "ServiceCatalog", "action": "DescribePortfolioShareStatus" },
        { "service": "ServiceCatalog", "action": "DescribePortfolioShares" }
      ]
    },
    "principal_portfolio_association": {
      "create": [
        { "service": "ServiceCatalog", "action": "AssociatePrincipalWithPortfolio" },
        { "service": "ServiceCatalog", "action": "AssociatePrincipalWithPortfolio" },
        { "service": "ServiceCatalog", "action": "ListPrincipalsForPortfolio" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "ListPrincipalsForPortfolio" }],
      "update": [],
      "delete": [
        { "service": "ServiceCatalog", "action": "DisassociatePrincipalFromPortfolio" },
        { "service": "ServiceCatalog", "action": "ListPrincipalsForPortfolio" }
      ]
    },
    "product": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreateProduct" },
        { "service": "ServiceCatalog", "action": "CreateProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProductAsAdmin" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribeProductAsAdmin" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateProduct" },
        { "service": "ServiceCatalog", "action": "UpdateProduct" },
        { "service": "ServiceCatalog", "action": "UpdateProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProductAsAdmin" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeleteProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProductAsAdmin" }
      ]
    },
    "product_portfolio_association": {
      "create": [
        { "service": "ServiceCatalog", "action": "AssociateProductWithPortfolio" },
        { "service": "ServiceCatalog", "action": "AssociateProductWithPortfolio" },
        { "service": "ServiceCatalog", "action": "ListPortfoliosForProduct" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "ListPortfoliosForProduct" }],
      "update": [],
      "delete": [
        { "service": "ServiceCatalog", "action": "DisassociateProductFromPortfolio" },
        { "service": "ServiceCatalog", "action": "ListPortfoliosForProduct" }
      ]
    },
    "provisioned_product": {
      "create": [
        { "service": "ServiceCatalog", "action": "ProvisionProduct" },
        { "service": "ServiceCatalog", "action": "ProvisionProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeRecord" }
      ],
      "read": [
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeRecord" }
      ],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "UpdateProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeRecord" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "TerminateProvisionedProduct" },
        { "service": "ServiceCatalog", "action": "DescribeProvisionedProduct" }
      ]
    },
    "provisioning_artifact": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "CreateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "UpdateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "UpdateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "DescribeProvisioningArtifact" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribeProvisioningArtifact" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "UpdateProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "DescribeProvisioningArtifact" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeleteProvisioningArtifact" },
        { "service": "ServiceCatalog", "action": "DescribeProvisioningArtifact" }
      ]
    },
    "service_action": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreateServiceAction" },
        { "service": "ServiceCatalog", "action": "CreateServiceAction" },
        { "service": "ServiceCatalog", "action": "DescribeServiceAction" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribeServiceAction" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateServiceAction" },
        { "service": "ServiceCatalog", "action": "UpdateServiceAction" },
        { "service": "ServiceCatalog", "action": "DescribeServiceAction" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeleteServiceAction" },
        { "service": "ServiceCatalog", "action": "DeleteServiceAction" },
        { "service": "ServiceCatalog", "action": "DescribeServiceAction" }
      ]
    },
    "tag_option": {
      "create": [
        { "service": "ServiceCatalog", "action": "CreateTagOption" },
        { "service": "ServiceCatalog", "action": "CreateTagOption" },
        { "service": "ServiceCatalog", "action": "UpdateTagOption" },
        { "service": "ServiceCatalog", "action": "DescribeTagOption" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "DescribeTagOption" }],
      "update": [
        { "service": "ServiceCatalog", "action": "UpdateTagOption" },
        { "service": "ServiceCatalog", "action": "UpdateTagOption" },
        { "service": "ServiceCatalog", "action": "DescribeTagOption" }
      ],
      "delete": [
        { "service": "ServiceCatalog", "action": "DeleteTagOption" },
        { "service": "ServiceCatalog", "action": "DescribeTagOption" }
      ]
    },
    "tag_option_resource_association": {
      "create": [
        { "service": "ServiceCatalog", "action": "AssociateTagOptionWithResource" },
        { "service": "ServiceCatalog", "action": "AssociateTagOptionWithResource" },
        { "service": "ServiceCatalog", "action": "ListResourcesForTagOption" }
      ],
      "read": [{ "service": "ServiceCatalog", "action": "ListResourcesForTagOption" }],
      "update": [],
      "delete": [
        { "service": "ServiceCatalog", "action": "DisassociateTagOptionFromResource" },
        { "service": "ServiceCatalog", "action": "ListResourcesForTagOption" }
      ]
    }
  },
  "servicediscovery": {
    "service_discovery_http_namespace": {
      "create": [
        { "service": "ServiceDiscovery", "action": "CreateHttpNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "GetNamespace" }
      ],
      "read": [{ "service": "ServiceDiscovery", "action": "GetNamespace" }],
      "update": [],
      "delete": [
        { "service": "ServiceDiscovery", "action": "DeleteNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" }
      ]
    },
    "service_discovery_instance": {
      "create": [
        { "service": "ServiceDiscovery", "action": "RegisterInstance" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "GetInstance" }
      ],
      "read": [{ "service": "ServiceDiscovery", "action": "GetInstance" }],
      "update": [],
      "delete": [
        { "service": "ServiceDiscovery", "action": "DeregisterInstance" },
        { "service": "ServiceDiscovery", "action": "GetOperation" }
      ]
    },
    "service_discovery_private_dns_namespace": {
      "create": [
        { "service": "ServiceDiscovery", "action": "CreatePrivateDnsNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "GetNamespace" }
      ],
      "read": [{ "service": "ServiceDiscovery", "action": "GetNamespace" }],
      "update": [],
      "delete": [
        { "service": "ServiceDiscovery", "action": "DeleteNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" }
      ]
    },
    "service_discovery_public_dns_namespace": {
      "create": [
        { "service": "ServiceDiscovery", "action": "CreatePublicDnsNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "GetNamespace" }
      ],
      "read": [{ "service": "ServiceDiscovery", "action": "GetNamespace" }],
      "update": [],
      "delete": [
        { "service": "ServiceDiscovery", "action": "DeleteNamespace" },
        { "service": "ServiceDiscovery", "action": "GetOperation" }
      ]
    },
    "service_discovery_service": {
      "create": [
        { "service": "ServiceDiscovery", "action": "CreateService" },
        { "service": "ServiceDiscovery", "action": "GetService" }
      ],
      "read": [{ "service": "ServiceDiscovery", "action": "GetService" }],
      "update": [
        { "service": "ServiceDiscovery", "action": "UpdateService" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "GetService" }
      ],
      "delete": [
        { "service": "ServiceDiscovery", "action": "ListInstances" },
        { "service": "ServiceDiscovery", "action": "DeregisterInstance" },
        { "service": "ServiceDiscovery", "action": "GetOperation" },
        { "service": "ServiceDiscovery", "action": "DeleteService" }
      ]
    }
  },
  "servicequotas": {
    "service_quota": {
      "create": [
        { "service": "ServiceQuotas", "action": "GetAWSDefaultServiceQuota" },
        { "service": "ServiceQuotas", "action": "GetServiceQuota" },
        { "service": "ServiceQuotas", "action": "RequestServiceQuotaIncrease" },
        { "service": "ServiceQuotas", "action": "GetRequestedServiceQuotaChange" }
      ],
      "read": [
        { "service": "ServiceQuotas", "action": "GetAWSDefaultServiceQuota" },
        { "service": "ServiceQuotas", "action": "GetServiceQuota" },
        { "service": "ServiceQuotas", "action": "GetRequestedServiceQuotaChange" }
      ],
      "update": [
        { "service": "ServiceQuotas", "action": "RequestServiceQuotaIncrease" },
        { "service": "ServiceQuotas", "action": "GetAWSDefaultServiceQuota" },
        { "service": "ServiceQuotas", "action": "GetServiceQuota" },
        { "service": "ServiceQuotas", "action": "GetRequestedServiceQuotaChange" }
      ],
      "delete": []
    }
  },
  "ses": {
    "active_receipt_rule_set": {
      "create": [
        { "service": "SES", "action": "SetActiveReceiptRuleSet" },
        { "service": "SES", "action": "DescribeActiveReceiptRuleSet" }
      ],
      "read": [{ "service": "SES", "action": "DescribeActiveReceiptRuleSet" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "SetActiveReceiptRuleSet" }]
    },
    "configuration_set": {
      "create": [
        { "service": "SES", "action": "CreateConfigurationSet" },
        { "service": "SES", "action": "PutConfigurationSetDeliveryOptions" },
        { "service": "SES", "action": "UpdateConfigurationSetReputationMetricsEnabled" },
        { "service": "SES", "action": "UpdateConfigurationSetSendingEnabled" },
        { "service": "SES", "action": "CreateConfigurationSetTrackingOptions" },
        { "service": "SES", "action": "DescribeConfigurationSet" }
      ],
      "read": [{ "service": "SES", "action": "DescribeConfigurationSet" }],
      "update": [
        { "service": "SES", "action": "PutConfigurationSetDeliveryOptions" },
        { "service": "SES", "action": "UpdateConfigurationSetReputationMetricsEnabled" },
        { "service": "SES", "action": "UpdateConfigurationSetSendingEnabled" },
        { "service": "SES", "action": "UpdateConfigurationSetTrackingOptions" },
        { "service": "SES", "action": "DescribeConfigurationSet" }
      ],
      "delete": [{ "service": "SES", "action": "DeleteConfigurationSet" }]
    },
    "domain_dkim": {
      "create": [
        { "service": "SES", "action": "VerifyDomainDkim" },
        { "service": "SES", "action": "GetIdentityDkimAttributes" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityDkimAttributes" }],
      "update": [],
      "delete": []
    },
    "domain_identity": {
      "create": [
        { "service": "SES", "action": "VerifyDomainIdentity" },
        { "service": "SES", "action": "GetIdentityVerificationAttributes" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityVerificationAttributes" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "DeleteIdentity" }]
    },
    "domain_identity_verification": {
      "create": [{ "service": "SES", "action": "GetIdentityVerificationAttributes" }],
      "read": [{ "service": "SES", "action": "GetIdentityVerificationAttributes" }],
      "update": [],
      "delete": []
    },
    "domain_mail_from": {
      "create": [
        { "service": "SES", "action": "SetIdentityMailFromDomain" },
        { "service": "SES", "action": "GetIdentityMailFromDomainAttributes" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityMailFromDomainAttributes" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "SetIdentityMailFromDomain" }]
    },
    "email_identity": {
      "create": [
        { "service": "SES", "action": "VerifyEmailIdentity" },
        { "service": "SES", "action": "GetIdentityVerificationAttributes" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityVerificationAttributes" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "DeleteIdentity" }]
    },
    "event_destination": {
      "create": [
        { "service": "SES", "action": "CreateConfigurationSetEventDestination" },
        { "service": "SES", "action": "DescribeConfigurationSet" }
      ],
      "read": [{ "service": "SES", "action": "DescribeConfigurationSet" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "DeleteConfigurationSetEventDestination" }]
    },
    "identity_notification_topic": {
      "create": [
        { "service": "SES", "action": "SetIdentityNotificationTopic" },
        { "service": "SES", "action": "SetIdentityHeadersInNotificationsEnabled" },
        { "service": "SES", "action": "GetIdentityNotificationAttributes" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityNotificationAttributes" }],
      "update": [],
      "delete": [
        { "service": "SES", "action": "SetIdentityNotificationTopic" },
        { "service": "SES", "action": "GetIdentityNotificationAttributes" }
      ]
    },
    "identity_policy": {
      "create": [
        { "service": "SES", "action": "PutIdentityPolicy" },
        { "service": "SES", "action": "GetIdentityPolicies" }
      ],
      "read": [{ "service": "SES", "action": "GetIdentityPolicies" }],
      "update": [
        { "service": "SES", "action": "PutIdentityPolicy" },
        { "service": "SES", "action": "GetIdentityPolicies" }
      ],
      "delete": [{ "service": "SES", "action": "DeleteIdentityPolicy" }]
    },
    "receipt_filter": {
      "create": [
        { "service": "SES", "action": "CreateReceiptFilter" },
        { "service": "SES", "action": "ListReceiptFilters" }
      ],
      "read": [{ "service": "SES", "action": "ListReceiptFilters" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "DeleteReceiptFilter" }]
    },
    "receipt_rule": {
      "create": [
        { "service": "SES", "action": "CreateReceiptRule" },
        { "service": "SES", "action": "DescribeReceiptRule" }
      ],
      "read": [{ "service": "SES", "action": "DescribeReceiptRule" }],
      "update": [
        { "service": "SES", "action": "UpdateReceiptRule" },
        { "service": "SES", "action": "SetReceiptRulePosition" },
        { "service": "SES", "action": "DescribeReceiptRule" }
      ],
      "delete": [{ "service": "SES", "action": "DeleteReceiptRule" }]
    },
    "receipt_rule_set": {
      "create": [
        { "service": "SES", "action": "CreateReceiptRuleSet" },
        { "service": "SES", "action": "DescribeReceiptRuleSet" }
      ],
      "read": [{ "service": "SES", "action": "DescribeReceiptRuleSet" }],
      "update": [],
      "delete": [{ "service": "SES", "action": "DeleteReceiptRuleSet" }]
    },
    "template": {
      "create": [
        { "service": "SES", "action": "CreateTemplate" },
        { "service": "SES", "action": "GetTemplate" }
      ],
      "read": [{ "service": "SES", "action": "GetTemplate" }],
      "update": [
        { "service": "SES", "action": "UpdateTemplate" },
        { "service": "SES", "action": "GetTemplate" }
      ],
      "delete": [{ "service": "SES", "action": "DeleteTemplate" }]
    }
  },
  "sesv2": {
    "configuration_set": {
      "create": [
        { "service": "SESV2Client", "action": "CreateConfigurationSet" },
        { "service": "SESV2Client", "action": "GetConfigurationSet" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetConfigurationSet" }],
      "update": [
        { "service": "SESV2Client", "action": "PutConfigurationSetDeliveryOptions" },
        { "service": "SESV2Client", "action": "PutConfigurationSetReputationOptions" },
        { "service": "SESV2Client", "action": "PutConfigurationSetSendingOptions" },
        { "service": "SESV2Client", "action": "PutConfigurationSetSuppressionOptions" },
        { "service": "SESV2Client", "action": "PutConfigurationSetTrackingOptions" },
        { "service": "SESV2Client", "action": "PutConfigurationSetVdmOptions" },
        { "service": "SESV2Client", "action": "GetConfigurationSet" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "DeleteConfigurationSet" }]
    },
    "configuration_set_event_destination": {
      "create": [
        { "service": "SESV2Client", "action": "CreateConfigurationSetEventDestination" },
        { "service": "SESV2Client", "action": "GetConfigurationSetEventDestinations" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetConfigurationSetEventDestinations" }],
      "update": [
        { "service": "SESV2Client", "action": "UpdateConfigurationSetEventDestination" },
        { "service": "SESV2Client", "action": "GetConfigurationSetEventDestinations" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "DeleteConfigurationSetEventDestination" }]
    },
    "contact_list": {
      "create": [
        { "service": "SESV2Client", "action": "CreateContactList" },
        { "service": "SESV2Client", "action": "GetContactList" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetContactList" }],
      "update": [
        { "service": "SESV2Client", "action": "UpdateContactList" },
        { "service": "SESV2Client", "action": "GetContactList" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "DeleteContactList" }]
    },
    "dedicated_ip_assignment": {
      "create": [
        { "service": "SESV2Client", "action": "PutDedicatedIpInPool" },
        { "service": "SESV2Client", "action": "GetDedicatedIp" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetDedicatedIp" }],
      "update": [],
      "delete": [{ "service": "SESV2Client", "action": "PutDedicatedIpInPool" }]
    },
    "dedicated_ip_pool": {
      "create": [
        { "service": "SESV2Client", "action": "CreateDedicatedIpPool" },
        { "service": "SESV2Client", "action": "GetDedicatedIpPool" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetDedicatedIpPool" }],
      "update": [],
      "delete": [{ "service": "SESV2Client", "action": "DeleteDedicatedIpPool" }]
    },
    "email_identity": {
      "create": [
        { "service": "SESV2Client", "action": "CreateEmailIdentity" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetEmailIdentity" }],
      "update": [
        { "service": "SESV2Client", "action": "PutEmailIdentityConfigurationSetAttributes" },
        { "service": "SESV2Client", "action": "PutEmailIdentityDkimSigningAttributes" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "DeleteEmailIdentity" }]
    },
    "email_identity_feedback_attributes": {
      "create": [
        { "service": "SESV2Client", "action": "PutEmailIdentityFeedbackAttributes" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetEmailIdentity" }],
      "update": [
        { "service": "SESV2Client", "action": "PutEmailIdentityFeedbackAttributes" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "PutEmailIdentityFeedbackAttributes" }]
    },
    "email_identity_mail_from_attributes": {
      "create": [
        { "service": "SESV2Client", "action": "PutEmailIdentityMailFromAttributes" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "read": [{ "service": "SESV2Client", "action": "GetEmailIdentity" }],
      "update": [
        { "service": "SESV2Client", "action": "PutEmailIdentityMailFromAttributes" },
        { "service": "SESV2Client", "action": "GetEmailIdentity" }
      ],
      "delete": [{ "service": "SESV2Client", "action": "PutEmailIdentityMailFromAttributes" }]
    }
  },
  "sfn": {
    "activity": {
      "create": [
        { "service": "SFN", "action": "CreateActivity" },
        { "service": "SFN", "action": "DescribeActivity" }
      ],
      "read": [{ "service": "SFN", "action": "DescribeActivity" }],
      "update": [],
      "delete": [{ "service": "SFN", "action": "DeleteActivity" }]
    },
    "state_machine": {
      "create": [
        { "service": "SFN", "action": "CreateStateMachine" },
        { "service": "SFN", "action": "DescribeStateMachine" }
      ],
      "read": [{ "service": "SFN", "action": "DescribeStateMachine" }],
      "update": [
        { "service": "SFN", "action": "UpdateStateMachine" },
        { "service": "SFN", "action": "DescribeStateMachine" }
      ],
      "delete": [
        { "service": "SFN", "action": "DeleteStateMachine" },
        { "service": "SFN", "action": "DescribeStateMachine" }
      ]
    }
  },
  "shield": {
    "protection": {
      "create": [
        { "service": "Shield", "action": "CreateProtection" },
        { "service": "Shield", "action": "DescribeProtection" }
      ],
      "read": [{ "service": "Shield", "action": "DescribeProtection" }],
      "update": [],
      "delete": [{ "service": "Shield", "action": "DeleteProtection" }]
    },
    "protection_group": {
      "create": [
        { "service": "Shield", "action": "CreateProtectionGroup" },
        { "service": "Shield", "action": "DescribeProtectionGroup" }
      ],
      "read": [{ "service": "Shield", "action": "DescribeProtectionGroup" }],
      "update": [
        { "service": "Shield", "action": "UpdateProtectionGroup" },
        { "service": "Shield", "action": "DescribeProtectionGroup" }
      ],
      "delete": [{ "service": "Shield", "action": "DeleteProtectionGroup" }]
    },
    "protection_health_check_association": {
      "create": [
        { "service": "Shield", "action": "AssociateHealthCheck" },
        { "service": "Shield", "action": "DescribeProtection" }
      ],
      "read": [{ "service": "Shield", "action": "DescribeProtection" }],
      "update": [],
      "delete": [{ "service": "Shield", "action": "DisassociateHealthCheck" }]
    }
  },
  "signer": {
    "signing_job": {
      "create": [
        { "service": "Signer", "action": "StartSigningJob" },
        { "service": "Signer", "action": "WaitUntilSuccessfulSigningJob" },
        { "service": "Signer", "action": "DescribeSigningJob" }
      ],
      "read": [{ "service": "Signer", "action": "DescribeSigningJob" }],
      "update": [],
      "delete": []
    },
    "signing_profile": {
      "create": [
        { "service": "Signer", "action": "PutSigningProfile" },
        { "service": "Signer", "action": "GetSigningProfile" }
      ],
      "read": [{ "service": "Signer", "action": "GetSigningProfile" }],
      "update": [],
      "delete": [{ "service": "Signer", "action": "CancelSigningProfile" }]
    },
    "signing_profile_permission": {
      "create": [
        { "service": "Signer", "action": "ListProfilePermissions" },
        { "service": "Signer", "action": "AddProfilePermission" },
        { "service": "Signer", "action": "AddProfilePermission" },
        { "service": "Signer", "action": "ListProfilePermissions" },
        { "service": "Signer", "action": "ListProfilePermissions" }
      ],
      "read": [
        { "service": "Signer", "action": "ListProfilePermissions" },
        { "service": "Signer", "action": "ListProfilePermissions" }
      ],
      "update": [],
      "delete": [
        { "service": "Signer", "action": "ListProfilePermissions" },
        { "service": "Signer", "action": "RemoveProfilePermission" },
        { "service": "Signer", "action": "ListProfilePermissions" }
      ]
    }
  },
  "sns": {
    "platform_application": {
      "create": [
        { "service": "SNS", "action": "CreatePlatformApplication" },
        { "service": "SNS", "action": "GetPlatformApplicationAttributes" }
      ],
      "read": [{ "service": "SNS", "action": "GetPlatformApplicationAttributes" }],
      "update": [
        { "service": "SNS", "action": "SetPlatformApplicationAttributes" },
        { "service": "SNS", "action": "GetPlatformApplicationAttributes" }
      ],
      "delete": [{ "service": "SNS", "action": "DeletePlatformApplication" }]
    },
    "sms_preferences": {
      "create": [{ "service": "SNS", "action": "SetSMSAttributes" }],
      "read": [{ "service": "SNS", "action": "GetSMSAttributes" }],
      "update": [],
      "delete": [{ "service": "SNS", "action": "SetSMSAttributes" }]
    },
    "topic": {
      "create": [
        { "service": "SNS", "action": "CreateTopic" },
        { "service": "SNS", "action": "CreateTopic" },
        { "service": "SNS", "action": "SetTopicAttributes" },
        { "service": "SNS", "action": "GetTopicAttributes" }
      ],
      "read": [{ "service": "SNS", "action": "GetTopicAttributes" }],
      "update": [
        { "service": "SNS", "action": "SetTopicAttributes" },
        { "service": "SNS", "action": "GetTopicAttributes" }
      ],
      "delete": [{ "service": "SNS", "action": "DeleteTopic" }]
    },
    "topic_data_protection_policy": {
      "create": [
        { "service": "SNS", "action": "PutDataProtectionPolicy" },
        { "service": "SNS", "action": "GetDataProtectionPolicy" }
      ],
      "read": [{ "service": "SNS", "action": "GetDataProtectionPolicy" }],
      "update": [],
      "delete": [{ "service": "SNS", "action": "PutDataProtectionPolicy" }]
    },
    "topic_policy": {
      "create": [
        { "service": "SNS", "action": "SetTopicAttributes" },
        { "service": "SNS", "action": "GetTopicAttributes" }
      ],
      "read": [{ "service": "SNS", "action": "GetTopicAttributes" }],
      "update": [],
      "delete": [{ "service": "SNS", "action": "SetTopicAttributes" }]
    },
    "topic_subscription": {
      "create": [
        { "service": "SNS", "action": "Subscribe" },
        { "service": "SNS", "action": "GetSubscriptionAttributes" }
      ],
      "read": [{ "service": "SNS", "action": "GetSubscriptionAttributes" }],
      "update": [
        { "service": "SNS", "action": "SetSubscriptionAttributes" },
        { "service": "SNS", "action": "GetSubscriptionAttributes" }
      ],
      "delete": [
        { "service": "SNS", "action": "Unsubscribe" },
        { "service": "SNS", "action": "GetSubscriptionAttributes" }
      ]
    }
  },
  "sqs": {
    "queue": {
      "create": [
        { "service": "SQS", "action": "CreateQueue" },
        { "service": "SQS", "action": "CreateQueue" },
        { "service": "SQS", "action": "GetQueueAttributes" }
      ],
      "read": [{ "service": "SQS", "action": "GetQueueAttributes" }],
      "update": [
        { "service": "SQS", "action": "SetQueueAttributes" },
        { "service": "SQS", "action": "GetQueueAttributes" }
      ],
      "delete": [
        { "service": "SQS", "action": "DeleteQueue" },
        { "service": "SQS", "action": "GetQueueAttributes" }
      ]
    },
    "queue_policy": { "create": [], "read": [], "update": [], "delete": [] },
    "queue_redrive_allow_policy": { "create": [], "read": [], "update": [], "delete": [] },
    "queue_redrive_policy": { "create": [], "read": [], "update": [], "delete": [] }
  },
  "ssm": {
    "activation": {
      "create": [
        { "service": "SSM", "action": "CreateActivation" },
        { "service": "SSM", "action": "DescribeActivations" }
      ],
      "read": [{ "service": "SSM", "action": "DescribeActivations" }],
      "update": [],
      "delete": [{ "service": "SSM", "action": "DeleteActivation" }]
    },
    "association": {
      "create": [
        { "service": "SSM", "action": "CreateAssociation" },
        { "service": "SSM", "action": "DescribeAssociation" }
      ],
      "read": [{ "service": "SSM", "action": "DescribeAssociation" }],
      "update": [
        { "service": "SSM", "action": "UpdateAssociation" },
        { "service": "SSM", "action": "DescribeAssociation" }
      ],
      "delete": [{ "service": "SSM", "action": "DeleteAssociation" }]
    },
    "default_patch_baseline": { "create": [], "read": [], "update": [], "delete": [] },
    "document": {
      "create": [
        { "service": "SSM", "action": "CreateDocument" },
        { "service": "SSM", "action": "ModifyDocumentPermission" },
        { "service": "SSM", "action": "DescribeDocument" },
        { "service": "SSM", "action": "GetDocument" },
        { "service": "SSM", "action": "DescribeDocumentPermission" }
      ],
      "read": [
        { "service": "SSM", "action": "DescribeDocument" },
        { "service": "SSM", "action": "GetDocument" },
        { "service": "SSM", "action": "DescribeDocumentPermission" }
      ],
      "update": [
        { "service": "SSM", "action": "ModifyDocumentPermission" },
        { "service": "SSM", "action": "ModifyDocumentPermission" },
        { "service": "SSM", "action": "UpdateDocument" },
        { "service": "SSM", "action": "UpdateDocumentDefaultVersion" },
        { "service": "SSM", "action": "DescribeDocument" },
        { "service": "SSM", "action": "GetDocument" },
        { "service": "SSM", "action": "DescribeDocumentPermission" }
      ],
      "delete": [
        { "service": "SSM", "action": "ModifyDocumentPermission" },
        { "service": "SSM", "action": "DeleteDocument" },
        { "service": "SSM", "action": "DescribeDocument" }
      ]
    },
    "maintenance_window": {
      "create": [
        { "service": "SSM", "action": "CreateMaintenanceWindow" },
        { "service": "SSM", "action": "UpdateMaintenanceWindow" },
        { "service": "SSM", "action": "GetMaintenanceWindow" }
      ],
      "read": [{ "service": "SSM", "action": "GetMaintenanceWindow" }],
      "update": [
        { "service": "SSM", "action": "UpdateMaintenanceWindow" },
        { "service": "SSM", "action": "GetMaintenanceWindow" }
      ],
      "delete": [{ "service": "SSM", "action": "DeleteMaintenanceWindow" }]
    },
    "maintenance_window_target": {
      "create": [
        { "service": "SSM", "action": "RegisterTargetWithMaintenanceWindow" },
        { "service": "SSM", "action": "DescribeMaintenanceWindowTargets" }
      ],
      "read": [{ "service": "SSM", "action": "DescribeMaintenanceWindowTargets" }],
      "update": [{ "service": "SSM", "action": "UpdateMaintenanceWindowTarget" }],
      "delete": [{ "service": "SSM", "action": "DeregisterTargetFromMaintenanceWindow" }]
    },
    "maintenance_window_task": {
      "create": [
        { "service": "SSM", "action": "RegisterTaskWithMaintenanceWindow" },
        { "service": "SSM", "action": "GetMaintenanceWindowTask" }
      ],
      "read": [{ "service": "SSM", "action": "GetMaintenanceWindowTask" }],
      "update": [
        { "service": "SSM", "action": "UpdateMaintenanceWindowTask" },
        { "service": "SSM", "action": "GetMaintenanceWindowTask" }
      ],
      "delete": [{ "service": "SSM", "action": "DeregisterTaskFromMaintenanceWindow" }]
    },
    "parameter": {
      "create": [
        { "service": "SSM", "action": "PutParameter" },
        { "service": "SSM", "action": "PutParameter" },
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "DescribeParameters" }
      ],
      "read": [
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "DescribeParameters" }
      ],
      "update": [
        { "service": "SSM", "action": "PutParameter" },
        { "service": "SSM", "action": "PutParameter" },
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "GetParameter" },
        { "service": "SSM", "action": "DescribeParameters" }
      ],
      "delete": [{ "service": "SSM", "action": "DeleteParameter" }]
    },
    "patch_baseline": {
      "create": [
        { "service": "SSM", "action": "CreatePatchBaseline" },
        { "service": "SSM", "action": "GetPatchBaseline" }
      ],
      "read": [{ "service": "SSM", "action": "GetPatchBaseline" }],
      "update": [
        { "service": "SSM", "action": "UpdatePatchBaseline" },
        { "service": "SSM", "action": "GetPatchBaseline" }
      ],
      "delete": [
        { "service": "SSM", "action": "DeletePatchBaseline" },
        { "service": "SSM", "action": "DeletePatchBaseline" }
      ]
    },
    "patch_group": {
      "create": [
        { "service": "SSM", "action": "RegisterPatchBaselineForPatchGroup" },
        { "service": "SSM", "action": "DescribePatchGroups" }
      ],
      "read": [{ "service": "SSM", "action": "DescribePatchGroups" }],
      "update": [],
      "delete": [{ "service": "SSM", "action": "DeregisterPatchBaselineForPatchGroup" }]
    },
    "resource_data_sync": {
      "create": [
        { "service": "SSM", "action": "CreateResourceDataSync" },
        { "service": "SSM", "action": "CreateResourceDataSync" },
        { "service": "SSM", "action": "ListResourceDataSync" }
      ],
      "read": [{ "service": "SSM", "action": "ListResourceDataSync" }],
      "update": [],
      "delete": [{ "service": "SSM", "action": "DeleteResourceDataSync" }]
    },
    "service_setting": {
      "create": [
        { "service": "SSM", "action": "UpdateServiceSetting" },
        { "service": "SSM", "action": "GetServiceSetting" }
      ],
      "read": [{ "service": "SSM", "action": "GetServiceSetting" }],
      "update": [],
      "delete": [
        { "service": "SSM", "action": "ResetServiceSetting" },
        { "service": "SSM", "action": "GetServiceSetting" }
      ]
    }
  },
  "ssmincidents": {
    "replication_set": {
      "create": [
        { "service": "SSMIncidentsClient", "action": "CreateReplicationSet" },
        { "service": "SSMIncidentsClient", "action": "GetReplicationSet" }
      ],
      "read": [{ "service": "SSMIncidentsClient", "action": "GetReplicationSet" }],
      "update": [
        { "service": "SSMIncidentsClient", "action": "UpdateReplicationSet" },
        { "service": "SSMIncidentsClient", "action": "UntagResource" },
        { "service": "SSMIncidentsClient", "action": "TagResource" },
        { "service": "SSMIncidentsClient", "action": "GetReplicationSet" }
      ],
      "delete": [{ "service": "SSMIncidentsClient", "action": "DeleteReplicationSet" }]
    }
  },
  "ssoadmin": {
    "account_assignment": {
      "create": [
        { "service": "SSOAdmin", "action": "ListAccountAssignments" },
        { "service": "SSOAdmin", "action": "CreateAccountAssignment" },
        { "service": "SSOAdmin", "action": "DescribeAccountAssignmentCreationStatus" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "ListAccountAssignments" }],
      "update": [],
      "delete": [
        { "service": "SSOAdmin", "action": "DeleteAccountAssignment" },
        { "service": "SSOAdmin", "action": "DescribeAccountAssignmentDeletionStatus" }
      ]
    },
    "customer_managed_policy_attachment": {
      "create": [
        { "service": "SSOAdmin", "action": "AttachCustomerManagedPolicyReferenceToPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" },
        { "service": "SSOAdmin", "action": "ListCustomerManagedPolicyReferencesInPermissionSet" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "ListCustomerManagedPolicyReferencesInPermissionSet" }],
      "update": [],
      "delete": [
        { "service": "SSOAdmin", "action": "DetachCustomerManagedPolicyReferenceFromPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" }
      ]
    },
    "instance_access_control_attributes": {
      "create": [
        { "service": "SSOAdmin", "action": "CreateInstanceAccessControlAttributeConfiguration" },
        { "service": "SSOAdmin", "action": "DescribeInstanceAccessControlAttributeConfiguration" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "DescribeInstanceAccessControlAttributeConfiguration" }],
      "update": [
        { "service": "SSOAdmin", "action": "UpdateInstanceAccessControlAttributeConfiguration" },
        { "service": "SSOAdmin", "action": "DescribeInstanceAccessControlAttributeConfiguration" }
      ],
      "delete": [{ "service": "SSOAdmin", "action": "DeleteInstanceAccessControlAttributeConfiguration" }]
    },
    "managed_policy_attachment": {
      "create": [
        { "service": "SSOAdmin", "action": "AttachManagedPolicyToPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" },
        { "service": "SSOAdmin", "action": "ListManagedPoliciesInPermissionSet" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "ListManagedPoliciesInPermissionSet" }],
      "update": [],
      "delete": [
        { "service": "SSOAdmin", "action": "DetachManagedPolicyFromPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" }
      ]
    },
    "permission_set": {
      "create": [
        { "service": "SSOAdmin", "action": "CreatePermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSet" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "DescribePermissionSet" }],
      "update": [
        { "service": "SSOAdmin", "action": "UpdatePermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" },
        { "service": "SSOAdmin", "action": "DescribePermissionSet" }
      ],
      "delete": [{ "service": "SSOAdmin", "action": "DeletePermissionSet" }]
    },
    "permission_set_inline_policy": {
      "create": [
        { "service": "SSOAdmin", "action": "PutInlinePolicyToPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" },
        { "service": "SSOAdmin", "action": "GetInlinePolicyForPermissionSet" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "GetInlinePolicyForPermissionSet" }],
      "update": [],
      "delete": [{ "service": "SSOAdmin", "action": "DeleteInlinePolicyFromPermissionSet" }]
    },
    "permissions_boundary_attachment": {
      "create": [
        { "service": "SSOAdmin", "action": "PutPermissionsBoundaryToPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" },
        { "service": "SSOAdmin", "action": "GetPermissionsBoundaryForPermissionSet" }
      ],
      "read": [{ "service": "SSOAdmin", "action": "GetPermissionsBoundaryForPermissionSet" }],
      "update": [],
      "delete": [
        { "service": "SSOAdmin", "action": "DeletePermissionsBoundaryFromPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "ProvisionPermissionSet" },
        { "service": "SSOAdmin", "action": "DescribePermissionSetProvisioningStatus" }
      ]
    }
  },
  "storagegateway": {
    "cache": {
      "create": [
        { "service": "StorageGateway", "action": "AddCache" },
        { "service": "StorageGateway", "action": "ListLocalDisks" },
        { "service": "StorageGateway", "action": "DescribeCache" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeCache" }],
      "update": [],
      "delete": []
    },
    "cached_iscsi_volume": {
      "create": [
        { "service": "StorageGateway", "action": "CreateCachediSCSIVolume" },
        { "service": "StorageGateway", "action": "DescribeCachediSCSIVolumes" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeCachediSCSIVolumes" }],
      "update": [],
      "delete": [
        { "service": "StorageGateway", "action": "DeleteVolume" },
        { "service": "StorageGateway", "action": "DeleteVolume" }
      ]
    },
    "file_system_association": {
      "create": [
        { "service": "StorageGateway", "action": "AssociateFileSystem" },
        { "service": "StorageGateway", "action": "DescribeFileSystemAssociations" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeFileSystemAssociations" }],
      "update": [
        { "service": "StorageGateway", "action": "UpdateFileSystemAssociation" },
        { "service": "StorageGateway", "action": "DescribeFileSystemAssociations" }
      ],
      "delete": [
        { "service": "StorageGateway", "action": "DisassociateFileSystem" },
        { "service": "StorageGateway", "action": "DescribeFileSystemAssociations" }
      ]
    },
    "gateway": {
      "create": [
        { "service": "StorageGateway", "action": "ActivateGateway" },
        { "service": "StorageGateway", "action": "DescribeGatewayInformation" },
        { "service": "StorageGateway", "action": "UpdateGatewayInformation" },
        { "service": "StorageGateway", "action": "UpdateMaintenanceStartTime" },
        { "service": "StorageGateway", "action": "JoinDomain" },
        { "service": "StorageGateway", "action": "DescribeSMBSettings" },
        { "service": "StorageGateway", "action": "SetSMBGuestPassword" },
        { "service": "StorageGateway", "action": "UpdateSMBSecurityStrategy" },
        { "service": "StorageGateway", "action": "UpdateSMBFileShareVisibility" },
        { "service": "StorageGateway", "action": "UpdateBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DescribeGatewayInformation" },
        { "service": "StorageGateway", "action": "DescribeSMBSettings" },
        { "service": "StorageGateway", "action": "DescribeBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DescribeMaintenanceStartTime" }
      ],
      "read": [
        { "service": "StorageGateway", "action": "DescribeGatewayInformation" },
        { "service": "StorageGateway", "action": "DescribeSMBSettings" },
        { "service": "StorageGateway", "action": "DescribeBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DescribeMaintenanceStartTime" }
      ],
      "update": [
        { "service": "StorageGateway", "action": "UpdateGatewayInformation" },
        { "service": "StorageGateway", "action": "UpdateMaintenanceStartTime" },
        { "service": "StorageGateway", "action": "JoinDomain" },
        { "service": "StorageGateway", "action": "DescribeSMBSettings" },
        { "service": "StorageGateway", "action": "SetSMBGuestPassword" },
        { "service": "StorageGateway", "action": "UpdateSMBSecurityStrategy" },
        { "service": "StorageGateway", "action": "UpdateSMBFileShareVisibility" },
        { "service": "StorageGateway", "action": "UpdateBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DeleteBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DescribeGatewayInformation" },
        { "service": "StorageGateway", "action": "DescribeSMBSettings" },
        { "service": "StorageGateway", "action": "DescribeBandwidthRateLimit" },
        { "service": "StorageGateway", "action": "DescribeMaintenanceStartTime" }
      ],
      "delete": [{ "service": "StorageGateway", "action": "DeleteGateway" }]
    },
    "nfs_file_share": {
      "create": [
        { "service": "StorageGateway", "action": "CreateNFSFileShare" },
        { "service": "StorageGateway", "action": "DescribeNFSFileShares" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeNFSFileShares" }],
      "update": [
        { "service": "StorageGateway", "action": "UpdateNFSFileShare" },
        { "service": "StorageGateway", "action": "DescribeNFSFileShares" }
      ],
      "delete": [
        { "service": "StorageGateway", "action": "DeleteFileShare" },
        { "service": "StorageGateway", "action": "DescribeNFSFileShares" }
      ]
    },
    "smb_file_share": {
      "create": [
        { "service": "StorageGateway", "action": "CreateSMBFileShare" },
        { "service": "StorageGateway", "action": "DescribeSMBFileShares" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeSMBFileShares" }],
      "update": [
        { "service": "StorageGateway", "action": "UpdateSMBFileShare" },
        { "service": "StorageGateway", "action": "DescribeSMBFileShares" }
      ],
      "delete": [
        { "service": "StorageGateway", "action": "DeleteFileShare" },
        { "service": "StorageGateway", "action": "DescribeSMBFileShares" }
      ]
    },
    "stored_iscsi_volume": {
      "create": [
        { "service": "StorageGateway", "action": "CreateStorediSCSIVolume" },
        { "service": "StorageGateway", "action": "DescribeStorediSCSIVolumes" },
        { "service": "StorageGateway", "action": "DescribeStorediSCSIVolumes" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeStorediSCSIVolumes" }],
      "update": [],
      "delete": [
        { "service": "StorageGateway", "action": "DeleteVolume" },
        { "service": "StorageGateway", "action": "DeleteVolume" }
      ]
    },
    "tape_pool": {
      "create": [
        { "service": "StorageGateway", "action": "CreateTapePool" },
        { "service": "StorageGateway", "action": "ListTapePools" }
      ],
      "read": [{ "service": "StorageGateway", "action": "ListTapePools" }],
      "update": [],
      "delete": [{ "service": "StorageGateway", "action": "DeleteTapePool" }]
    },
    "upload_buffer": {
      "create": [
        { "service": "StorageGateway", "action": "AddUploadBuffer" },
        { "service": "StorageGateway", "action": "DescribeUploadBuffer" },
        { "service": "StorageGateway", "action": "ListLocalDisks" },
        { "service": "StorageGateway", "action": "ListLocalDisks" }
      ],
      "read": [
        { "service": "StorageGateway", "action": "DescribeUploadBuffer" },
        { "service": "StorageGateway", "action": "ListLocalDisks" }
      ],
      "update": [],
      "delete": []
    },
    "working_storage": {
      "create": [
        { "service": "StorageGateway", "action": "AddWorkingStorage" },
        { "service": "StorageGateway", "action": "DescribeWorkingStorage" }
      ],
      "read": [{ "service": "StorageGateway", "action": "DescribeWorkingStorage" }],
      "update": [],
      "delete": []
    }
  },
  "swf": {
    "domain": {
      "create": [
        { "service": "SWF", "action": "RegisterDomain" },
        { "service": "SWF", "action": "DescribeDomain" }
      ],
      "read": [{ "service": "SWF", "action": "DescribeDomain" }],
      "update": [],
      "delete": [{ "service": "SWF", "action": "DeprecateDomain" }]
    }
  },
  "synthetics": {
    "canary": {
      "create": [
        { "service": "Synthetics", "action": "CreateCanary" },
        { "service": "Synthetics", "action": "GetCanary" },
        { "service": "Synthetics", "action": "DeleteCanary" },
        { "service": "Synthetics", "action": "CreateCanary" },
        { "service": "Synthetics", "action": "StartCanary" }
      ],
      "read": [{ "service": "Synthetics", "action": "GetCanary" }],
      "update": [
        { "service": "Synthetics", "action": "StopCanary" },
        { "service": "Synthetics", "action": "GetCanary" },
        { "service": "Synthetics", "action": "UpdateCanary" },
        { "service": "Synthetics", "action": "StartCanary" }
      ],
      "delete": [
        { "service": "Synthetics", "action": "StopCanary" },
        { "service": "Synthetics", "action": "GetCanary" },
        { "service": "Synthetics", "action": "DeleteCanary" }
      ]
    }
  },
  "timestreamwrite": {
    "database": {
      "create": [
        { "service": "TimestreamWrite", "action": "CreateDatabase" },
        { "service": "TimestreamWrite", "action": "DescribeDatabase" }
      ],
      "read": [{ "service": "TimestreamWrite", "action": "DescribeDatabase" }],
      "update": [
        { "service": "TimestreamWrite", "action": "UpdateDatabase" },
        { "service": "TimestreamWrite", "action": "DescribeDatabase" }
      ],
      "delete": [{ "service": "TimestreamWrite", "action": "DeleteDatabase" }]
    },
    "table": {
      "create": [
        { "service": "TimestreamWrite", "action": "CreateTable" },
        { "service": "TimestreamWrite", "action": "DescribeTable" }
      ],
      "read": [{ "service": "TimestreamWrite", "action": "DescribeTable" }],
      "update": [
        { "service": "TimestreamWrite", "action": "UpdateTable" },
        { "service": "TimestreamWrite", "action": "DescribeTable" }
      ],
      "delete": [{ "service": "TimestreamWrite", "action": "DeleteTable" }]
    }
  },
  "transcribe": {
    "language_model": {
      "create": [
        { "service": "TranscribeClient", "action": "CreateLanguageModel" },
        { "service": "TranscribeClient", "action": "DescribeLanguageModel" }
      ],
      "read": [{ "service": "TranscribeClient", "action": "DescribeLanguageModel" }],
      "update": [],
      "delete": [{ "service": "TranscribeClient", "action": "DeleteLanguageModel" }]
    },
    "medical_vocabulary": {
      "create": [
        { "service": "TranscribeClient", "action": "CreateMedicalVocabulary" },
        { "service": "TranscribeClient", "action": "GetMedicalVocabulary" }
      ],
      "read": [{ "service": "TranscribeClient", "action": "GetMedicalVocabulary" }],
      "update": [
        { "service": "TranscribeClient", "action": "UpdateMedicalVocabulary" },
        { "service": "TranscribeClient", "action": "GetMedicalVocabulary" }
      ],
      "delete": [
        { "service": "TranscribeClient", "action": "DeleteMedicalVocabulary" },
        { "service": "TranscribeClient", "action": "GetMedicalVocabulary" }
      ]
    },
    "vocabulary": {
      "create": [
        { "service": "TranscribeClient", "action": "CreateVocabulary" },
        { "service": "TranscribeClient", "action": "GetVocabulary" }
      ],
      "read": [{ "service": "TranscribeClient", "action": "GetVocabulary" }],
      "update": [
        { "service": "TranscribeClient", "action": "UpdateVocabulary" },
        { "service": "TranscribeClient", "action": "GetVocabulary" }
      ],
      "delete": [
        { "service": "TranscribeClient", "action": "DeleteVocabulary" },
        { "service": "TranscribeClient", "action": "GetVocabulary" }
      ]
    },
    "vocabulary_filter": {
      "create": [
        { "service": "TranscribeClient", "action": "CreateVocabularyFilter" },
        { "service": "TranscribeClient", "action": "GetVocabularyFilter" }
      ],
      "read": [{ "service": "TranscribeClient", "action": "GetVocabularyFilter" }],
      "update": [
        { "service": "TranscribeClient", "action": "UpdateVocabularyFilter" },
        { "service": "TranscribeClient", "action": "GetVocabularyFilter" }
      ],
      "delete": [{ "service": "TranscribeClient", "action": "DeleteVocabularyFilter" }]
    }
  },
  "transfer": {
    "access": {
      "create": [
        { "service": "Transfer", "action": "CreateAccess" },
        { "service": "Transfer", "action": "DescribeAccess" }
      ],
      "read": [{ "service": "Transfer", "action": "DescribeAccess" }],
      "update": [
        { "service": "Transfer", "action": "UpdateAccess" },
        { "service": "Transfer", "action": "DescribeAccess" }
      ],
      "delete": [{ "service": "Transfer", "action": "DeleteAccess" }]
    },
    "server": {
      "create": [
        { "service": "Transfer", "action": "CreateServer" },
        { "service": "Transfer", "action": "DescribeServer" },
        { "service": "Transfer", "action": "StopServer" },
        { "service": "Transfer", "action": "UpdateServer" },
        { "service": "Transfer", "action": "StartServer" }
      ],
      "read": [{ "service": "Transfer", "action": "DescribeServer" }],
      "update": [
        { "service": "Transfer", "action": "ModifyVpcEndpoint" },
        { "service": "Transfer", "action": "StopServer" },
        { "service": "Transfer", "action": "DescribeServer" },
        { "service": "Transfer", "action": "UpdateServer" },
        { "service": "Transfer", "action": "StartServer" }
      ],
      "delete": [
        { "service": "Transfer", "action": "ListUsers" },
        { "service": "Transfer", "action": "DeleteUser" },
        { "service": "Transfer", "action": "DescribeUser" },
        { "service": "Transfer", "action": "DeleteServer" },
        { "service": "Transfer", "action": "DescribeServer" }
      ]
    },
    "ssh_key": {
      "create": [{ "service": "Transfer", "action": "ImportSshPublicKey" }],
      "read": [{ "service": "Transfer", "action": "DescribeUser" }],
      "update": [],
      "delete": [{ "service": "Transfer", "action": "DeleteSshPublicKey" }]
    },
    "tag": { "create": [], "read": [], "update": [], "delete": [] },
    "user": {
      "create": [
        { "service": "Transfer", "action": "CreateUser" },
        { "service": "Transfer", "action": "DescribeUser" }
      ],
      "read": [{ "service": "Transfer", "action": "DescribeUser" }],
      "update": [
        { "service": "Transfer", "action": "UpdateUser" },
        { "service": "Transfer", "action": "DescribeUser" }
      ],
      "delete": [
        { "service": "Transfer", "action": "DeleteUser" },
        { "service": "Transfer", "action": "DescribeUser" }
      ]
    },
    "workflow": {
      "create": [
        { "service": "Transfer", "action": "CreateWorkflow" },
        { "service": "Transfer", "action": "DescribeWorkflow" }
      ],
      "read": [{ "service": "Transfer", "action": "DescribeWorkflow" }],
      "update": [],
      "delete": [{ "service": "Transfer", "action": "DeleteWorkflow" }]
    }
  },
  "vpclattice": {
    "service": {
      "create": [
        { "service": "VPCLatticeClient", "action": "CreateService" },
        { "service": "VPCLatticeClient", "action": "GetService" }
      ],
      "read": [{ "service": "VPCLatticeClient", "action": "GetService" }],
      "update": [
        { "service": "VPCLatticeClient", "action": "UpdateService" },
        { "service": "VPCLatticeClient", "action": "GetService" }
      ],
      "delete": [
        { "service": "VPCLatticeClient", "action": "DeleteService" },
        { "service": "VPCLatticeClient", "action": "GetService" }
      ]
    },
    "service_network": {
      "create": [
        { "service": "VPCLatticeClient", "action": "CreateServiceNetwork" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetwork" }
      ],
      "read": [{ "service": "VPCLatticeClient", "action": "GetServiceNetwork" }],
      "update": [
        { "service": "VPCLatticeClient", "action": "UpdateServiceNetwork" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetwork" }
      ],
      "delete": [{ "service": "VPCLatticeClient", "action": "DeleteServiceNetwork" }]
    },
    "service_network_service_association": {
      "create": [
        { "service": "VPCLatticeClient", "action": "CreateServiceNetworkServiceAssociation" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetworkServiceAssociation" }
      ],
      "read": [{ "service": "VPCLatticeClient", "action": "GetServiceNetworkServiceAssociation" }],
      "update": [],
      "delete": [
        { "service": "VPCLatticeClient", "action": "DeleteServiceNetworkServiceAssociation" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetworkServiceAssociation" }
      ]
    },
    "service_network_vpc_association": {
      "create": [
        { "service": "VPCLatticeClient", "action": "CreateServiceNetworkVpcAssociation" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetworkVpcAssociation" }
      ],
      "read": [{ "service": "VPCLatticeClient", "action": "GetServiceNetworkVpcAssociation" }],
      "update": [
        { "service": "VPCLatticeClient", "action": "UpdateServiceNetworkVpcAssociation" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetworkVpcAssociation" }
      ],
      "delete": [
        { "service": "VPCLatticeClient", "action": "DeleteServiceNetworkVpcAssociation" },
        { "service": "VPCLatticeClient", "action": "GetServiceNetworkVpcAssociation" }
      ]
    },
    "target_group": {
      "create": [
        { "service": "VPCLatticeClient", "action": "CreateTargetGroup" },
        { "service": "VPCLatticeClient", "action": "GetTargetGroup" }
      ],
      "read": [{ "service": "VPCLatticeClient", "action": "GetTargetGroup" }],
      "update": [
        { "service": "VPCLatticeClient", "action": "UpdateTargetGroup" },
        { "service": "VPCLatticeClient", "action": "GetTargetGroup" }
      ],
      "delete": [
        { "service": "VPCLatticeClient", "action": "DeleteTargetGroup" },
        { "service": "VPCLatticeClient", "action": "GetTargetGroup" }
      ]
    }
  },
  "waf": {
    "byte_match_set": {
      "create": [
        { "service": "WAF", "action": "CreateByteMatchSet" },
        { "service": "WAF", "action": "UpdateByteMatchSet" },
        { "service": "WAF", "action": "GetByteMatchSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetByteMatchSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateByteMatchSet" },
        { "service": "WAF", "action": "GetByteMatchSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateByteMatchSet" },
        { "service": "WAF", "action": "DeleteByteMatchSet" }
      ]
    },
    "geo_match_set": {
      "create": [
        { "service": "WAF", "action": "CreateGeoMatchSet" },
        { "service": "WAF", "action": "UpdateGeoMatchSet" },
        { "service": "WAF", "action": "GetGeoMatchSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetGeoMatchSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateGeoMatchSet" },
        { "service": "WAF", "action": "GetGeoMatchSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateGeoMatchSet" },
        { "service": "WAF", "action": "DeleteGeoMatchSet" }
      ]
    },
    "ipset": {
      "create": [
        { "service": "WAF", "action": "CreateIPSet" },
        { "service": "WAF", "action": "UpdateIPSet" },
        { "service": "WAF", "action": "GetIPSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetIPSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateIPSet" },
        { "service": "WAF", "action": "GetIPSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateIPSet" },
        { "service": "WAF", "action": "DeleteIPSet" }
      ]
    },
    "rate_based_rule": {
      "create": [
        { "service": "WAF", "action": "CreateRateBasedRule" },
        { "service": "WAF", "action": "UpdateRateBasedRule" },
        { "service": "WAF", "action": "GetRateBasedRule" }
      ],
      "read": [{ "service": "WAF", "action": "GetRateBasedRule" }],
      "update": [
        { "service": "WAF", "action": "UpdateRateBasedRule" },
        { "service": "WAF", "action": "GetRateBasedRule" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateRateBasedRule" },
        { "service": "WAF", "action": "DeleteRateBasedRule" }
      ]
    },
    "regex_match_set": {
      "create": [
        { "service": "WAF", "action": "CreateRegexMatchSet" },
        { "service": "WAF", "action": "UpdateRegexMatchSet" },
        { "service": "WAF", "action": "GetRegexMatchSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetRegexMatchSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateRegexMatchSet" },
        { "service": "WAF", "action": "GetRegexMatchSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateRegexMatchSet" },
        { "service": "WAF", "action": "DeleteRegexMatchSet" }
      ]
    },
    "regex_pattern_set": {
      "create": [
        { "service": "WAF", "action": "CreateRegexPatternSet" },
        { "service": "WAF", "action": "UpdateRegexPatternSet" },
        { "service": "WAF", "action": "GetRegexPatternSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetRegexPatternSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateRegexPatternSet" },
        { "service": "WAF", "action": "GetRegexPatternSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateRegexPatternSet" },
        { "service": "WAF", "action": "DeleteRegexPatternSet" }
      ]
    },
    "rule": {
      "create": [
        { "service": "WAF", "action": "CreateRule" },
        { "service": "WAF", "action": "UpdateRule" },
        { "service": "WAF", "action": "GetRule" }
      ],
      "read": [{ "service": "WAF", "action": "GetRule" }],
      "update": [
        { "service": "WAF", "action": "UpdateRule" },
        { "service": "WAF", "action": "GetRule" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateRule" },
        { "service": "WAF", "action": "DeleteRule" },
        { "service": "WAF", "action": "DeleteRule" }
      ]
    },
    "rule_group": {
      "create": [
        { "service": "WAF", "action": "CreateRuleGroup" },
        { "service": "WAF", "action": "UpdateRuleGroup" },
        { "service": "WAF", "action": "GetRuleGroup" },
        { "service": "WAF", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "read": [
        { "service": "WAF", "action": "GetRuleGroup" },
        { "service": "WAF", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "update": [
        { "service": "WAF", "action": "UpdateRuleGroup" },
        { "service": "WAF", "action": "GetRuleGroup" },
        { "service": "WAF", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateRuleGroup" },
        { "service": "WAF", "action": "DeleteRuleGroup" }
      ]
    },
    "size_constraint_set": {
      "create": [
        { "service": "WAF", "action": "CreateSizeConstraintSet" },
        { "service": "WAF", "action": "UpdateSizeConstraintSet" },
        { "service": "WAF", "action": "GetSizeConstraintSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetSizeConstraintSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateSizeConstraintSet" },
        { "service": "WAF", "action": "GetSizeConstraintSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateSizeConstraintSet" },
        { "service": "WAF", "action": "DeleteSizeConstraintSet" }
      ]
    },
    "sql_injection_match_set": {
      "create": [
        { "service": "WAF", "action": "CreateSqlInjectionMatchSet" },
        { "service": "WAF", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAF", "action": "GetSqlInjectionMatchSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetSqlInjectionMatchSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAF", "action": "GetSqlInjectionMatchSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAF", "action": "DeleteSqlInjectionMatchSet" }
      ]
    },
    "web_acl": {
      "create": [
        { "service": "WAF", "action": "CreateWebACL" },
        { "service": "WAF", "action": "PutLoggingConfiguration" },
        { "service": "WAF", "action": "UpdateWebACL" },
        { "service": "WAF", "action": "GetWebACL" },
        { "service": "WAF", "action": "GetLoggingConfiguration" }
      ],
      "read": [
        { "service": "WAF", "action": "GetWebACL" },
        { "service": "WAF", "action": "GetLoggingConfiguration" }
      ],
      "update": [
        { "service": "WAF", "action": "UpdateWebACL" },
        { "service": "WAF", "action": "PutLoggingConfiguration" },
        { "service": "WAF", "action": "DeleteLoggingConfiguration" },
        { "service": "WAF", "action": "GetWebACL" },
        { "service": "WAF", "action": "GetLoggingConfiguration" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateWebACL" },
        { "service": "WAF", "action": "DeleteWebACL" }
      ]
    },
    "xss_match_set": {
      "create": [
        { "service": "WAF", "action": "CreateXssMatchSet" },
        { "service": "WAF", "action": "UpdateXssMatchSet" },
        { "service": "WAF", "action": "GetXssMatchSet" }
      ],
      "read": [{ "service": "WAF", "action": "GetXssMatchSet" }],
      "update": [
        { "service": "WAF", "action": "UpdateXssMatchSet" },
        { "service": "WAF", "action": "GetXssMatchSet" }
      ],
      "delete": [
        { "service": "WAF", "action": "UpdateXssMatchSet" },
        { "service": "WAF", "action": "DeleteXssMatchSet" }
      ]
    }
  },
  "wafregional": {
    "byte_match_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateByteMatchSet" },
        { "service": "WAFRegional", "action": "UpdateByteMatchSet" },
        { "service": "WAFRegional", "action": "GetByteMatchSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetByteMatchSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateByteMatchSet" },
        { "service": "WAFRegional", "action": "GetByteMatchSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateByteMatchSet" },
        { "service": "WAFRegional", "action": "DeleteByteMatchSet" }
      ]
    },
    "geo_match_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateGeoMatchSet" },
        { "service": "WAFRegional", "action": "UpdateGeoMatchSet" },
        { "service": "WAFRegional", "action": "GetGeoMatchSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetGeoMatchSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateGeoMatchSet" },
        { "service": "WAFRegional", "action": "GetGeoMatchSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateGeoMatchSet" },
        { "service": "WAFRegional", "action": "DeleteGeoMatchSet" }
      ]
    },
    "ipset": {
      "create": [
        { "service": "WAFRegional", "action": "CreateIPSet" },
        { "service": "WAFRegional", "action": "UpdateIPSet" },
        { "service": "WAFRegional", "action": "GetIPSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetIPSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateIPSet" },
        { "service": "WAFRegional", "action": "GetIPSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateIPSet" },
        { "service": "WAFRegional", "action": "DeleteIPSet" }
      ]
    },
    "rate_based_rule": {
      "create": [
        { "service": "WAFRegional", "action": "CreateRateBasedRule" },
        { "service": "WAFRegional", "action": "UpdateRateBasedRule" },
        { "service": "WAFRegional", "action": "GetRateBasedRule" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetRateBasedRule" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateRateBasedRule" },
        { "service": "WAFRegional", "action": "GetRateBasedRule" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateRateBasedRule" },
        { "service": "WAFRegional", "action": "DeleteRateBasedRule" }
      ]
    },
    "regex_match_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateRegexMatchSet" },
        { "service": "WAFRegional", "action": "UpdateRegexMatchSet" },
        { "service": "WAFRegional", "action": "GetRegexMatchSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetRegexMatchSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateRegexMatchSet" },
        { "service": "WAFRegional", "action": "GetRegexMatchSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateRegexMatchSet" },
        { "service": "WAFRegional", "action": "DeleteRegexMatchSet" }
      ]
    },
    "regex_pattern_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateRegexPatternSet" },
        { "service": "WAFRegional", "action": "UpdateRegexPatternSet" },
        { "service": "WAFRegional", "action": "GetRegexPatternSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetRegexPatternSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateRegexPatternSet" },
        { "service": "WAFRegional", "action": "GetRegexPatternSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateRegexPatternSet" },
        { "service": "WAFRegional", "action": "DeleteRegexPatternSet" }
      ]
    },
    "rule": {
      "create": [
        { "service": "WAFRegional", "action": "CreateRule" },
        { "service": "WAFRegional", "action": "UpdateRule" },
        { "service": "WAFRegional", "action": "GetRule" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetRule" }],
      "update": [],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateRule" },
        { "service": "WAFRegional", "action": "DeleteRule" }
      ]
    },
    "rule_group": {
      "create": [
        { "service": "WAFRegional", "action": "CreateRuleGroup" },
        { "service": "WAFRegional", "action": "UpdateRuleGroup" },
        { "service": "WAFRegional", "action": "GetRuleGroup" },
        { "service": "WAFRegional", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "read": [
        { "service": "WAFRegional", "action": "GetRuleGroup" },
        { "service": "WAFRegional", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "update": [
        { "service": "WAFRegional", "action": "UpdateRuleGroup" },
        { "service": "WAFRegional", "action": "GetRuleGroup" },
        { "service": "WAFRegional", "action": "ListActivatedRulesInRuleGroup" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateRuleGroup" },
        { "service": "WAFRegional", "action": "DeleteRuleGroup" }
      ]
    },
    "size_constraint_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateSizeConstraintSet" },
        { "service": "WAFRegional", "action": "GetSizeConstraintSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetSizeConstraintSet" }],
      "update": [],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateSizeConstraintSet" },
        { "service": "WAFRegional", "action": "DeleteSizeConstraintSet" }
      ]
    },
    "sql_injection_match_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateSqlInjectionMatchSet" },
        { "service": "WAFRegional", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAFRegional", "action": "GetSqlInjectionMatchSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetSqlInjectionMatchSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAFRegional", "action": "GetSqlInjectionMatchSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateSqlInjectionMatchSet" },
        { "service": "WAFRegional", "action": "DeleteSqlInjectionMatchSet" }
      ]
    },
    "web_acl": {
      "create": [
        { "service": "WAFRegional", "action": "CreateWebACL" },
        { "service": "WAFRegional", "action": "PutLoggingConfiguration" },
        { "service": "WAFRegional", "action": "UpdateWebACL" },
        { "service": "WAFRegional", "action": "GetWebACL" },
        { "service": "WAFRegional", "action": "GetLoggingConfiguration" }
      ],
      "read": [
        { "service": "WAFRegional", "action": "GetWebACL" },
        { "service": "WAFRegional", "action": "GetLoggingConfiguration" }
      ],
      "update": [
        { "service": "WAFRegional", "action": "UpdateWebACL" },
        { "service": "WAFRegional", "action": "PutLoggingConfiguration" },
        { "service": "WAFRegional", "action": "DeleteLoggingConfiguration" },
        { "service": "WAFRegional", "action": "GetWebACL" },
        { "service": "WAFRegional", "action": "GetLoggingConfiguration" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateWebACL" },
        { "service": "WAFRegional", "action": "DeleteWebACL" }
      ]
    },
    "web_acl_association": {
      "create": [
        { "service": "WAFRegional", "action": "AssociateWebACL" },
        { "service": "WAFRegional", "action": "AssociateWebACL" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetWebACLForResource" }],
      "update": [],
      "delete": [{ "service": "WAFRegional", "action": "DisassociateWebACL" }]
    },
    "xss_match_set": {
      "create": [
        { "service": "WAFRegional", "action": "CreateXssMatchSet" },
        { "service": "WAFRegional", "action": "UpdateXssMatchSet" },
        { "service": "WAFRegional", "action": "GetXssMatchSet" }
      ],
      "read": [{ "service": "WAFRegional", "action": "GetXssMatchSet" }],
      "update": [
        { "service": "WAFRegional", "action": "UpdateXssMatchSet" },
        { "service": "WAFRegional", "action": "GetXssMatchSet" }
      ],
      "delete": [
        { "service": "WAFRegional", "action": "UpdateXssMatchSet" },
        { "service": "WAFRegional", "action": "DeleteXssMatchSet" }
      ]
    }
  },
  "wafv2": {
    "ip_set": {
      "create": [
        { "service": "WAFV2", "action": "CreateIPSet" },
        { "service": "WAFV2", "action": "GetIPSet" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetIPSet" }],
      "update": [
        { "service": "WAFV2", "action": "UpdateIPSet" },
        { "service": "WAFV2", "action": "GetIPSet" }
      ],
      "delete": [{ "service": "WAFV2", "action": "DeleteIPSet" }]
    },
    "regex_pattern_set": {
      "create": [
        { "service": "WAFV2", "action": "CreateRegexPatternSet" },
        { "service": "WAFV2", "action": "GetRegexPatternSet" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetRegexPatternSet" }],
      "update": [
        { "service": "WAFV2", "action": "UpdateRegexPatternSet" },
        { "service": "WAFV2", "action": "GetRegexPatternSet" }
      ],
      "delete": [{ "service": "WAFV2", "action": "DeleteRegexPatternSet" }]
    },
    "rule_group": {
      "create": [
        { "service": "WAFV2", "action": "CreateRuleGroup" },
        { "service": "WAFV2", "action": "GetRuleGroup" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetRuleGroup" }],
      "update": [
        { "service": "WAFV2", "action": "UpdateRuleGroup" },
        { "service": "WAFV2", "action": "GetRuleGroup" }
      ],
      "delete": [{ "service": "WAFV2", "action": "DeleteRuleGroup" }]
    },
    "web_acl": {
      "create": [
        { "service": "WAFV2", "action": "CreateWebACL" },
        { "service": "WAFV2", "action": "GetWebACL" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetWebACL" }],
      "update": [
        { "service": "WAFV2", "action": "UpdateWebACL" },
        { "service": "WAFV2", "action": "GetWebACL" }
      ],
      "delete": [{ "service": "WAFV2", "action": "DeleteWebACL" }]
    },
    "web_acl_association": {
      "create": [
        { "service": "WAFV2", "action": "AssociateWebACL" },
        { "service": "WAFV2", "action": "GetWebACLForResource" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetWebACLForResource" }],
      "update": [],
      "delete": [{ "service": "WAFV2", "action": "DisassociateWebACL" }]
    },
    "web_acl_logging_configuration": {
      "create": [
        { "service": "WAFV2", "action": "PutLoggingConfiguration" },
        { "service": "WAFV2", "action": "GetLoggingConfiguration" }
      ],
      "read": [{ "service": "WAFV2", "action": "GetLoggingConfiguration" }],
      "update": [],
      "delete": [{ "service": "WAFV2", "action": "DeleteLoggingConfiguration" }]
    }
  },
  "worklink": {
    "fleet": {
      "create": [
        { "service": "WorkLink", "action": "CreateFleet" },
        { "service": "WorkLink", "action": "UpdateAuditStreamConfiguration" },
        { "service": "WorkLink", "action": "UpdateCompanyNetworkConfiguration" },
        { "service": "WorkLink", "action": "UpdateDevicePolicyConfiguration" },
        { "service": "WorkLink", "action": "UpdateIdentityProviderConfiguration" },
        { "service": "WorkLink", "action": "DescribeFleetMetadata" },
        { "service": "WorkLink", "action": "DescribeAuditStreamConfiguration" },
        { "service": "WorkLink", "action": "DescribeCompanyNetworkConfiguration" },
        { "service": "WorkLink", "action": "DescribeIdentityProviderConfiguration" },
        { "service": "WorkLink", "action": "DescribeDevicePolicyConfiguration" }
      ],
      "read": [
        { "service": "WorkLink", "action": "DescribeFleetMetadata" },
        { "service": "WorkLink", "action": "DescribeAuditStreamConfiguration" },
        { "service": "WorkLink", "action": "DescribeCompanyNetworkConfiguration" },
        { "service": "WorkLink", "action": "DescribeIdentityProviderConfiguration" },
        { "service": "WorkLink", "action": "DescribeDevicePolicyConfiguration" }
      ],
      "update": [
        { "service": "WorkLink", "action": "UpdateFleetMetadata" },
        { "service": "WorkLink", "action": "UpdateAuditStreamConfiguration" },
        { "service": "WorkLink", "action": "UpdateCompanyNetworkConfiguration" },
        { "service": "WorkLink", "action": "UpdateDevicePolicyConfiguration" },
        { "service": "WorkLink", "action": "UpdateIdentityProviderConfiguration" },
        { "service": "WorkLink", "action": "DescribeFleetMetadata" },
        { "service": "WorkLink", "action": "DescribeAuditStreamConfiguration" },
        { "service": "WorkLink", "action": "DescribeCompanyNetworkConfiguration" },
        { "service": "WorkLink", "action": "DescribeIdentityProviderConfiguration" },
        { "service": "WorkLink", "action": "DescribeDevicePolicyConfiguration" }
      ],
      "delete": [
        { "service": "WorkLink", "action": "DeleteFleet" },
        { "service": "WorkLink", "action": "DescribeFleetMetadata" }
      ]
    },
    "website_certificate_authority_association": {
      "create": [
        { "service": "WorkLink", "action": "AssociateWebsiteCertificateAuthority" },
        { "service": "WorkLink", "action": "DescribeWebsiteCertificateAuthority" }
      ],
      "read": [{ "service": "WorkLink", "action": "DescribeWebsiteCertificateAuthority" }],
      "update": [],
      "delete": [
        { "service": "WorkLink", "action": "DisassociateWebsiteCertificateAuthority" },
        { "service": "WorkLink", "action": "DescribeWebsiteCertificateAuthority" }
      ]
    }
  },
  "workspaces": {
    "directory": {
      "create": [
        { "service": "WorkSpaces", "action": "RegisterWorkspaceDirectory" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaceDirectories" },
        { "service": "WorkSpaces", "action": "ModifySelfservicePermissions" },
        { "service": "WorkSpaces", "action": "ModifyWorkspaceAccessProperties" },
        { "service": "WorkSpaces", "action": "ModifyWorkspaceCreationProperties" },
        { "service": "WorkSpaces", "action": "AssociateIpGroups" }
      ],
      "read": [{ "service": "WorkSpaces", "action": "DescribeWorkspaceDirectories" }],
      "update": [
        { "service": "WorkSpaces", "action": "ModifySelfservicePermissions" },
        { "service": "WorkSpaces", "action": "ModifyWorkspaceAccessProperties" },
        { "service": "WorkSpaces", "action": "ModifyWorkspaceCreationProperties" },
        { "service": "WorkSpaces", "action": "AssociateIpGroups" },
        { "service": "WorkSpaces", "action": "DisassociateIpGroups" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaceDirectories" }
      ],
      "delete": [
        { "service": "WorkSpaces", "action": "DeregisterWorkspaceDirectory" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaceDirectories" }
      ]
    },
    "ip_group": {
      "create": [
        { "service": "WorkSpaces", "action": "CreateIpGroup" },
        { "service": "WorkSpaces", "action": "DescribeIpGroups" }
      ],
      "read": [{ "service": "WorkSpaces", "action": "DescribeIpGroups" }],
      "update": [
        { "service": "WorkSpaces", "action": "UpdateRulesOfIpGroup" },
        { "service": "WorkSpaces", "action": "DescribeIpGroups" }
      ],
      "delete": [
        { "service": "WorkSpaces", "action": "DescribeWorkspaceDirectories" },
        { "service": "WorkSpaces", "action": "DisassociateIpGroups" },
        { "service": "WorkSpaces", "action": "DeleteIpGroup" }
      ]
    },
    "workspace": {
      "create": [
        { "service": "WorkSpaces", "action": "CreateWorkspaces" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaces" }
      ],
      "read": [{ "service": "WorkSpaces", "action": "DescribeWorkspaces" }],
      "update": [
        { "service": "WorkSpaces", "action": "ModifyWorkspaceProperties" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaces" }
      ],
      "delete": [
        { "service": "WorkSpaces", "action": "TerminateWorkspaces" },
        { "service": "WorkSpaces", "action": "DescribeWorkspaces" }
      ]
    }
  },
  "xray": {
    "encryption_config": {
      "create": [
        { "service": "XRay", "action": "PutEncryptionConfig" },
        { "service": "XRay", "action": "GetEncryptionConfig" },
        { "service": "XRay", "action": "GetEncryptionConfig" }
      ],
      "read": [{ "service": "XRay", "action": "GetEncryptionConfig" }],
      "update": [],
      "delete": []
    },
    "group": {
      "create": [
        { "service": "XRay", "action": "CreateGroup" },
        { "service": "XRay", "action": "GetGroup" }
      ],
      "read": [{ "service": "XRay", "action": "GetGroup" }],
      "update": [
        { "service": "XRay", "action": "UpdateGroup" },
        { "service": "XRay", "action": "GetGroup" }
      ],
      "delete": [{ "service": "XRay", "action": "DeleteGroup" }]
    },
    "sampling_rule": {
      "create": [
        { "service": "XRay", "action": "CreateSamplingRule" },
        { "service": "XRay", "action": "GetSamplingRules" }
      ],
      "read": [{ "service": "XRay", "action": "GetSamplingRules" }],
      "update": [
        { "service": "XRay", "action": "UpdateSamplingRule" },
        { "service": "XRay", "action": "GetSamplingRules" }
      ],
      "delete": [{ "service": "XRay", "action": "DeleteSamplingRule" }]
    }
  }
}
